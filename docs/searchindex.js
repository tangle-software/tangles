Search.setIndex({"docnames": ["index", "reference/api/tangles", "reference/api/tangles.FTreeNode", "reference/api/tangles.FTreeNode.children", "reference/api/tangles.FTreeNode.copy", "reference/api/tangles.FTreeNode.copy_subtree", "reference/api/tangles.FTreeNode.copy_subtree_into_children", "reference/api/tangles.FTreeNode.detach", "reference/api/tangles.FTreeNode.from_indicator_matrix", "reference/api/tangles.FTreeNode.is_leaf", "reference/api/tangles.FTreeNode.leaves_in_subtree", "reference/api/tangles.FTreeNode.level", "reference/api/tangles.FTreeNode.level_in_subtree", "reference/api/tangles.FTreeNode.path_from_root_indicator", "reference/api/tangles.FTreeNode.set_left_child", "reference/api/tangles.FTreeNode.set_right_child", "reference/api/tangles.FTreeNode.to_indicator_matrix", "reference/api/tangles.Tangle", "reference/api/tangles.Tangle.children", "reference/api/tangles.Tangle.copy", "reference/api/tangles.Tangle.copy_subtree", "reference/api/tangles.Tangle.copy_subtree_into_children", "reference/api/tangles.Tangle.detach", "reference/api/tangles.Tangle.equal_data", "reference/api/tangles.Tangle.from_indicator_matrix", "reference/api/tangles.Tangle.is_leaf", "reference/api/tangles.Tangle.leaves_in_subtree", "reference/api/tangles.Tangle.level", "reference/api/tangles.Tangle.level_in_subtree", "reference/api/tangles.Tangle.open", "reference/api/tangles.Tangle.path_from_root_indicator", "reference/api/tangles.Tangle.set_left_child", "reference/api/tangles.Tangle.set_right_child", "reference/api/tangles.Tangle.to_indicator_matrix", "reference/api/tangles.TangleSearchTree", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers", "reference/api/tangles.TangleSearchTree.k_tangles", "reference/api/tangles.TangleSearchTree.limit", "reference/api/tangles.TangleSearchTree.load", "reference/api/tangles.TangleSearchTree.maximal_tangles", "reference/api/tangles.TangleSearchTree.number_of_separations", "reference/api/tangles.TangleSearchTree.root", "reference/api/tangles.TangleSearchTree.save", "reference/api/tangles.TangleSearchTree.search_tree", "reference/api/tangles.TangleSearchTree.sep_ids", "reference/api/tangles.TangleSearchTree.tangle_matrix", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement", "reference/api/tangles.TangleSweep", "reference/api/tangles.TangleSweep.append_separation", "reference/api/tangles.TangleSweep.greedy_search", "reference/api/tangles.TangleSweep.insert_separation", "reference/api/tangles.TangleSweep.sweep_below", "reference/api/tangles.TangleSweep.sweep_one", "reference/api/tangles.TangleSweep.tree", "reference/api/tangles.ToTEdge", "reference/api/tangles.ToTEdge.other_end", "reference/api/tangles.ToTNode", "reference/api/tangles.ToTNode.degree", "reference/api/tangles.ToTNode.is_leaf", "reference/api/tangles.ToTNode.neighbours", "reference/api/tangles.ToTNode.set_label", "reference/api/tangles.TreeOfTangles", "reference/api/tangles.TreeOfTangles.any_node", "reference/api/tangles.UncrossingSweep", "reference/api/tangles.UncrossingSweep.create_tot", "reference/api/tangles.UncrossingSweep.sweep_below", "reference/api/tangles.UncrossingSweep.sweep_one", "reference/api/tangles.UncrossingSweep.tangle_matrix", "reference/api/tangles.UncrossingSweep.tree", "reference/api/tangles.agreement", "reference/api/tangles.agreement.AgreementFunc", "reference/api/tangles.agreement.AgreementFuncBitarray", "reference/api/tangles.agreement.AgreementFuncBitarrayBips", "reference/api/tangles.agreement.CalculateAgreement", "reference/api/tangles.agreement_func", "reference/api/tangles.analysis", "reference/api/tangles.analysis.coherence_levels", "reference/api/tangles.analysis.complexity_levels", "reference/api/tangles.analysis.hard_clustering_tuebingen", "reference/api/tangles.analysis.soft_clustering_tuebingen", "reference/api/tangles.analysis.tangle_score", "reference/api/tangles.analysis.visibility", "reference/api/tangles.convenience", "reference/api/tangles.convenience.NominalVariableValues", "reference/api/tangles.convenience.NominalVariableValues.invert_op", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.NumericalVariableValues", "reference/api/tangles.convenience.NumericalVariableValues.invert_op", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.OrderFunctionO1", "reference/api/tangles.convenience.OrderFunctionO1biased", "reference/api/tangles.convenience.OrderFunctionO2", "reference/api/tangles.convenience.OrderFunctionO3", "reference/api/tangles.convenience.OrderFunctionO4", "reference/api/tangles.convenience.OrdinalVariableValues", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col", "reference/api/tangles.convenience.Survey", "reference/api/tangles.convenience.Survey.__getitem__", "reference/api/tangles.convenience.Survey.check_variables", "reference/api/tangles.convenience.Survey.complete_rows", "reference/api/tangles.convenience.Survey.copy", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent", "reference/api/tangles.convenience.Survey.guess_missing_variable_ranges", "reference/api/tangles.convenience.Survey.guess_missing_variable_types", "reference/api/tangles.convenience.Survey.interpret_column_selection", "reference/api/tangles.convenience.Survey.load", "reference/api/tangles.convenience.Survey.num_questions", "reference/api/tangles.convenience.Survey.num_respondents", "reference/api/tangles.convenience.Survey.replace_variable_names", "reference/api/tangles.convenience.Survey.replace_variable_value_labels", "reference/api/tangles.convenience.Survey.replace_variable_values", "reference/api/tangles.convenience.Survey.save", "reference/api/tangles.convenience.Survey.select_questions", "reference/api/tangles.convenience.Survey.select_respondents", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data", "reference/api/tangles.convenience.Survey.set_variable_labels", "reference/api/tangles.convenience.Survey.set_variable_types", "reference/api/tangles.convenience.Survey.set_variable_value_lists", "reference/api/tangles.convenience.Survey.shape", "reference/api/tangles.convenience.Survey.summarize", "reference/api/tangles.convenience.Survey.variable_info", "reference/api/tangles.convenience.SurveyFeatureFactory", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc", "reference/api/tangles.convenience.SurveyTangles", "reference/api/tangles.convenience.SurveyTangles.change_agreement", "reference/api/tangles.convenience.SurveyTangles.feature_system", "reference/api/tangles.convenience.SurveyTangles.initialize_search", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata", "reference/api/tangles.convenience.SurveyTangles.search", "reference/api/tangles.convenience.SurveyTangles.sepcified_features", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix", "reference/api/tangles.convenience.SurveyTangles.typical_answers", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound", "reference/api/tangles.convenience.SurveyVariable", "reference/api/tangles.convenience.SurveyVariable.add_values", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list", "reference/api/tangles.convenience.SurveyVariable.create_values", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name", "reference/api/tangles.convenience.SurveyVariable.replace_values", "reference/api/tangles.convenience.SurveyVariable.set_value_labels", "reference/api/tangles.convenience.SurveyVariable.set_values", "reference/api/tangles.convenience.SurveyVariable.to_row", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.value_class", "reference/api/tangles.convenience.SurveyVariableValues", "reference/api/tangles.convenience.SurveyVariableValues.invert_op", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification", "reference/api/tangles.convenience.TangleSweepFeatureSys", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.append_separation", "reference/api/tangles.convenience.TangleSweepFeatureSys.greedy_search", "reference/api/tangles.convenience.TangleSweepFeatureSys.insert_separation", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_sep_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_below", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_one", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree", "reference/api/tangles.convenience.UnionOfIntervals", "reference/api/tangles.convenience.binary_unique_value_features", "reference/api/tangles.convenience.extensive_numericvar_features", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides", "reference/api/tangles.convenience.nominalvar_features_all_cats", "reference/api/tangles.convenience.numericvar_features_inside_regular_bins", "reference/api/tangles.convenience.numericvar_features_split_regular_ge", "reference/api/tangles.convenience.ordinalvar_features_ge_all_splits", "reference/api/tangles.convenience.search_tangles", "reference/api/tangles.convenience.search_tangles_uncrossed", "reference/api/tangles.convenience.simple_unique_value_features", "reference/api/tangles.guiding", "reference/api/tangles.guiding.get_tangle_by_path", "reference/api/tangles.guiding.guided_tangle", "reference/api/tangles.guiding.is_guiding", "reference/api/tangles.search", "reference/api/tangles.search.extending_tangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles", "reference/api/tangles.search.progress", "reference/api/tangles.search.progress.DefaultProgressCallback", "reference/api/tangles.separations", "reference/api/tangles.separations.FeatureSystem", "reference/api/tangles.separations.FeatureSystem.__getitem__", "reference/api/tangles.separations.FeatureSystem.add_features", "reference/api/tangles.separations.FeatureSystem.add_seps", "reference/api/tangles.separations.FeatureSystem.all_feature_ids", "reference/api/tangles.separations.FeatureSystem.all_sep_ids", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info", "reference/api/tangles.separations.FeatureSystem.compute_infimum", "reference/api/tangles.separations.FeatureSystem.crossing_seps", "reference/api/tangles.separations.FeatureSystem.feature_metadata", "reference/api/tangles.separations.FeatureSystem.get_corners", "reference/api/tangles.separations.FeatureSystem.get_feature_ids", "reference/api/tangles.separations.FeatureSystem.get_sep_ids", "reference/api/tangles.separations.FeatureSystem.infimum_of_two", "reference/api/tangles.separations.FeatureSystem.is_le", "reference/api/tangles.separations.FeatureSystem.is_nested", "reference/api/tangles.separations.FeatureSystem.is_subset", "reference/api/tangles.separations.FeatureSystem.metadata_matrix", "reference/api/tangles.separations.FeatureSystem.separation_metadata", "reference/api/tangles.separations.FeatureSystem.with_array", "reference/api/tangles.separations.FeatureSystem.with_sparse_array", "reference/api/tangles.separations.MetaData", "reference/api/tangles.separations.MetaData.append", "reference/api/tangles.separations.SetSeparationSystem", "reference/api/tangles.separations.SetSeparationSystem.__getitem__", "reference/api/tangles.separations.SetSeparationSystem.add_seps", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps", "reference/api/tangles.separations.SetSeparationSystem.get_corners", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.infimum_of_two", "reference/api/tangles.separations.SetSeparationSystem.is_le", "reference/api/tangles.separations.SetSeparationSystem.is_nested", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata", "reference/api/tangles.separations.SetSeparationSystem.with_array", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemBase", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.infimum_of_two", "reference/api/tangles.separations.SetSeparationSystemBase.is_le", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata", "reference/api/tangles.separations.SetSeparationSystemBase.with_array", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemOrderFunc", "reference/api/tangles.separations.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators", "reference/api/tangles.separations.atomic_sets.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_to_seps", "reference/api/tangles.separations.atomic_sets.seps_to_atomic", "reference/api/tangles.separations.finding", "reference/api/tangles.separations.finding.OrderFuncDerivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative", "reference/api/tangles.separations.finding.add_all_corners_of_features", "reference/api/tangles.separations.finding.min_S_T_cut", "reference/api/tangles.separations.finding.minimize_cut", "reference/api/tangles.separations.finding.nodal_domains", "reference/api/tangles.separations.finding.pca_features", "reference/api/tangles.separations.finding.random_features", "reference/api/tangles.separations.finding.spectral_features", "reference/api/tangles.separations.finding.spectral_features_splitted", "reference/api/tangles.separations.util", "reference/api/tangles.separations.util.order_func_balance", "reference/api/tangles.separations.util.order_func_min_side_size", "reference/api/tangles.uncross_distinguishers", "reference/api/tangles.util", "reference/api/tangles.util.entropy", "reference/api/tangles.util.entropy.colsplit_mutual_information", "reference/api/tangles.util.entropy.datapointwise_information_gains", "reference/api/tangles.util.entropy.entropy", "reference/api/tangles.util.entropy.information_gain", "reference/api/tangles.util.entropy.joint_entropy", "reference/api/tangles.util.entropy.pairwise_mutual_information", "reference/api/tangles.util.graph", "reference/api/tangles.util.graph.connected_component_indicators", "reference/api/tangles.util.graph.cut_weight", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.cut_weight_order", "reference/api/tangles.util.graph.cut_weight.ncut_order", "reference/api/tangles.util.graph.cut_weight.ratiocut_order", "reference/api/tangles.util.graph.greedy_neighborhood", "reference/api/tangles.util.graph.greedy_neighborhood_old", "reference/api/tangles.util.graph.laplacian", "reference/api/tangles.util.graph.minor", "reference/api/tangles.util.graph.minor.contract_graph", "reference/api/tangles.util.graph.modularity_matrix", "reference/api/tangles.util.graph.normalized_laplacian", "reference/api/tangles.util.graph.similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph", "reference/api/tangles.util.graph.similarity.grid_distance_graph", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors", "reference/api/tangles.util.logic", "reference/api/tangles.util.logic.ConjunctiveNormalForm", "reference/api/tangles.util.logic.DisjunctiveNormalForm", "reference/api/tangles.util.logic.LogicTerm", "reference/api/tangles.util.logic.TextTerm", "reference/api/tangles.util.logic.append", "reference/api/tangles.util.logic.distribute", "reference/api/tangles.util.logic.sep_to_term", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic", "reference/api/tangles.util.logic.simplify", "reference/api/tangles.util.logic.term", "reference/api/tangles.util.logic.term.SemanticTextTerm", "reference/api/tangles.util.matrix_order", "reference/api/tangles.util.matrix_order.MatrixOrderSVD", "reference/api/tangles.util.matrix_order.covariance_order", "reference/api/tangles.util.matrix_order.logdet_order", "reference/api/tangles.util.matrix_order.margin_order_matrix", "reference/api/tangles.util.matrix_order.matrix_order", "reference/api/tangles.util.matrix_order.o_five", "reference/api/tangles.util.matrix_order.o_seven", "reference/api/tangles.util.preprocessing", "reference/api/tangles.util.preprocessing.balance", "reference/api/tangles.util.preprocessing.normalize_length", "reference/api/tangles.util.preprocessing.standardize", "reference/api/tangles.util.tree", "reference/api/tangles.util.tree.BinTreeNetworkX", "reference/api/tangles.util.tree.BinTreeNetworkX.draw", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label", "reference/api/tangles.util.tree.BinTreeNetworkX.graph", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout", "reference/api/tangles.util.tree.BinTreeNode", "reference/api/tangles.util.tree.BinTreeNode.children", "reference/api/tangles.util.tree.BinTreeNode.copy", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children", "reference/api/tangles.util.tree.BinTreeNode.detach", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix", "reference/api/tangles.util.tree.BinTreeNode.is_leaf", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.level", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator", "reference/api/tangles.util.tree.BinTreeNode.set_left_child", "reference/api/tangles.util.tree.BinTreeNode.set_right_child", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix", "reference/api/tangles.util.tree.GraphNode", "reference/api/tangles.util.tree.TreeNode", "reference/api/tangles.util.tree.plot_tree", "reference/api/tangles.util.tree.print_node_label", "reference/api/tangles.util.ui", "reference/api/tangles.util.ui.SplitGraph", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles", "reference/api/tangles.util.ui.XYPicker", "reference/api/tangles.util.ui.XYPicker.show", "reference/api/tangles.util.ui.XYPicker.update", "reference/api/tangles.util.ui.plot_annotated", "reference/api/tangles.util.ui.wrap_annotation_func_ax", "reference/index", "tutorials/EuropeanValueStudies", "tutorials/index"], "filenames": ["index.rst", "reference/api/tangles.rst", "reference/api/tangles.FTreeNode.rst", "reference/api/tangles.FTreeNode.children.rst", "reference/api/tangles.FTreeNode.copy.rst", "reference/api/tangles.FTreeNode.copy_subtree.rst", "reference/api/tangles.FTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.FTreeNode.detach.rst", "reference/api/tangles.FTreeNode.from_indicator_matrix.rst", "reference/api/tangles.FTreeNode.is_leaf.rst", "reference/api/tangles.FTreeNode.leaves_in_subtree.rst", "reference/api/tangles.FTreeNode.level.rst", "reference/api/tangles.FTreeNode.level_in_subtree.rst", "reference/api/tangles.FTreeNode.path_from_root_indicator.rst", "reference/api/tangles.FTreeNode.set_left_child.rst", "reference/api/tangles.FTreeNode.set_right_child.rst", "reference/api/tangles.FTreeNode.to_indicator_matrix.rst", "reference/api/tangles.Tangle.rst", "reference/api/tangles.Tangle.children.rst", "reference/api/tangles.Tangle.copy.rst", "reference/api/tangles.Tangle.copy_subtree.rst", "reference/api/tangles.Tangle.copy_subtree_into_children.rst", "reference/api/tangles.Tangle.detach.rst", "reference/api/tangles.Tangle.equal_data.rst", "reference/api/tangles.Tangle.from_indicator_matrix.rst", "reference/api/tangles.Tangle.is_leaf.rst", "reference/api/tangles.Tangle.leaves_in_subtree.rst", "reference/api/tangles.Tangle.level.rst", "reference/api/tangles.Tangle.level_in_subtree.rst", "reference/api/tangles.Tangle.open.rst", "reference/api/tangles.Tangle.path_from_root_indicator.rst", "reference/api/tangles.Tangle.set_left_child.rst", "reference/api/tangles.Tangle.set_right_child.rst", "reference/api/tangles.Tangle.to_indicator_matrix.rst", "reference/api/tangles.TangleSearchTree.rst", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers.rst", "reference/api/tangles.TangleSearchTree.k_tangles.rst", "reference/api/tangles.TangleSearchTree.limit.rst", "reference/api/tangles.TangleSearchTree.load.rst", "reference/api/tangles.TangleSearchTree.maximal_tangles.rst", "reference/api/tangles.TangleSearchTree.number_of_separations.rst", "reference/api/tangles.TangleSearchTree.root.rst", "reference/api/tangles.TangleSearchTree.save.rst", "reference/api/tangles.TangleSearchTree.search_tree.rst", "reference/api/tangles.TangleSearchTree.sep_ids.rst", "reference/api/tangles.TangleSearchTree.tangle_matrix.rst", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement.rst", "reference/api/tangles.TangleSweep.rst", "reference/api/tangles.TangleSweep.append_separation.rst", "reference/api/tangles.TangleSweep.greedy_search.rst", "reference/api/tangles.TangleSweep.insert_separation.rst", "reference/api/tangles.TangleSweep.sweep_below.rst", "reference/api/tangles.TangleSweep.sweep_one.rst", "reference/api/tangles.TangleSweep.tree.rst", "reference/api/tangles.ToTEdge.rst", "reference/api/tangles.ToTEdge.other_end.rst", "reference/api/tangles.ToTNode.rst", "reference/api/tangles.ToTNode.degree.rst", "reference/api/tangles.ToTNode.is_leaf.rst", "reference/api/tangles.ToTNode.neighbours.rst", "reference/api/tangles.ToTNode.set_label.rst", "reference/api/tangles.TreeOfTangles.rst", "reference/api/tangles.TreeOfTangles.any_node.rst", "reference/api/tangles.UncrossingSweep.rst", "reference/api/tangles.UncrossingSweep.create_tot.rst", "reference/api/tangles.UncrossingSweep.sweep_below.rst", "reference/api/tangles.UncrossingSweep.sweep_one.rst", "reference/api/tangles.UncrossingSweep.tangle_matrix.rst", "reference/api/tangles.UncrossingSweep.tree.rst", "reference/api/tangles.agreement.rst", "reference/api/tangles.agreement.AgreementFunc.rst", "reference/api/tangles.agreement.AgreementFuncBitarray.rst", "reference/api/tangles.agreement.AgreementFuncBitarrayBips.rst", "reference/api/tangles.agreement.CalculateAgreement.rst", "reference/api/tangles.agreement_func.rst", "reference/api/tangles.analysis.rst", "reference/api/tangles.analysis.coherence_levels.rst", "reference/api/tangles.analysis.complexity_levels.rst", "reference/api/tangles.analysis.hard_clustering_tuebingen.rst", "reference/api/tangles.analysis.soft_clustering_tuebingen.rst", "reference/api/tangles.analysis.tangle_score.rst", "reference/api/tangles.analysis.visibility.rst", "reference/api/tangles.convenience.rst", "reference/api/tangles.convenience.NominalVariableValues.rst", "reference/api/tangles.convenience.NominalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.NumericalVariableValues.rst", "reference/api/tangles.convenience.NumericalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.OrderFunctionO1.rst", "reference/api/tangles.convenience.OrderFunctionO1biased.rst", "reference/api/tangles.convenience.OrderFunctionO2.rst", "reference/api/tangles.convenience.OrderFunctionO3.rst", "reference/api/tangles.convenience.OrderFunctionO4.rst", "reference/api/tangles.convenience.OrdinalVariableValues.rst", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op.rst", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col.rst", "reference/api/tangles.convenience.Survey.rst", "reference/api/tangles.convenience.Survey.__getitem__.rst", "reference/api/tangles.convenience.Survey.check_variables.rst", "reference/api/tangles.convenience.Survey.complete_rows.rst", "reference/api/tangles.convenience.Survey.copy.rst", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers.rst", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent.rst", "reference/api/tangles.convenience.Survey.guess_missing_variable_ranges.rst", "reference/api/tangles.convenience.Survey.guess_missing_variable_types.rst", "reference/api/tangles.convenience.Survey.interpret_column_selection.rst", "reference/api/tangles.convenience.Survey.load.rst", "reference/api/tangles.convenience.Survey.num_questions.rst", "reference/api/tangles.convenience.Survey.num_respondents.rst", "reference/api/tangles.convenience.Survey.replace_variable_names.rst", "reference/api/tangles.convenience.Survey.replace_variable_value_labels.rst", "reference/api/tangles.convenience.Survey.replace_variable_values.rst", "reference/api/tangles.convenience.Survey.save.rst", "reference/api/tangles.convenience.Survey.select_questions.rst", "reference/api/tangles.convenience.Survey.select_respondents.rst", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data.rst", "reference/api/tangles.convenience.Survey.set_variable_labels.rst", "reference/api/tangles.convenience.Survey.set_variable_types.rst", "reference/api/tangles.convenience.Survey.set_variable_value_lists.rst", "reference/api/tangles.convenience.Survey.shape.rst", "reference/api/tangles.convenience.Survey.summarize.rst", "reference/api/tangles.convenience.Survey.variable_info.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc.rst", "reference/api/tangles.convenience.SurveyTangles.rst", "reference/api/tangles.convenience.SurveyTangles.change_agreement.rst", "reference/api/tangles.convenience.SurveyTangles.feature_system.rst", "reference/api/tangles.convenience.SurveyTangles.initialize_search.rst", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata.rst", "reference/api/tangles.convenience.SurveyTangles.search.rst", "reference/api/tangles.convenience.SurveyTangles.sepcified_features.rst", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix.rst", "reference/api/tangles.convenience.SurveyTangles.typical_answers.rst", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound.rst", "reference/api/tangles.convenience.SurveyVariable.rst", "reference/api/tangles.convenience.SurveyVariable.add_values.rst", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.create_values.rst", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name.rst", "reference/api/tangles.convenience.SurveyVariable.replace_values.rst", "reference/api/tangles.convenience.SurveyVariable.set_value_labels.rst", "reference/api/tangles.convenience.SurveyVariable.set_values.rst", "reference/api/tangles.convenience.SurveyVariable.to_row.rst", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.value_class.rst", "reference/api/tangles.convenience.SurveyVariableValues.rst", "reference/api/tangles.convenience.SurveyVariableValues.invert_op.rst", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.append_separation.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.greedy_search.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.insert_separation.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_sep_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_below.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_one.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree.rst", "reference/api/tangles.convenience.UnionOfIntervals.rst", "reference/api/tangles.convenience.binary_unique_value_features.rst", "reference/api/tangles.convenience.extensive_numericvar_features.rst", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides.rst", "reference/api/tangles.convenience.nominalvar_features_all_cats.rst", "reference/api/tangles.convenience.numericvar_features_inside_regular_bins.rst", "reference/api/tangles.convenience.numericvar_features_split_regular_ge.rst", "reference/api/tangles.convenience.ordinalvar_features_ge_all_splits.rst", "reference/api/tangles.convenience.search_tangles.rst", "reference/api/tangles.convenience.search_tangles_uncrossed.rst", "reference/api/tangles.convenience.simple_unique_value_features.rst", "reference/api/tangles.guiding.rst", "reference/api/tangles.guiding.get_tangle_by_path.rst", "reference/api/tangles.guiding.guided_tangle.rst", "reference/api/tangles.guiding.is_guiding.rst", "reference/api/tangles.search.rst", "reference/api/tangles.search.extending_tangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles.rst", "reference/api/tangles.search.progress.rst", "reference/api/tangles.search.progress.DefaultProgressCallback.rst", "reference/api/tangles.separations.rst", "reference/api/tangles.separations.FeatureSystem.rst", "reference/api/tangles.separations.FeatureSystem.__getitem__.rst", "reference/api/tangles.separations.FeatureSystem.add_features.rst", "reference/api/tangles.separations.FeatureSystem.add_seps.rst", "reference/api/tangles.separations.FeatureSystem.all_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.all_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info.rst", "reference/api/tangles.separations.FeatureSystem.compute_infimum.rst", "reference/api/tangles.separations.FeatureSystem.crossing_seps.rst", "reference/api/tangles.separations.FeatureSystem.feature_metadata.rst", "reference/api/tangles.separations.FeatureSystem.get_corners.rst", "reference/api/tangles.separations.FeatureSystem.get_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.get_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.infimum_of_two.rst", "reference/api/tangles.separations.FeatureSystem.is_le.rst", "reference/api/tangles.separations.FeatureSystem.is_nested.rst", "reference/api/tangles.separations.FeatureSystem.is_subset.rst", "reference/api/tangles.separations.FeatureSystem.metadata_matrix.rst", "reference/api/tangles.separations.FeatureSystem.separation_metadata.rst", "reference/api/tangles.separations.FeatureSystem.with_array.rst", "reference/api/tangles.separations.FeatureSystem.with_sparse_array.rst", "reference/api/tangles.separations.MetaData.rst", "reference/api/tangles.separations.MetaData.append.rst", "reference/api/tangles.separations.SetSeparationSystem.rst", "reference/api/tangles.separations.SetSeparationSystem.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystem.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.infimum_of_two.rst", "reference/api/tangles.separations.SetSeparationSystem.is_le.rst", "reference/api/tangles.separations.SetSeparationSystem.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystem.with_array.rst", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.rst", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.infimum_of_two.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_le.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemOrderFunc.rst", "reference/api/tangles.separations.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators.rst", "reference/api/tangles.separations.atomic_sets.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_to_seps.rst", "reference/api/tangles.separations.atomic_sets.seps_to_atomic.rst", "reference/api/tangles.separations.finding.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative.rst", "reference/api/tangles.separations.finding.add_all_corners_of_features.rst", "reference/api/tangles.separations.finding.min_S_T_cut.rst", "reference/api/tangles.separations.finding.minimize_cut.rst", "reference/api/tangles.separations.finding.nodal_domains.rst", "reference/api/tangles.separations.finding.pca_features.rst", "reference/api/tangles.separations.finding.random_features.rst", "reference/api/tangles.separations.finding.spectral_features.rst", "reference/api/tangles.separations.finding.spectral_features_splitted.rst", "reference/api/tangles.separations.util.rst", "reference/api/tangles.separations.util.order_func_balance.rst", "reference/api/tangles.separations.util.order_func_min_side_size.rst", "reference/api/tangles.uncross_distinguishers.rst", "reference/api/tangles.util.rst", "reference/api/tangles.util.entropy.rst", "reference/api/tangles.util.entropy.colsplit_mutual_information.rst", "reference/api/tangles.util.entropy.datapointwise_information_gains.rst", "reference/api/tangles.util.entropy.entropy.rst", "reference/api/tangles.util.entropy.information_gain.rst", "reference/api/tangles.util.entropy.joint_entropy.rst", "reference/api/tangles.util.entropy.pairwise_mutual_information.rst", "reference/api/tangles.util.graph.rst", "reference/api/tangles.util.graph.connected_component_indicators.rst", "reference/api/tangles.util.graph.cut_weight.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.cut_weight_order.rst", "reference/api/tangles.util.graph.cut_weight.ncut_order.rst", "reference/api/tangles.util.graph.cut_weight.ratiocut_order.rst", "reference/api/tangles.util.graph.greedy_neighborhood.rst", "reference/api/tangles.util.graph.greedy_neighborhood_old.rst", "reference/api/tangles.util.graph.laplacian.rst", "reference/api/tangles.util.graph.minor.rst", "reference/api/tangles.util.graph.minor.contract_graph.rst", "reference/api/tangles.util.graph.modularity_matrix.rst", "reference/api/tangles.util.graph.normalized_laplacian.rst", "reference/api/tangles.util.graph.similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data.rst", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph.rst", "reference/api/tangles.util.graph.similarity.grid_distance_graph.rst", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph.rst", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors.rst", "reference/api/tangles.util.logic.rst", "reference/api/tangles.util.logic.ConjunctiveNormalForm.rst", "reference/api/tangles.util.logic.DisjunctiveNormalForm.rst", "reference/api/tangles.util.logic.LogicTerm.rst", "reference/api/tangles.util.logic.TextTerm.rst", "reference/api/tangles.util.logic.append.rst", "reference/api/tangles.util.logic.distribute.rst", "reference/api/tangles.util.logic.sep_to_term.rst", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic.rst", "reference/api/tangles.util.logic.simplify.rst", "reference/api/tangles.util.logic.term.rst", "reference/api/tangles.util.logic.term.SemanticTextTerm.rst", "reference/api/tangles.util.matrix_order.rst", "reference/api/tangles.util.matrix_order.MatrixOrderSVD.rst", "reference/api/tangles.util.matrix_order.covariance_order.rst", "reference/api/tangles.util.matrix_order.logdet_order.rst", "reference/api/tangles.util.matrix_order.margin_order_matrix.rst", "reference/api/tangles.util.matrix_order.matrix_order.rst", "reference/api/tangles.util.matrix_order.o_five.rst", "reference/api/tangles.util.matrix_order.o_seven.rst", "reference/api/tangles.util.preprocessing.rst", "reference/api/tangles.util.preprocessing.balance.rst", "reference/api/tangles.util.preprocessing.normalize_length.rst", "reference/api/tangles.util.preprocessing.standardize.rst", "reference/api/tangles.util.tree.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.draw.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.graph.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout.rst", "reference/api/tangles.util.tree.BinTreeNode.rst", "reference/api/tangles.util.tree.BinTreeNode.children.rst", "reference/api/tangles.util.tree.BinTreeNode.copy.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.util.tree.BinTreeNode.detach.rst", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix.rst", "reference/api/tangles.util.tree.BinTreeNode.is_leaf.rst", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.level.rst", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator.rst", "reference/api/tangles.util.tree.BinTreeNode.set_left_child.rst", "reference/api/tangles.util.tree.BinTreeNode.set_right_child.rst", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix.rst", "reference/api/tangles.util.tree.GraphNode.rst", "reference/api/tangles.util.tree.TreeNode.rst", "reference/api/tangles.util.tree.plot_tree.rst", "reference/api/tangles.util.tree.print_node_label.rst", "reference/api/tangles.util.ui.rst", "reference/api/tangles.util.ui.SplitGraph.rst", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses.rst", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary.rst", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles.rst", "reference/api/tangles.util.ui.XYPicker.rst", "reference/api/tangles.util.ui.XYPicker.show.rst", "reference/api/tangles.util.ui.XYPicker.update.rst", "reference/api/tangles.util.ui.plot_annotated.rst", "reference/api/tangles.util.ui.wrap_annotation_func_ax.rst", "reference/index.rst", "tutorials/EuropeanValueStudies.ipynb", "tutorials/index.rst"], "titles": ["Tangle Software Documentation", "tangles", "FTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "Tangle", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "equal_data", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "open", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "TangleSearchTree", "get_efficient_distinguishers", "k_tangles", "limit", "load", "maximal_tangles", "number_of_separations", "root", "save", "search_tree", "sep_ids", "tangle_matrix", "tree_height_for_agreement", "TangleSweep", "append_separation", "greedy_search", "insert_separation", "sweep_below", "sweep_one", "tree", "ToTEdge", "other_end", "ToTNode", "degree", "is_leaf", "neighbours", "set_label", "TreeOfTangles", "any_node", "UncrossingSweep", "create_tot", "sweep_below", "sweep_one", "tangle_matrix", "tree", "tangles.agreement", "AgreementFunc", "AgreementFuncBitarray", "AgreementFuncBitarrayBips", "CalculateAgreement", "agreement_func", "tangles.analysis", "coherence_levels", "complexity_levels", "hard_clustering_tuebingen", "soft_clustering_tuebingen", "tangle_score", "visibility", "tangles.convenience", "NominalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "NumericalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "OrderFunctionO1", "OrderFunctionO1biased", "OrderFunctionO2", "OrderFunctionO3", "OrderFunctionO4", "OrdinalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "SimpleSurveyFeatureFactory", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesBothSides", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesImplicit", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures", "create_features", "create_features_for_single_col", "Survey", "__getitem__", "check_variables", "complete_rows", "copy", "count_number_of_unique_answers", "count_valid_answers_per_respondent", "guess_missing_variable_ranges", "guess_missing_variable_types", "interpret_column_selection", "load", "num_questions", "num_respondents", "replace_variable_names", "replace_variable_value_labels", "replace_variable_values", "save", "select_questions", "select_respondents", "set_pyreadstat_meta_data", "set_variable_labels", "set_variable_types", "set_variable_value_lists", "shape", "summarize", "variable_info", "SurveyFeatureFactory", "create_features", "create_features_for_single_col", "SurveyFeatureFactoryDecorator", "create_features", "create_features_for_single_col", "SurveyFeatureFactory_CherryPicker", "create_features", "create_features_for_single_col", "set_factoryfunc", "SurveyTangles", "change_agreement", "feature_system", "initialize_search", "ordered_metadata", "search", "sepcified_features", "tangle_matrix", "typical_answers", "valid_agreement_lower_bound", "SurveyVariable", "add_values", "all_values_as_list", "create_values", "invalid_values_as_list", "is_nominal_type", "is_numeric_type", "is_ordinal_type", "is_valid_type", "is_valid_type_name", "replace_values", "set_value_labels", "set_values", "to_row", "valid_values_as_list", "value_class", "SurveyVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "TangleSweepFeatureSys", "all_oriented_sep_ids", "append_separation", "greedy_search", "insert_separation", "lower_agreement", "original_sep_ids", "sweep_below", "sweep_one", "tangle_matrix", "tree", "UnionOfIntervals", "binary_unique_value_features", "extensive_numericvar_features", "feats2seps_invalids_to_both_sides", "nominalvar_features_all_cats", "numericvar_features_inside_regular_bins", "numericvar_features_split_regular_ge", "ordinalvar_features_ge_all_splits", "search_tangles", "search_tangles_uncrossed", "simple_unique_value_features", "tangles.guiding", "get_tangle_by_path", "guided_tangle", "is_guiding", "tangles.search", "tangles.search.extending_tangles", "ExtendingTangles", "extend_tangles", "tangles.search.progress", "DefaultProgressCallback", "tangles.separations", "FeatureSystem", "__getitem__", "add_features", "add_seps", "all_feature_ids", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "feature_metadata", "get_corners", "get_feature_ids", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "is_subset", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "MetaData", "append", "SetSeparationSystem", "__getitem__", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "get_corners", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "SetSeparationSystemBase", "__getitem__", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "get_corners", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "SetSeparationSystemOrderFunc", "tangles.separations.atomic_sets", "atomic_set_indicators", "atomic_sets", "atomic_to_seps", "seps_to_atomic", "tangles.separations.finding", "OrderFuncDerivative", "change_discrete_derivative", "discrete_derivative", "add_all_corners_of_features", "min_S_T_cut", "minimize_cut", "nodal_domains", "pca_features", "random_features", "spectral_features", "spectral_features_splitted", "tangles.separations.util", "order_func_balance", "order_func_min_side_size", "uncross_distinguishers", "tangles.util", "tangles.util.entropy", "colsplit_mutual_information", "datapointwise_information_gains", "entropy", "information_gain", "joint_entropy", "pairwise_mutual_information", "tangles.util.graph", "connected_component_indicators", "tangles.util.graph.cut_weight", "CutWeightOrder", "change_discrete_derivative", "discrete_derivative", "NCutOrder", "change_discrete_derivative", "discrete_derivative", "RatioCutOrder", "change_discrete_derivative", "discrete_derivative", "cut_weight_order", "ncut_order", "ratiocut_order", "greedy_neighborhood", "greedy_neighborhood_old", "laplacian", "tangles.util.graph.minor", "contract_graph", "modularity_matrix", "normalized_laplacian", "tangles.util.graph.similarity", "cosine_similarity", "cosine_similarity_graph_csr_data", "epsilon_neighborhood_graph", "grid_distance_graph", "image_to_similarity_graph", "k_nearest_neighbors", "tangles.util.logic", "ConjunctiveNormalForm", "DisjunctiveNormalForm", "LogicTerm", "TextTerm", "append", "distribute", "tangles.util.logic.sep_to_term", "RecursionLogic", "simplify", "tangles.util.logic.term", "SemanticTextTerm", "tangles.util.matrix_order", "MatrixOrderSVD", "covariance_order", "logdet_order", "margin_order_matrix", "matrix_order", "o_five", "o_seven", "tangles.util.preprocessing", "balance", "normalize_length", "standardize", "tangles.util.tree", "BinTreeNetworkX", "draw", "get_ids_from_label", "get_label", "graph", "relabel", "tst_layout", "BinTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "GraphNode", "TreeNode", "plot_tree", "print_node_label", "tangles.util.ui", "SplitGraph", "draw_ellipses", "draw_side_and_boundary", "draw_stacked_circles", "XYPicker", "show", "update", "plot_annotated", "wrap_annotation_func_ax", "Reference", "Mindsets - Survey Tangles", "Tutorials"], "terms": {"tutori": 0, "mindset": [0, 388], "survei": [0, 82, 83, 87, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 156, 158, 159, 170, 174, 191, 195, 388], "refer": [0, 113, 148, 153, 197, 198], "modul": [1, 204, 210, 288, 296, 325], "agreement": [1, 17, 19, 23, 26, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 148, 149, 151, 153, 154, 157, 178, 180, 181, 182, 183, 185, 186, 187, 201, 202, 206, 207, 287, 387], "analysi": [1, 76, 77, 78, 79, 80, 81, 112, 114, 272, 280, 388], "conveni": [1, 63, 83, 87, 91, 92, 93, 94, 95, 96, 100, 103, 106, 109, 112, 114, 119, 138, 141, 144, 148, 153, 158, 174, 178, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 387], "guid": [1, 201, 202, 203], "calcul": [1, 74, 75, 76, 77, 78, 79, 80, 81, 200, 206, 211, 218, 221, 224, 228, 234, 239, 241, 243, 246, 250, 255, 257, 259, 262, 272, 276, 278, 279, 280, 290, 308, 309, 310, 314, 315, 322, 323, 325, 330, 331, 387], "analys": [1, 200, 283, 387], "set": [1, 2, 14, 15, 17, 31, 32, 34, 39, 45, 49, 56, 60, 64, 82, 83, 87, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 131, 132, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 158, 170, 181, 187, 192, 200, 202, 230, 231, 248, 249, 264, 265, 267, 268, 269, 277, 279, 280, 281, 311, 312, 319, 338, 341, 357, 369, 370, 374, 381, 382, 387], "search": [1, 10, 17, 26, 34, 37, 38, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 61, 63, 65, 66, 67, 68, 82, 148, 149, 151, 152, 155, 178, 180, 181, 182, 183, 185, 186, 197, 198, 200, 201, 202, 206, 209, 272, 277, 278, 287, 296, 311, 312, 354, 365, 374, 387], "separ": [1, 17, 34, 35, 40, 44, 45, 47, 48, 50, 63, 64, 67, 74, 76, 77, 81, 82, 86, 90, 99, 101, 102, 103, 104, 105, 107, 108, 110, 111, 138, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 156, 174, 177, 178, 179, 180, 182, 184, 187, 192, 197, 198, 206, 207, 211, 214, 216, 217, 218, 219, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 308, 309, 310, 338, 341, 387], "util": [1, 210, 285, 286, 290, 291, 292, 293, 294, 295, 297, 299, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 357, 372, 373, 374, 375, 377, 381, 384, 385], "class": [1, 2, 17, 34, 47, 54, 56, 61, 63, 69, 70, 71, 72, 73, 82, 83, 87, 91, 92, 93, 94, 95, 96, 100, 102, 103, 105, 106, 108, 109, 111, 112, 138, 140, 141, 143, 144, 146, 148, 158, 174, 178, 179, 189, 205, 206, 208, 209, 210, 211, 232, 234, 250, 266, 272, 273, 298, 299, 302, 305, 325, 326, 327, 328, 329, 332, 333, 335, 336, 337, 338, 349, 350, 357, 372, 373, 376, 377, 381, 387], "ftreenod": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "an": [1, 2, 8, 16, 17, 24, 33, 46, 50, 54, 63, 74, 82, 83, 84, 86, 87, 88, 90, 96, 97, 99, 109, 114, 118, 120, 127, 148, 153, 158, 173, 174, 175, 177, 182, 191, 195, 196, 197, 198, 213, 214, 228, 230, 231, 236, 246, 248, 249, 252, 262, 264, 265, 272, 273, 275, 276, 277, 278, 281, 282, 287, 299, 301, 302, 304, 305, 307, 318, 319, 320, 323, 338, 339, 342, 352, 357, 363, 371, 374, 376, 381, 384, 385, 387], "forbidden": [1, 2, 47, 63], "tupl": [1, 2, 17, 35, 45, 47, 63, 74, 83, 84, 86, 87, 88, 90, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 111, 135, 139, 140, 142, 143, 145, 146, 147, 155, 156, 174, 175, 177, 190, 191, 193, 194, 195, 196, 199, 206, 213, 214, 217, 219, 221, 222, 223, 224, 228, 230, 231, 236, 238, 239, 240, 241, 242, 243, 246, 248, 249, 252, 254, 256, 257, 258, 259, 262, 264, 265, 277, 280, 282, 287, 356, 374, 381, 384], "tree": [1, 2, 5, 8, 10, 17, 20, 24, 26, 34, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 149, 153, 178, 180, 181, 182, 183, 185, 186, 197, 200, 201, 202, 287, 288, 350, 351, 352, 354, 355, 356, 357, 360, 363, 365, 372, 373, 374, 375, 387], "ftt": [1, 2], "A": [1, 2, 9, 17, 25, 34, 47, 56, 60, 61, 62, 63, 67, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 97, 100, 102, 103, 105, 106, 108, 109, 111, 112, 113, 114, 115, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 160, 161, 162, 167, 171, 172, 175, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 213, 214, 218, 220, 222, 223, 229, 236, 239, 242, 247, 252, 255, 258, 263, 268, 269, 272, 277, 278, 279, 280, 290, 291, 295, 296, 297, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 325, 330, 331, 335, 337, 338, 339, 340, 341, 342, 349, 350, 364, 374, 375, 376, 377, 379, 380, 381, 384, 388], "node": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 178, 180, 181, 182, 183, 185, 186, 207, 321, 324, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 387], "tanglesearchtre": [1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 63, 68, 149, 178, 187, 188, 201, 202, 387], "root": [1, 2, 5, 8, 11, 13, 16, 17, 20, 24, 27, 30, 33, 34, 43, 44, 49, 181, 354, 357, 360, 363, 366, 368, 371], "binari": [1, 2, 8, 10, 17, 24, 26, 34, 82, 100, 102, 103, 105, 106, 108, 109, 111, 138, 140, 141, 143, 144, 146, 190, 350, 357, 363, 365, 387], "i": [1, 2, 4, 5, 9, 10, 16, 17, 20, 23, 25, 26, 33, 34, 35, 39, 43, 45, 47, 48, 49, 50, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 90, 96, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 145, 146, 148, 149, 152, 153, 155, 156, 158, 163, 164, 165, 166, 167, 171, 173, 177, 179, 180, 181, 182, 187, 191, 194, 195, 197, 198, 200, 201, 203, 206, 207, 211, 213, 217, 218, 220, 222, 223, 225, 227, 228, 230, 231, 234, 238, 239, 242, 244, 246, 248, 249, 250, 254, 255, 258, 260, 262, 264, 265, 275, 279, 280, 281, 283, 287, 290, 292, 294, 295, 296, 301, 304, 307, 309, 313, 316, 317, 318, 321, 322, 323, 324, 325, 330, 331, 334, 335, 337, 338, 340, 341, 342, 345, 348, 350, 352, 357, 359, 360, 364, 365, 371, 374, 375, 379, 380, 381, 382, 384, 387], "creat": [1, 2, 4, 17, 19, 34, 63, 64, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 127, 129, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 158, 161, 194, 195, 196, 197, 198, 211, 230, 231, 234, 248, 249, 250, 264, 265, 283, 318, 320, 321, 322, 324, 350, 357, 359, 376, 385, 387], "while": [1, 34, 154], "tanglesweep": [1, 48, 49, 50, 51, 52, 53, 63, 68, 178, 183, 188, 287, 387], "object": [1, 34, 47, 60, 63, 82, 112, 119, 121, 125, 127, 131, 148, 153, 158, 161, 171, 174, 178, 197, 198, 217, 220, 229, 238, 247, 254, 263, 287, 337, 338, 374, 375, 379, 380, 381, 384, 385, 387], "which": [1, 8, 10, 17, 24, 26, 34, 35, 36, 37, 39, 47, 48, 49, 50, 51, 53, 61, 63, 64, 65, 68, 74, 76, 77, 80, 81, 112, 115, 132, 148, 153, 154, 178, 180, 181, 182, 185, 188, 197, 201, 202, 206, 207, 228, 246, 262, 268, 280, 281, 287, 315, 325, 334, 335, 341, 346, 347, 348, 350, 352, 363, 365, 374, 376, 381, 387], "build": [1, 34, 38, 43, 47, 153, 387], "extend": [1, 34, 37, 47, 48, 49, 50, 51, 52, 63, 65, 66, 82, 141, 144, 178, 180, 181, 182, 183, 185, 186, 205, 206, 207], "totedg": [1, 55, 61], "edg": [1, 17, 34, 54, 55, 61, 308, 309, 310, 311, 312, 320, 323, 354, 374, 378, 379, 380, 387], "totnod": [1, 55, 57, 58, 59, 60, 61, 62], "treeoftangl": [1, 62, 64], "ar": [1, 10, 16, 26, 33, 35, 36, 39, 45, 48, 49, 50, 61, 63, 67, 81, 85, 89, 98, 101, 104, 106, 107, 110, 112, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 144, 145, 148, 152, 153, 154, 155, 156, 158, 159, 168, 169, 174, 176, 180, 181, 182, 187, 191, 195, 197, 198, 201, 206, 207, 211, 217, 219, 221, 222, 223, 226, 228, 234, 238, 240, 241, 242, 245, 246, 250, 254, 256, 257, 258, 261, 262, 268, 277, 279, 281, 283, 287, 290, 308, 311, 312, 315, 318, 319, 322, 324, 325, 335, 338, 341, 342, 350, 352, 354, 356, 365, 371, 380, 381, 387], "precis": [1, 17, 61], "maxim": [1, 34, 39, 45, 61, 64, 178, 187, 197, 198, 200, 202, 278, 321, 322, 387], "uncrossingsweep": [1, 64, 65, 66, 67, 68, 148, 198], "wrap": [1, 63], "uncross": [1, 63, 65, 66, 67, 82, 151, 152, 153, 154, 155, 197, 198, 287], "function": [1, 2, 4, 47, 63, 74, 75, 82, 85, 86, 89, 90, 98, 99, 100, 112, 121, 144, 147, 148, 151, 153, 158, 167, 176, 177, 179, 190, 191, 193, 194, 195, 196, 197, 199, 200, 206, 267, 272, 277, 278, 279, 282, 284, 285, 286, 287, 289, 293, 296, 298, 308, 309, 310, 314, 318, 321, 322, 323, 325, 337, 338, 339, 340, 341, 342, 345, 349, 356, 357, 359, 374, 375, 376, 381, 384, 385, 387], "agreement_func": [1, 47, 73, 206], "return": [1, 2, 17, 34, 47, 54, 56, 61, 63, 82, 83, 85, 87, 89, 96, 98, 112, 131, 148, 158, 173, 174, 176, 178, 211, 234, 250, 273, 275, 298, 299, 301, 302, 304, 305, 307, 318, 357, 374, 387], "valu": [1, 13, 17, 19, 23, 30, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 63, 64, 65, 67, 74, 78, 79, 82, 83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 121, 126, 127, 133, 134, 139, 140, 142, 143, 145, 146, 149, 158, 159, 160, 162, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 183, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 228, 246, 262, 275, 279, 280, 284, 285, 286, 287, 301, 304, 307, 322, 323, 330, 331, 337, 338, 339, 341, 342, 346, 368, 384, 387], "given": [1, 16, 33, 34, 46, 54, 55, 63, 64, 74, 76, 77, 100, 102, 103, 105, 106, 108, 109, 111, 127, 130, 138, 140, 141, 143, 144, 146, 148, 156, 200, 202, 203, 276, 281, 298, 308, 309, 310, 314, 315, 354, 371, 376, 381, 382, 385, 387], "system": [1, 63, 74, 78, 79, 80, 82, 148, 150, 178, 197, 202, 203, 211, 213, 214, 218, 221, 222, 223, 224, 230, 231, 234, 236, 239, 241, 242, 243, 248, 249, 250, 252, 255, 257, 258, 259, 264, 265, 280, 287, 356, 387], "uncross_distinguish": 1, "effici": [1, 34, 35, 61, 63, 287], "distinguish": [1, 34, 35, 36, 39, 61, 63, 77, 81, 82, 151, 152, 153, 154, 155, 197, 198, 287], "least": [1, 34, 35, 36, 39, 43, 45, 48, 49, 50, 64, 67, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 151, 153, 178, 180, 181, 182, 187, 195, 196, 201, 202, 287, 387], "specifi": [1, 12, 28, 34, 36, 39, 43, 45, 47, 49, 50, 51, 63, 65, 86, 90, 99, 100, 101, 103, 104, 106, 107, 109, 110, 130, 138, 139, 141, 142, 144, 145, 148, 152, 154, 155, 156, 174, 177, 178, 181, 182, 183, 185, 187, 200, 201, 203, 211, 225, 234, 244, 250, 260, 272, 278, 279, 287, 345, 346, 347, 348, 350, 352, 353, 367, 381, 384, 387], "tangl": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 54, 56, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 87, 91, 92, 93, 94, 95, 96, 100, 103, 106, 109, 112, 114, 119, 138, 141, 144, 148, 149, 151, 152, 153, 154, 155, 156, 158, 174, 178, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 211, 232, 234, 250, 266, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 291, 292, 293, 294, 295, 297, 299, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 357, 372, 373, 374, 375, 377, 381, 384, 385, 386, 388], "new_sep_id": [2, 48, 50, 180, 182, 206, 207], "int": [2, 10, 11, 12, 13, 17, 26, 27, 28, 30, 35, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 67, 70, 73, 86, 90, 99, 101, 104, 106, 107, 110, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 139, 142, 145, 148, 149, 151, 153, 156, 157, 177, 178, 180, 181, 182, 183, 185, 186, 187, 194, 195, 197, 198, 201, 202, 206, 207, 212, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 232, 235, 238, 240, 241, 243, 244, 245, 246, 247, 251, 254, 256, 257, 259, 260, 261, 262, 263, 274, 278, 280, 281, 282, 283, 287, 300, 303, 306, 311, 312, 319, 320, 324, 346, 347, 348, 350, 352, 353, 355, 356, 365, 366, 367, 368, 381, 382], "parent": [2, 7, 17, 22, 50, 182, 357, 362, 387], "none": [2, 7, 8, 10, 14, 15, 17, 22, 24, 26, 31, 32, 35, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 61, 64, 65, 66, 67, 81, 101, 103, 104, 107, 109, 110, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 141, 142, 144, 145, 151, 153, 156, 158, 159, 170, 178, 180, 181, 182, 183, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 213, 214, 217, 219, 220, 228, 229, 230, 231, 236, 238, 240, 246, 247, 248, 249, 252, 254, 256, 262, 263, 264, 265, 280, 311, 312, 316, 319, 320, 321, 329, 338, 350, 351, 356, 357, 362, 363, 365, 369, 370, 374, 378, 379, 380, 381, 382, 384, 387], "left_child": [2, 17, 357], "right_child": [2, 17, 357], "contain": [2, 8, 12, 16, 17, 24, 28, 33, 34, 36, 38, 39, 43, 54, 55, 63, 64, 67, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 126, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 158, 171, 174, 175, 197, 198, 200, 201, 211, 213, 217, 221, 222, 223, 230, 231, 234, 235, 238, 242, 248, 249, 250, 251, 254, 258, 264, 265, 268, 269, 273, 275, 276, 279, 281, 282, 283, 287, 289, 295, 296, 297, 299, 301, 302, 304, 305, 307, 313, 315, 317, 319, 323, 339, 340, 342, 363, 367, 371, 378, 380, 381, 387], "everi": [2, 8, 17, 24, 36, 37, 39, 45, 67, 77, 80, 100, 121, 156, 187, 196, 200, 207, 272, 276, 280, 283, 289, 291, 292, 318, 321, 322, 324, 350, 363, 380, 387], "leaf": [2, 9, 17, 25, 56, 58, 357, 364], "method": [2, 14, 15, 17, 31, 32, 34, 47, 54, 56, 61, 63, 83, 87, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 158, 174, 178, 183, 200, 201, 206, 211, 232, 234, 250, 272, 273, 274, 275, 280, 283, 299, 300, 301, 302, 303, 304, 305, 306, 307, 350, 357, 369, 370, 377, 381], "children": [2, 9, 17, 25, 29, 207, 357, 364, 387], "list": [2, 3, 10, 12, 13, 16, 17, 18, 26, 28, 30, 33, 34, 36, 39, 45, 47, 59, 61, 82, 83, 86, 87, 90, 96, 99, 101, 104, 107, 110, 112, 113, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 148, 151, 152, 153, 154, 155, 156, 158, 160, 162, 171, 172, 174, 177, 178, 179, 184, 190, 191, 193, 194, 195, 196, 197, 198, 199, 206, 207, 211, 212, 218, 219, 220, 228, 229, 234, 235, 239, 240, 246, 247, 250, 251, 255, 256, 262, 263, 267, 268, 269, 270, 271, 277, 311, 312, 320, 326, 327, 333, 349, 350, 352, 357, 358, 365, 367, 368, 371, 380, 381, 387], "thi": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 32, 35, 37, 39, 43, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 76, 77, 82, 83, 86, 87, 90, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 121, 123, 124, 125, 127, 128, 131, 136, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 151, 158, 159, 161, 163, 164, 165, 166, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 187, 188, 191, 193, 194, 195, 197, 198, 201, 202, 207, 209, 211, 217, 224, 228, 234, 238, 243, 246, 250, 254, 259, 262, 273, 274, 275, 280, 282, 283, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 320, 323, 324, 331, 338, 339, 341, 342, 346, 350, 356, 357, 358, 359, 360, 361, 364, 366, 367, 368, 369, 370, 382, 387], "copi": [2, 5, 6, 17, 20, 21, 34, 43, 63, 112, 357, 360, 361, 387], "new": [2, 4, 5, 14, 15, 17, 19, 20, 31, 32, 34, 43, 47, 48, 50, 51, 52, 65, 66, 112, 125, 127, 129, 130, 132, 149, 178, 180, 182, 183, 185, 186, 211, 213, 221, 224, 230, 231, 234, 241, 243, 248, 249, 250, 257, 259, 264, 265, 287, 355, 357, 359, 360, 369, 370, 380, 387], "bintreenod": [2, 3, 4, 8, 10, 12, 18, 24, 26, 28, 349, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "note": [2, 4, 44, 64, 125, 226, 245, 261, 277, 282, 316, 320, 324, 338, 339, 342, 357, 359, 387], "kind": [2, 4, 357, 359, 387], "abstract": [2, 4, 82, 85, 89, 98, 138, 140, 143, 176, 251, 255, 258, 272, 273, 275, 301, 304, 307, 357, 359], "base": [2, 4, 82, 138, 272, 273, 289, 293, 318, 320, 337, 341, 357, 359, 381, 387], "copy_subtre": [2, 17, 357], "subtre": [2, 5, 6, 17, 20, 21, 356, 357, 360, 361], "start": [2, 5, 6, 17, 20, 21, 47, 49, 77, 122, 128, 148, 149, 151, 155, 181, 272, 278, 311, 312, 357, 360, 361, 387], "copy_subtree_into_children": [2, 17, 357], "replac": [2, 6, 17, 21, 85, 89, 98, 112, 125, 126, 127, 131, 152, 156, 158, 168, 169, 176, 287, 357, 361, 387], "each": [2, 6, 17, 21, 34, 49, 61, 63, 67, 78, 79, 80, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 137, 139, 140, 142, 143, 145, 146, 148, 155, 156, 181, 191, 194, 195, 196, 197, 198, 279, 280, 281, 289, 290, 291, 293, 309, 310, 311, 312, 322, 335, 345, 346, 356, 357, 361, 374, 378, 384, 387], "child": [2, 6, 14, 15, 17, 21, 31, 32, 34, 201, 357, 361, 369, 370, 387], "detach": [2, 17, 357], "remov": [2, 7, 17, 22, 29, 50, 155, 156, 182, 207, 276, 279, 323, 357, 362, 387], "its": [2, 7, 16, 17, 22, 29, 33, 35, 76, 78, 79, 80, 81, 149, 153, 155, 156, 190, 197, 198, 207, 213, 214, 217, 224, 225, 227, 236, 238, 252, 254, 290, 291, 321, 324, 338, 339, 342, 345, 346, 357, 362, 371, 387], "pointer": [2, 7, 17, 22, 357, 362], "from_indicator_matrix": [2, 17, 357], "turn": [2, 8, 16, 17, 24, 33, 82, 153, 192, 267, 268, 270, 337, 341, 357, 363, 371, 387], "indic": [2, 8, 13, 16, 17, 24, 30, 33, 86, 90, 99, 101, 102, 104, 105, 107, 108, 110, 111, 127, 139, 140, 142, 143, 145, 146, 148, 153, 155, 177, 197, 198, 201, 211, 212, 218, 239, 255, 267, 268, 269, 276, 277, 278, 279, 290, 291, 296, 297, 311, 312, 314, 315, 337, 338, 339, 340, 342, 350, 357, 363, 368, 371, 380, 387], "matrix": [2, 8, 16, 17, 24, 33, 34, 45, 63, 67, 75, 76, 77, 78, 79, 80, 81, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 148, 151, 153, 155, 178, 187, 211, 212, 213, 214, 222, 223, 228, 230, 231, 234, 235, 236, 242, 246, 248, 249, 250, 251, 252, 258, 262, 264, 265, 267, 268, 270, 271, 272, 277, 279, 280, 282, 283, 289, 290, 291, 295, 296, 297, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 334, 335, 337, 338, 339, 340, 341, 342, 357, 363, 371, 387], "back": [2, 8, 17, 24, 50, 182, 195, 267, 270, 357, 363, 387], "is_leaf": [2, 17, 56, 357], "whether": [2, 9, 17, 23, 25, 35, 58, 63, 78, 79, 80, 114, 131, 155, 163, 164, 165, 166, 167, 171, 200, 201, 203, 206, 211, 218, 221, 224, 225, 226, 227, 230, 231, 232, 234, 239, 244, 245, 248, 249, 250, 255, 260, 261, 264, 265, 319, 341, 357, 364, 374, 380, 381], "leaves_in_subtre": [2, 17, 357], "find": [2, 10, 17, 26, 34, 35, 36, 112, 115, 200, 201, 202, 210, 267, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 315, 357, 365, 387], "all": [2, 10, 12, 17, 26, 28, 34, 35, 36, 39, 45, 49, 50, 56, 59, 63, 67, 81, 83, 87, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 156, 158, 160, 174, 178, 179, 181, 182, 184, 187, 211, 215, 216, 219, 220, 234, 237, 240, 250, 253, 256, 283, 308, 309, 310, 318, 322, 324, 341, 342, 350, 352, 357, 365, 367, 378, 381, 382, 387], "leav": [2, 10, 17, 26, 357, 365, 387], "level": [2, 12, 17, 28, 34, 35, 36, 39, 43, 44, 45, 47, 48, 49, 50, 64, 75, 76, 77, 81, 178, 180, 181, 182, 207, 287, 357, 367, 387], "level_in_subtre": [2, 17, 357], "certain": [2, 12, 17, 28, 78, 79, 80, 357, 367, 387], "depth": [2, 10, 12, 16, 17, 26, 28, 33, 49, 181, 356, 357, 365, 367, 371, 387], "below": [2, 12, 17, 28, 35, 39, 45, 47, 50, 51, 63, 64, 65, 149, 178, 182, 183, 185, 187, 323, 341, 357, 367, 387], "path_from_root_ind": [2, 17, 357], "side": [2, 13, 17, 30, 82, 103, 192, 197, 198, 200, 277, 279, 283, 289, 290, 309, 310, 341, 356, 357, 368, 377, 378, 379, 380, 387], "one": [2, 13, 17, 30, 34, 37, 67, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 122, 128, 139, 140, 142, 143, 145, 146, 156, 174, 191, 195, 196, 197, 198, 206, 226, 267, 270, 279, 287, 291, 324, 335, 356, 357, 368, 377, 378, 379, 380, 387], "ha": [2, 11, 13, 17, 27, 30, 37, 47, 50, 51, 52, 63, 65, 66, 76, 86, 90, 99, 177, 178, 182, 183, 185, 186, 207, 211, 217, 234, 238, 250, 254, 283, 290, 321, 356, 357, 366, 368, 387], "take": [2, 13, 17, 30, 47, 82, 83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 103, 106, 109, 174, 176, 177, 191, 195, 196, 199, 201, 211, 224, 225, 227, 228, 234, 246, 250, 262, 284, 285, 286, 311, 312, 320, 321, 324, 341, 357, 368, 374, 381, 385, 387], "go": [2, 13, 17, 30, 50, 182, 357, 368, 387], "from": [2, 8, 13, 16, 17, 24, 30, 33, 34, 38, 45, 49, 50, 77, 81, 112, 119, 120, 122, 131, 133, 138, 149, 181, 182, 202, 207, 211, 218, 219, 220, 224, 229, 230, 231, 232, 234, 239, 240, 243, 247, 248, 249, 250, 255, 256, 259, 263, 264, 265, 272, 276, 277, 279, 281, 308, 310, 318, 321, 323, 324, 335, 337, 341, 343, 344, 345, 346, 350, 354, 357, 363, 368, 371, 376, 381, 384, 387], "set_left_child": [2, 17, 357], "left": [2, 6, 13, 14, 17, 21, 30, 31, 34, 63, 201, 338, 357, 361, 368, 369, 387], "set_right_child": [2, 17, 357], "right": [2, 6, 13, 15, 17, 21, 30, 32, 34, 201, 338, 357, 361, 368, 370, 387], "to_indicator_matrix": [2, 17, 357], "The": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 63, 64, 65, 66, 67, 68, 74, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 271, 276, 277, 278, 279, 280, 281, 283, 287, 290, 291, 292, 294, 295, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 322, 323, 334, 338, 339, 342, 350, 352, 353, 354, 355, 356, 357, 358, 360, 363, 365, 366, 367, 368, 369, 370, 371, 374, 375, 379, 380, 381, 382, 384, 387], "connect": [5, 20, 272, 279, 283, 296, 297, 318, 321, 322, 324, 350, 360, 378, 380, 381, 382], "origin": [5, 20, 152, 155, 276, 360, 387], "bool": [6, 9, 21, 23, 25, 35, 47, 58, 63, 67, 85, 89, 98, 101, 104, 107, 110, 114, 117, 119, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 145, 149, 151, 152, 153, 154, 155, 156, 158, 163, 164, 165, 166, 167, 176, 203, 206, 225, 226, 227, 230, 231, 244, 245, 248, 249, 260, 261, 264, 265, 280, 283, 287, 297, 311, 312, 319, 322, 324, 341, 361, 364, 374, 379, 381, 382, 384, 387], "true": [6, 21, 35, 63, 67, 85, 89, 98, 115, 119, 120, 121, 127, 129, 130, 131, 133, 134, 137, 149, 151, 152, 153, 154, 155, 156, 158, 176, 230, 231, 248, 249, 264, 265, 283, 287, 311, 312, 319, 322, 324, 341, 361, 374, 379, 380, 384, 387], "classmethod": [8, 24, 153, 230, 231, 248, 249, 264, 265, 363], "indicator_matrix": [8, 24, 268, 363], "ndarrai": [8, 16, 24, 33, 34, 35, 45, 47, 56, 61, 63, 67, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 101, 102, 104, 105, 107, 108, 110, 111, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 178, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 228, 229, 230, 231, 235, 236, 237, 239, 241, 242, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 262, 263, 264, 265, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 317, 319, 321, 323, 324, 326, 327, 330, 331, 333, 334, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 363, 371, 377, 380, 381, 384, 385], "path": [8, 16, 17, 24, 33, 36, 38, 39, 200, 201, 363, 371], "max_depth": [10, 16, 26, 33, 49, 181, 365, 371], "maximum": [10, 16, 26, 33, 34, 37, 47, 49, 63, 181, 206, 365, 371, 387], "If": [10, 26, 35, 36, 39, 48, 50, 63, 67, 85, 89, 98, 101, 104, 107, 110, 117, 119, 120, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 145, 149, 151, 152, 153, 154, 155, 156, 174, 176, 180, 182, 195, 197, 198, 201, 207, 211, 217, 222, 223, 225, 234, 238, 242, 250, 254, 258, 279, 280, 283, 287, 311, 312, 320, 321, 322, 324, 325, 330, 331, 342, 348, 352, 356, 357, 365, 374, 379, 381, 382, 384, 387], "number": [10, 26, 34, 40, 48, 49, 80, 82, 101, 102, 104, 105, 107, 108, 110, 111, 112, 117, 118, 123, 124, 135, 137, 139, 140, 142, 143, 145, 146, 180, 181, 191, 194, 195, 197, 198, 199, 212, 213, 214, 222, 223, 230, 231, 235, 236, 242, 248, 249, 251, 252, 258, 264, 265, 268, 272, 278, 279, 280, 281, 282, 283, 290, 295, 310, 311, 312, 315, 324, 365, 381, 387], "layer": [10, 26, 44, 365], "check": [10, 17, 23, 26, 56, 58, 112, 114, 158, 163, 164, 165, 166, 167, 203, 206, 211, 217, 219, 225, 226, 227, 234, 238, 240, 244, 245, 250, 254, 256, 260, 261, 283, 365, 387], "found": [10, 26, 63, 67, 112, 114, 122, 127, 148, 154, 278, 311, 312, 365, 387], "0": [11, 12, 26, 27, 28, 44, 48, 76, 77, 78, 79, 80, 81, 119, 180, 189, 201, 202, 207, 232, 281, 283, 319, 320, 322, 323, 335, 338, 339, 340, 341, 342, 345, 348, 351, 366, 367, 374, 378, 379, 380, 387], "mean": [12, 28, 49, 181, 201, 211, 228, 232, 234, 246, 250, 262, 338, 345, 348, 350, 367, 387], "you": [12, 28, 64, 149, 197, 335, 367, 381, 384, 387], "get": [12, 28, 211, 212, 218, 219, 220, 229, 234, 239, 240, 247, 250, 255, 256, 263, 280, 323, 324, 345, 346, 350, 352, 353, 367, 387], "just": [12, 28, 183, 367, 387], "itself": [12, 28, 37, 367], "1": [13, 17, 30, 34, 35, 39, 43, 45, 49, 67, 76, 78, 79, 80, 86, 90, 99, 174, 177, 181, 201, 213, 218, 222, 223, 224, 225, 227, 239, 242, 255, 258, 276, 277, 278, 282, 283, 296, 317, 321, 323, 324, 335, 338, 339, 340, 341, 342, 348, 351, 368, 380, 384, 387], "denot": [13, 30, 338, 339, 342, 368], "previou": [14, 15, 31, 32, 287, 369, 370, 380, 387], "doe": [14, 15, 31, 32, 43, 48, 50, 76, 115, 116, 121, 154, 155, 180, 182, 197, 201, 226, 245, 261, 273, 274, 299, 300, 302, 303, 305, 306, 334, 352, 369, 370, 387], "point": [14, 15, 31, 32, 75, 78, 79, 80, 174, 213, 214, 230, 231, 236, 248, 249, 252, 264, 265, 280, 318, 320, 341, 354, 356, 369, 370, 376, 381, 387], "after": [14, 15, 31, 32, 44, 48, 86, 90, 99, 134, 174, 177, 180, 272, 276, 283, 369, 370, 387], "call": [14, 15, 31, 32, 86, 90, 99, 121, 177, 321, 324, 369, 370, 376, 381, 382, 385, 387], "instead": [14, 15, 31, 32, 76, 197, 369, 370, 381, 387], "static": [16, 33, 38, 84, 88, 97, 122, 158, 167, 175, 371, 387], "row": [16, 33, 63, 67, 112, 115, 118, 130, 153, 155, 158, 171, 228, 246, 262, 267, 268, 269, 271, 277, 291, 292, 294, 318, 319, 335, 338, 371, 387], "sort": [16, 33, 127, 148, 152, 154, 207, 287, 371, 387], "same": [16, 17, 19, 23, 33, 37, 50, 67, 121, 155, 182, 194, 195, 206, 207, 217, 228, 232, 233, 238, 246, 254, 262, 273, 275, 287, 299, 301, 302, 304, 305, 307, 330, 331, 334, 348, 371, 378, 387], "wai": [16, 33, 67, 112, 121, 287, 324, 350, 356, 371, 387], "encod": [16, 33, 76, 77, 78, 79, 80, 81, 203, 222, 223, 242, 258, 269, 276, 335, 371, 387], "np": [16, 33, 34, 35, 45, 47, 63, 76, 77, 78, 79, 80, 81, 101, 102, 104, 105, 107, 108, 110, 111, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 151, 153, 154, 155, 156, 178, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 207, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 228, 229, 230, 231, 235, 236, 237, 239, 241, 242, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 262, 263, 264, 265, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 287, 290, 291, 292, 295, 297, 311, 312, 313, 315, 316, 317, 319, 321, 323, 324, 330, 331, 339, 340, 341, 342, 346, 347, 348, 371, 380, 381, 387], "shape": [16, 33, 101, 102, 104, 105, 107, 108, 110, 111, 112, 115, 118, 139, 140, 142, 143, 145, 146, 212, 213, 214, 222, 223, 230, 231, 235, 236, 242, 248, 249, 251, 252, 258, 264, 265, 268, 273, 275, 280, 290, 295, 299, 301, 302, 304, 305, 307, 319, 322, 338, 339, 340, 342, 371], "len": [16, 33, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 371, 387], "num_nod": [16, 33, 371], "where": [16, 33, 76, 118, 122, 128, 280, 290, 295, 296, 313, 317, 318, 322, 324, 337, 340, 371, 374, 375, 387], "core": [17, 19, 23, 119, 387], "It": [17, 34, 60, 80, 112, 290, 374, 387], "repres": [17, 34, 79, 81, 82, 83, 84, 87, 88, 96, 97, 112, 174, 175, 213, 214, 217, 230, 231, 236, 238, 248, 249, 252, 254, 264, 265, 279, 290, 291, 322, 335, 337, 338, 350, 353, 387], "determin": [17, 148, 154, 197, 356, 381, 387], "featur": [17, 78, 79, 80, 82, 83, 86, 87, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 120, 127, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 174, 177, 178, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 211, 212, 213, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 246, 262, 272, 273, 275, 276, 280, 281, 289, 291, 293, 299, 301, 302, 304, 305, 307, 333, 339, 342, 387], "orient": [17, 34, 47, 64, 67, 76, 77, 81, 86, 90, 99, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 148, 152, 155, 156, 174, 177, 178, 179, 184, 206, 207, 211, 214, 218, 223, 230, 231, 232, 234, 236, 239, 241, 242, 243, 244, 245, 248, 249, 250, 252, 255, 257, 258, 259, 260, 261, 264, 265, 287, 387], "more": [17, 48, 131, 180, 197, 198, 200, 279, 283, 287, 350, 387], "k": [17, 34, 36, 67, 197, 280, 282, 283, 290, 295, 318, 324, 378, 379, 380, 387], "correspond": [17, 34, 44, 61, 67, 76, 77, 78, 79, 80, 83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 119, 120, 127, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 158, 169, 174, 176, 177, 190, 191, 194, 195, 196, 199, 275, 301, 304, 307, 308, 387], "vice": [17, 34], "versa": [17, 34], "except": [17, 34, 196, 387], "highest": [17, 49, 181], "order": [17, 34, 35, 37, 47, 50, 63, 67, 81, 127, 148, 152, 153, 154, 155, 178, 182, 197, 198, 206, 207, 228, 246, 262, 273, 275, 284, 285, 286, 287, 289, 290, 293, 298, 299, 301, 302, 304, 305, 307, 308, 309, 310, 337, 338, 339, 340, 341, 342, 380, 387], "than": [17, 37, 43, 45, 49, 50, 64, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 174, 181, 182, 197, 198, 200, 206, 211, 225, 234, 244, 250, 260, 279, 283, 287, 319, 320, 324, 341, 350, 387], "addit": [17, 387], "orientedsep": [17, 246, 262], "minim": [17, 35, 272, 273, 277, 278, 387], "within": [17, 75, 79, 80, 281, 387], "equal_data": 17, "two": [17, 23, 35, 36, 39, 61, 122, 128, 151, 153, 156, 174, 197, 198, 211, 217, 219, 221, 224, 226, 234, 238, 240, 241, 243, 245, 250, 254, 256, 257, 259, 261, 287, 289, 290, 322, 334, 335, 350, 356, 376, 378, 381, 387], "have": [17, 23, 34, 36, 37, 43, 48, 49, 50, 64, 76, 174, 178, 179, 180, 181, 182, 184, 191, 195, 202, 280, 287, 324, 338, 339, 341, 342, 378, 380, 381, 387], "data": [17, 23, 34, 38, 42, 82, 100, 102, 103, 105, 106, 108, 109, 111, 112, 113, 116, 119, 120, 125, 133, 135, 136, 138, 140, 141, 143, 144, 146, 148, 151, 153, 190, 191, 194, 195, 196, 199, 234, 235, 250, 251, 280, 289, 290, 291, 292, 293, 294, 295, 318, 319, 320, 321, 324, 338, 345, 346, 347, 348, 388], "open": 17, "equal": [23, 36, 39, 54, 55, 179, 206, 211, 225, 234, 244, 250, 260, 341, 342, 387], "sep_id": [34, 47, 54, 61, 178, 207, 211, 218, 219, 229, 234, 235, 238, 239, 240, 247, 250, 251, 254, 255, 256, 263], "result": [34, 50, 65, 66, 67, 82, 121, 130, 137, 152, 154, 156, 182, 197, 198, 218, 228, 239, 246, 255, 262, 282, 292, 294, 297, 323, 324, 334, 381, 387], "empti": [34, 47, 48, 180, 287, 352], "dure": [34, 387], "ad": [34, 44, 197, 198, 206, 207, 213, 214, 218, 221, 236, 239, 241, 252, 255, 257, 279, 287, 289, 293, 311, 312, 387], "actual": [34, 374, 387], "well": [34, 50, 182, 276, 387], "id": [34, 35, 39, 44, 45, 47, 48, 50, 64, 74, 78, 79, 80, 154, 178, 179, 180, 182, 184, 187, 197, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 287, 350, 351, 352, 353, 354, 355, 387], "dimension": [34, 322, 339, 340, 342, 376, 381], "arrai": [34, 47, 115, 118, 178, 197, 198, 267, 269, 272, 273, 275, 276, 277, 281, 282, 283, 297, 299, 301, 302, 304, 305, 307, 313, 317, 336, 384], "properti": [34, 37, 40, 41, 44, 47, 53, 56, 59, 63, 68, 112, 123, 124, 131, 135, 148, 150, 157, 178, 179, 184, 188, 350, 354, 387], "limit": [34, 39, 45, 47, 48, 50, 51, 52, 63, 64, 65, 66, 67, 149, 178, 180, 182, 183, 185, 186, 187, 387], "we": [34, 37, 112, 114, 119, 120, 127, 129, 130, 131, 133, 134, 158, 174, 195, 201, 217, 238, 254, 280, 287, 290, 324, 335, 338, 380, 387], "yet": [34, 37, 49, 181, 387], "number_of_separ": 34, "associ": [34, 44, 86, 90, 99, 177, 387], "get_efficient_distinguish": 34, "k_tangl": 34, "th": [34, 36, 152, 197, 387], "load": [34, 112, 387], "filenam": [34, 38, 42, 122, 128], "maximal_tangl": 34, "most": [34, 39, 49, 181, 195, 321, 338, 374, 387], "max_level": [34, 35, 39, 43, 45, 64], "save": [34, 38, 112, 217, 232, 238, 254, 387], "file": [34, 38, 42, 112, 122, 128, 387], "search_tre": 34, "tangle_matrix": [34, 63, 76, 77, 78, 79, 80, 81, 148, 178], "taken": [34, 45, 101, 104, 107, 110, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156, 202, 311, 312, 341], "tree_height_for_agr": 34, "comput": [34, 46, 63, 197, 198, 217, 228, 238, 246, 254, 262, 272, 282, 283, 289, 291, 292, 294, 295, 296, 297, 313, 316, 317, 318, 323, 337, 338, 339, 342], "height": [34, 46, 323, 356, 374, 387], "return_id": 35, "exist": [35, 50, 76, 77, 81, 131, 159, 182, 219, 240, 256, 287, 352], "pair": [35, 219, 240, 256, 272, 276, 310, 341], "thei": [35, 50, 182, 226, 230, 231, 248, 249, 264, 265, 341, 356, 387], "option": [35, 39, 43, 45, 47, 48, 49, 50, 64, 74, 81, 127, 134, 178, 180, 181, 182, 197, 201, 213, 214, 230, 231, 236, 248, 249, 252, 264, 265, 278, 280, 311, 312, 320, 321, 350, 357, 381, 382, 387], "fals": [35, 45, 67, 71, 72, 80, 85, 89, 98, 114, 119, 120, 127, 129, 131, 134, 149, 151, 152, 153, 155, 156, 158, 176, 189, 230, 231, 248, 249, 264, 265, 280, 282, 287, 311, 312, 319, 320, 322, 324, 351, 380, 381, 382, 384, 387], "first": [35, 76, 77, 81, 101, 102, 104, 105, 107, 108, 110, 111, 135, 139, 140, 142, 143, 145, 146, 155, 156, 190, 191, 194, 195, 196, 199, 213, 214, 217, 221, 224, 225, 226, 227, 236, 238, 241, 243, 244, 245, 252, 254, 257, 259, 260, 261, 277, 280, 283, 380, 387], "entri": [35, 67, 101, 102, 104, 105, 107, 108, 110, 111, 115, 135, 139, 140, 142, 143, 145, 146, 155, 190, 191, 194, 195, 196, 199, 213, 214, 217, 221, 236, 238, 241, 252, 254, 257, 290, 295, 308, 342, 380, 384], "second": [35, 101, 102, 104, 105, 107, 108, 110, 111, 135, 139, 140, 142, 143, 145, 146, 155, 156, 190, 191, 194, 195, 196, 199, 213, 214, 217, 221, 224, 225, 226, 227, 236, 238, 241, 243, 244, 245, 252, 254, 257, 259, 260, 261, 277, 380, 387], "include_split": [36, 39, 45], "str": [36, 38, 39, 42, 84, 88, 97, 101, 104, 107, 110, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 142, 145, 147, 153, 156, 158, 167, 175, 190, 228, 246, 262, 279, 321, 324, 326, 327, 329, 333, 350, 352, 353, 355, 374, 381, 384], "nope": [36, 39], "onli": [36, 39, 43, 45, 48, 49, 50, 64, 67, 115, 152, 155, 180, 181, 182, 197, 198, 201, 311, 312, 324, 338, 341, 374, 378, 381, 387], "includ": [36, 39, 67, 155, 156, 225, 350, 387], "default": [36, 39, 48, 50, 82, 100, 141, 144, 180, 182, 190, 208, 209, 279, 280, 321, 349, 350, 374, 375, 379, 381, 382, 387], "For": [37, 78, 79, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 174, 179, 200, 202, 281, 287, 292, 294, 339, 342, 387], "greater": [37, 174, 324, 341, 387], "know": [37, 39, 45, 187, 387], "certainti": 37, "agreeement": 37, "decreas": [37, 47, 51, 52, 63, 65, 66, 178, 183, 185, 186, 387], "increas": [37, 50, 182, 387], "But": [37, 387], "might": [37, 282, 283, 287, 324, 338, 339, 342, 350, 387], "case": [37, 76, 149, 197, 198, 217, 238, 254, 280, 356, 387], "yield": 37, "anoth": [37, 82, 141, 155, 206, 225, 232, 233, 381, 387], "guarante": [39, 45, 187, 342], "sep": [39, 74, 155, 223, 238, 242, 246, 254, 258, 262, 268, 301, 304, 307, 339, 342, 377, 380], "sweep": [39, 45, 64, 82, 148, 149, 178, 187], "about": [39, 45, 112, 114, 131, 136, 137, 187, 209, 230, 231, 248, 249, 264, 265, 387], "less": [43, 45, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 197, 198, 206, 211, 225, 234, 244, 250, 260, 284, 285, 286, 319, 320, 387], "up": [43, 64, 74, 325, 335, 356, 387], "index": [44, 76, 77, 81, 121, 125, 152, 197, 277, 322, 350, 354, 380, 387], "return_nod": 45, "callabl": [47, 63, 101, 104, 107, 110, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 147, 148, 153, 156, 197, 198, 206, 208, 209, 321, 343, 344, 374, 384, 385], "le_func": [47, 206], "forbidden_tuple_s": [47, 63, 73, 178, 206], "3": [47, 63, 178, 206, 322, 323, 356, 387], "agreementfunc": [47, 69, 73, 74, 206], "non": [47, 138, 155, 197, 198, 290, 380, 387], "neg": [47, 197, 198, 279, 280, 290, 346, 378, 379, 380], "numer": [47, 82, 87, 100, 131, 158, 164, 191, 194, 195, 387], "lessoreqfunc": [47, 206], "partial": [47, 387], "can": [47, 49, 60, 81, 82, 83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 112, 114, 119, 120, 122, 127, 129, 130, 131, 133, 134, 138, 141, 149, 158, 171, 174, 176, 177, 181, 196, 209, 232, 280, 335, 374, 376, 384, 385, 387], "us": [47, 49, 63, 67, 82, 100, 112, 114, 131, 138, 144, 148, 150, 152, 153, 155, 181, 190, 191, 195, 196, 197, 198, 209, 218, 232, 239, 255, 272, 273, 280, 282, 287, 319, 322, 323, 331, 337, 338, 341, 374, 379, 380, 384, 385, 387], "algorithm": [47, 205, 206, 387], "some": [47, 63, 112, 136, 158, 174, 225, 387], "size": [47, 63, 194, 195, 197, 198, 206, 281, 311, 312, 320, 341, 374, 378, 379, 380, 384, 387], "standard": [47, 63, 345, 387], "e": [47, 60, 63, 121, 130, 153, 155, 220, 225, 244, 260, 280, 321, 324, 335, 338, 341, 387], "tripl": [47, 63, 287, 387], "oper": [47, 53, 63, 68, 83, 84, 87, 88, 96, 97, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 174, 175, 178, 188, 190, 387], "append_separ": [47, 178], "append": [47, 48, 50, 63, 67, 119, 178, 180, 182, 197, 198, 232, 325], "greedy_search": [47, 178], "greedili": [47, 49, 178, 181], "insert_separ": [47, 178], "insert": [47, 50, 119, 154, 171, 178, 182, 207], "sweep_below": [47, 63, 178, 183], "until": [47, 51, 52, 63, 65, 66, 77, 178, 183, 185, 186, 387], "sweep_on": [47, 63, 178], "agreement_lower_bound": [48, 50, 180, 182], "final": [48, 180, 252, 256, 263, 387], "noth": [48, 180], "happen": [48, 180, 387], "By": [48, 50, 180, 182], "ensur": [48, 50, 63, 180, 182], "chang": [48, 82, 116, 125, 127, 134, 144, 148, 149, 180, 226, 275, 278, 301, 304, 307, 338, 339, 342, 387], "step": [48, 50, 180, 182, 197, 278, 287, 311, 312, 387], "last": [48, 180, 280, 387], "add": [48, 50, 158, 159, 170, 180, 182, 211, 213, 214, 224, 234, 236, 243, 250, 252, 259], "ani": [48, 60, 154, 180, 197, 217, 238, 254, 374, 387], "max_width": [49, 181], "explore_agreement_lower_bound": [49, 181], "start_nod": [49, 181], "what": [49, 181, 218, 232, 239, 255, 268, 280, 315, 387], "goe": [49, 181], "through": [49, 181, 384], "differ": [49, 81, 112, 121, 127, 155, 181, 195, 323, 356, 376, 380, 381, 387], "And": [49, 181, 387], "those": [49, 181, 217, 238, 254, 279, 287], "rel": [49, 181], "insertion_idx": [50, 182], "li": [50, 182, 218, 239, 255, 356, 387], "discard": [50, 182], "bound": [50, 148, 149, 151, 153, 157, 182], "caus": [50, 182, 346], "previous": [50, 182], "higher": [50, 155, 182, 387], "attempt": [50, 182, 287], "fail": [50, 182, 217, 238, 254, 356], "time": [50, 76, 77, 149, 182, 283, 387], "simpli": [50, 182, 217, 238, 254, 337, 341, 387], "correct": [50, 182, 387], "progress_callback": [51, 52, 65, 66, 148, 153, 183, 185, 186, 197, 198, 387], "should": [51, 63, 64, 65, 114, 120, 130, 131, 155, 185, 197, 198, 213, 214, 230, 231, 236, 248, 249, 252, 264, 265, 311, 312, 350, 387], "fall": [51, 65, 185, 195, 387], "sep_idx": 54, "other_end": 54, "One": [55, 194, 387], "other": [55, 77, 81, 116, 122, 128, 155, 158, 168, 169, 197, 198, 207, 217, 232, 238, 254, 279, 321, 324, 335, 378, 387], "incid": [55, 61], "tangle_idx": 56, "reduced_tangl": 56, "neighbour": [56, 387], "neighbor": [56, 59, 311, 312, 318, 322, 324], "degre": [56, 309, 313, 317, 324, 374, 387], "set_label": 56, "label": [56, 60, 85, 89, 98, 112, 119, 126, 127, 132, 134, 152, 156, 158, 159, 168, 169, 170, 171, 176, 349, 350, 351, 352, 353, 355, 375, 381, 384, 387], "type": [60, 112, 113, 119, 120, 127, 131, 133, 153, 158, 163, 164, 165, 166, 171, 197, 198, 232, 279, 374, 380, 384, 387], "usual": [60, 195, 283, 387], "string": [60, 84, 88, 97, 119, 121, 131, 133, 158, 166, 167, 175, 350, 384], "describ": [60, 75, 78, 79, 101, 102, 104, 105, 107, 108, 110, 111, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 156, 178, 187, 190, 194, 195, 196, 280, 298, 308, 309, 310, 323, 387], "g": [60, 283, 296, 313, 317, 378, 387], "visualis": [60, 377, 378, 380, 387], "between": [61, 81, 277, 289, 291, 295, 318, 320, 322, 323, 341, 380, 387], "any_nod": 61, "sep_si": [63, 71, 72, 74, 178, 266], "setseparationsystembas": [63, 74, 178, 197, 198, 210, 230, 231, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "order_func": [63, 198, 266], "copy_sep_si": 63, "whenev": [63, 149, 155, 381, 384], "necessari": [63, 149, 387], "condit": [63, 387], "addition": [63, 230, 231, 248, 249, 264, 265, 380], "hold": 63, "so": [63, 83, 85, 87, 89, 96, 98, 116, 174, 176, 324, 356, 374, 387], "also": [63, 153, 207, 218, 228, 239, 246, 255, 262, 287, 323, 338, 339, 342, 381], "provid": [63, 82, 112, 127, 148, 153, 197, 198, 217, 238, 254, 384, 387], "setseparationorderfunct": [63, 148, 153, 197, 198], "ascend": [63, 197, 198], "unchang": 63, "create_tot": 63, "min_agr": [64, 67, 183, 187, 197, 198, 201, 202], "id_at_max_level": 64, "choos": [64, 121, 387], "smaller": [64, 174, 279, 283, 319, 324, 342], "attribut": [64, 387], "furthermor": [64, 381], "both": [64, 82, 103, 112, 122, 128, 192, 226, 279, 290, 331, 335, 387], "appear": [64, 67, 155, 230, 231, 248, 249, 264, 265, 287], "consid": [64, 80, 101, 104, 107, 110, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156, 201, 338, 387], "max": [64, 189, 374], "do": [64, 80, 156, 387], "tanglesearchprogresstyp": 65, "progress": [65, 148, 153, 197, 198, 204, 209, 387], "callback": [65, 349, 374, 375, 381, 382, 384, 387], "only_original_sep": [67, 152], "vector": [67, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 212, 218, 239, 255, 276, 278, 279, 280, 290, 291, 296, 297, 338, 339, 340, 342, 345, 346, 380], "column": [67, 76, 78, 79, 80, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 155, 156, 158, 197, 198, 276, 277, 279, 282, 283, 289, 290, 291, 292, 295, 296, 297, 335, 338, 339, 340, 342, 387], "wa": [67, 191, 194, 195, 232, 275, 301, 304, 307, 319, 387], "corner": [67, 152, 154, 155, 211, 217, 221, 228, 232, 234, 238, 241, 246, 250, 254, 257, 262, 272, 276, 287], "introduc": [67, 387], "explicitli": [67, 106], "": [67, 106, 158, 159, 166, 170, 194, 229, 230, 231, 247, 248, 249, 263, 264, 265, 269, 271, 272, 277, 279, 287, 338, 339, 341, 342, 349, 375, 387], "tangle_mat": 67, "numpi": [67, 119, 153, 387], "m": [67, 280, 338, 339, 340, 341, 342, 387], "agreementfuncbitarrai": 69, "agreementfuncbitarraybip": 69, "calculateagr": 69, "max_valu": 70, "setseparationsystem": [71, 150, 178, 197, 198, 210, 211, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 264, 265], "memoiz": [71, 72], "featuresystem": [72, 78, 79, 80, 150, 178, 197, 198, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "look": [74, 201, 202, 352, 387], "coherence_level": 75, "coher": [75, 76, 81], "complexity_level": 75, "complex": [75, 77, 81], "hard_clustering_tuebingen": 75, "implement": [75, 78, 79, 85, 89, 98, 176, 387], "hard": [75, 78, 387], "cluster": [75, 78, 79], "tuebingen": [75, 78, 79], "paper": [75, 78, 79, 387], "soft_clustering_tuebingen": 75, "soft": [75, 79, 387], "tangle_scor": 75, "score": [75, 79, 80, 280], "measur": [75, 80, 280], "how": [75, 76, 77, 80, 81, 148, 155, 273, 275, 279, 290, 299, 301, 302, 304, 305, 307, 387], "much": [75, 80, 387], "visibl": 75, "smallest": [76, 77, 196, 311, 312], "zero": [76, 155, 279, 348, 380], "ceas": [76, 81], "In": [76, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 149, 155, 197, 198, 280, 341, 387], "x": [76, 77, 78, 79, 80, 81, 289, 292, 294, 321, 324, 356, 381, 382, 384, 387], "otherwis": [76, 77, 78, 79, 80, 81, 101, 104, 107, 110, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 152, 156, 217, 222, 223, 238, 242, 254, 258, 283, 287, 321, 324, 356, 379, 387], "were": [77, 154, 155, 156, 387], "slice": [77, 112, 113], "would": [77, 275, 301, 304, 307, 335, 387], "feat_id": [78, 79, 80, 212, 217, 218], "feat_si": [78, 79, 80, 202], "invers": [78, 79, 80, 211, 213, 221, 222, 224, 225, 227, 276, 287], "membership": 78, "clustering_matrix": 79, "dataset": [79, 80, 109, 387], "proport": [79, 380], "normalize_row": 80, "normalize_col": 80, "column_ord": 81, "precomput": [81, 318, 321, 324], "nominalvariablevalu": [82, 84, 85, 86], "nomin": [82, 83, 87, 96, 100, 158, 163, 193, 387], "surveyvariablevalu": [82, 83, 87, 96, 158, 161, 173, 175, 176, 177], "numericalvariablevalu": [82, 88, 89, 90], "orderfunctiono1": 82, "orderfunctiono1bias": 82, "orderfunctiono2": 82, "orderfunctiono3": 82, "orderfunctiono4": 82, "ordinalvariablevalu": [82, 97, 98, 99], "ordin": [82, 96, 100, 120, 158, 165, 174, 191, 195, 196, 387], "simplesurveyfeaturefactori": [82, 101, 102, 141], "simpl": [82, 100, 103, 106, 109, 199, 388], "factori": [82, 100, 102, 103, 105, 106, 108, 109, 111, 138, 140, 141, 143, 144, 146, 147, 190, 191, 193, 194, 195, 196, 199, 387], "simplesurveyfeaturefactory_missingvaluesbothsid": [82, 104, 105], "miss": [82, 103, 106, 109, 112, 119, 120, 133, 192, 387], "invalid": [82, 103, 106, 109, 112, 115, 134, 158, 159, 160, 162, 170, 171, 191, 192, 194, 195, 196, 387], "account": [82, 83, 87, 96, 101, 103, 104, 106, 107, 109, 110, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156, 341, 387], "simplesurveyfeaturefactory_missingvaluesimplicit": [82, 107, 108], "simplesurveyfeaturefactory_missingvaluesownfeatur": [82, 110, 111], "prepar": [82, 112, 388], "clean": [82, 112, 388], "subset": [82, 83, 87, 96, 101, 104, 107, 110, 112, 113, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 156, 194, 195, 200, 202, 203, 211, 227, 277, 387], "surveyfeaturefactori": [82, 103, 109, 139, 140, 141, 144, 153], "surveyfeaturefactorydecor": [82, 142, 143], "small": [82, 141, 191, 199, 280, 283, 374, 387], "decor": [82, 141, 192], "behaviour": [82, 141], "surveyfeaturefactory_cherrypick": [82, 145, 146, 147], "allow": [82, 144, 376, 381, 387], "individu": [82, 144, 387], "surveytangl": [82, 149, 150, 151, 152, 153, 154, 155, 156, 157, 387], "manag": [82, 112, 148, 153, 174, 287, 349, 350, 387], "surveyvari": [82, 83, 87, 96, 101, 102, 104, 105, 107, 108, 110, 111, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 147, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "variabl": [82, 83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 156, 158, 159, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 190, 191, 193, 194, 195, 196, 199, 335, 387], "interact": [82, 174, 376, 381, 384], "tanglesweepfeaturesi": [82, 148, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197], "bundl": [82, 178], "unionofinterv": [82, 119], "binary_unique_value_featur": 82, "extensive_numericvar_featur": 82, "uniqu": [82, 112, 117, 137, 190, 191, 196, 197, 198, 199], "feats2seps_invalids_to_both_sid": 82, "assign": [82, 103, 106, 144, 147, 192, 279, 280, 387], "answer": [82, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 156, 192, 194, 195, 196, 206, 387], "nominalvar_features_all_cat": [82, 100], "numericvar_features_inside_regular_bin": 82, "numericvar_features_split_regular_g": [82, 100], "ordinalvar_features_ge_all_split": [82, 100], "search_tangl": 82, "search_tangles_uncross": [82, 197], "cross": [82, 198, 211, 219, 234, 240, 250, 256, 387], "simple_unique_value_featur": [82, 193], "var": [83, 87, 96, 174, 387], "possibl": [83, 85, 86, 87, 89, 90, 96, 98, 99, 100, 114, 158, 174, 176, 177, 217, 228, 238, 246, 254, 262, 335, 387], "specif": [83, 85, 86, 87, 89, 90, 96, 98, 99, 121, 155, 174, 176, 177, 217, 218, 221, 222, 224, 225, 238, 254, 387], "make": [83, 87, 96, 112, 280, 381, 387], "invert_op": [83, 87, 96, 174], "invert": [83, 84, 87, 88, 96, 97, 174, 175, 226, 356, 387], "metadata": [83, 84, 86, 87, 88, 90, 96, 97, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 114, 131, 139, 140, 142, 143, 145, 146, 148, 151, 152, 153, 155, 156, 174, 175, 177, 190, 191, 194, 195, 196, 197, 198, 199, 210, 211, 213, 214, 217, 220, 229, 230, 231, 233, 234, 236, 238, 247, 248, 249, 250, 252, 254, 263, 264, 265, 387], "possible_values_represent": [83, 87, 96, 174], "represent": [83, 85, 87, 89, 96, 98, 174, 176, 349, 350], "accord": [83, 85, 87, 89, 96, 98, 112, 126, 174, 176, 375], "seen": [83, 85, 87, 89, 96, 98, 174, 176, 387], "far": [83, 85, 87, 89, 96, 98, 174, 176, 387], "update_values_for_specif": [83, 87, 96, 174], "updat": [83, 86, 87, 90, 96, 99, 149, 174, 177, 380, 381, 387], "op": [84, 88, 97, 175, 190, 387], "insert_label": [85, 89, 98, 152, 156, 176, 387], "specialis": [85, 89, 98, 176, 387], "subclass": [85, 89, 98, 158, 173, 176], "name": [85, 89, 98, 112, 121, 122, 125, 128, 133, 147, 152, 153, 156, 158, 171, 176, 280, 387], "sep_orient": [86, 90, 99, 177], "sep_metadata": [86, 90, 99, 177, 197, 198], "metadata_orient": [86, 90, 99, 177], "been": [86, 90, 99, 177, 178, 179, 184, 191, 195, 387], "either": [86, 90, 99, 177, 290, 321, 323, 324, 325, 330, 331, 334, 338, 376, 381, 384], "sigma": [95, 308], "spmatrix": [95, 148, 153, 282, 283, 297, 299, 302, 305, 339, 342, 343, 344], "numvar_func": 100, "create_feature_func": [100, 192], "split": [100, 101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 191, 194, 272, 283, 290, 380, 387], "rang": [100, 101, 104, 107, 110, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 156, 191, 194, 195, 320, 341, 381, 387], "regularli": 100, "see": [100, 131, 148, 153, 197, 198, 218, 239, 255, 279, 321, 324, 335, 338, 374, 381, 384, 387], "ordvar_func": 100, "nomvar_func": 100, "create_featur": [100, 103, 106, 109, 138, 141, 144], "column_select": [100, 101, 103, 104, 106, 107, 109, 110, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 156], "create_features_for_single_col": [100, 103, 106, 109, 138, 141, 144], "seri": [101, 102, 104, 105, 107, 108, 110, 111, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 147, 156, 190, 191, 193, 194, 195, 196, 199], "pd": [101, 104, 107, 110, 117, 119, 120, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 147, 156, 190, 191, 194, 195, 196, 199, 387], "questionselector": [101, 104, 107, 110, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156], "interpret": [101, 104, 107, 110, 112, 117, 119, 120, 121, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156, 279, 280, 387], "interpret_column_select": [101, 104, 107, 110, 112, 117, 119, 120, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 142, 145, 156], "col_data": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146], "num_featur": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 281], "here": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 279, 387], "expect": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 387], "exampl": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 174, 232, 374, 387], "8": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 338, 387], "group": [101, 102, 104, 105, 107, 108, 110, 111, 139, 140, 142, 143, 145, 146, 387], "question": [102, 105, 108, 111, 112, 115, 118, 119, 120, 123, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 143, 146, 152, 153, 156, 158, 167, 194, 195, 232, 387], "overwritten": [102, 105, 108, 111, 119, 131, 140, 143, 146, 159, 273, 274, 275, 299, 300, 301, 302, 303, 304, 305, 306, 307], "sub": [102, 105, 108, 111, 140, 143, 146, 338, 339, 342, 387], "panda": [102, 105, 108, 111, 112, 113, 119, 121, 125, 130, 132, 136, 137, 140, 143, 146, 156, 171, 387], "respond": [102, 103, 105, 108, 109, 111, 112, 115, 118, 124, 130, 135, 140, 143, 146, 194, 195, 196, 387], "embedded_feature_factori": [103, 109, 141], "who": [103, 109, 195, 196, 287], "gave": [103, 109, 115, 195, 196, 387], "numeric_var_num_bin": 106, "5": [106, 174, 194, 195, 281, 311, 312, 380, 384, 387], "don": [106, 119, 120, 127, 129, 130, 131, 133, 134, 380, 387], "t": [106, 119, 120, 127, 129, 130, 131, 133, 134, 272, 277, 280, 337, 338, 339, 342, 380, 387], "need": [106, 152, 273, 274, 275, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 374, 387], "handl": [106, 279], "complement": 106, "partit": [109, 200, 284, 285, 286, 289, 290, 291, 340, 387], "v": [109, 290, 308, 387], "valid": [109, 112, 115, 118, 134, 137, 148, 153, 158, 159, 160, 166, 167, 170, 171, 172, 387], "datafram": [112, 113, 125, 136, 137, 148, 156, 171, 387], "structur": [112, 125, 387], "inform": [112, 114, 119, 131, 136, 137, 158, 171, 209, 230, 231, 235, 248, 249, 251, 264, 265, 289, 290, 291, 293, 295, 387], "sure": [112, 158, 387], "stai": [112, 209], "synchron": 112, "num_quest": 112, "num_respond": [112, 115, 118, 387], "__getitem__": [112, 211, 234, 250], "retriev": [112, 113], "element": [112, 113, 200, 269, 281], "check_vari": 112, "complete_row": [112, 387], "out": [112, 115, 283, 387], "complet": [112, 115, 272, 282, 387], "count_number_of_unique_answ": 112, "count": [112, 117, 118, 387], "select": [112, 113, 117, 121, 125, 127, 132, 134, 137, 311, 312, 381, 382, 388], "count_valid_answers_per_respond": 112, "guess_missing_variable_rang": [112, 387], "guess": [112, 119, 120, 133], "guess_missing_variable_typ": 112, "replace_variable_nam": 112, "replace_variable_value_label": 112, "dictionari": [112, 114, 126, 127, 134, 158, 387], "map": [112, 126, 127, 158, 168, 169, 279], "replace_variable_valu": 112, "folder": [112, 122, 128, 387], "select_quest": [112, 387], "select_respond": [112, 387], "set_pyreadstat_meta_data": [112, 387], "python": [112, 131, 387], "packag": [112, 131, 387], "pyreadstat": [112, 131, 387], "set_variable_label": 112, "often": [112, 119, 132, 152, 156, 158, 387], "text": [112, 132, 152, 156, 158, 329, 336, 376, 384, 387], "set_variable_typ": [112, 387], "set_variable_value_list": 112, "summar": [112, 387], "summari": [112, 136, 388], "interest": [112, 136, 217, 238, 254, 387], "aspect": [112, 136, 387], "variable_info": [112, 127, 387], "item": [113, 126, 134, 159, 170, 387], "document": [113, 387], "variou": [113, 387], "part": [113, 174, 380, 387], "verbos": [114, 287, 320], "dict": [114, 126, 127, 134, 158, 159, 168, 169, 170, 217, 228, 238, 246, 254, 262, 350, 356, 374], "descript": [114, 279, 387], "print": [114, 287, 387], "consol": 114, "error": [114, 277, 282, 387], "problem": [114, 387], "boolean": [115, 203], "underli": [116, 350, 354], "affect": 116, "validli": 118, "invalid_value_rang": 119, "mark_added_label": 119, "overwrite_existing_inform": 119, "keep_existing_label": 119, "suppress_check_var_warn": [119, 120, 127, 129, 130, 131, 133, 134, 387], "insid": [119, 194, 211, 218, 222, 223, 234, 239, 242, 250, 255, 258, 387], "interv": [119, 194, 195, 381, 387], "inf": 119, "automat": [119, 120, 127, 129, 130, 131, 133, 134, 158, 387], "mark": [119, 380, 387], "overwrit": [119, 273, 274, 299, 300, 302, 303, 305, 306], "alreadi": [119, 211, 217, 222, 223, 228, 234, 238, 242, 246, 250, 254, 258, 262, 375], "present": [119, 384], "keep": [119, 380, 387], "known": [119, 387], "even": [119, 387], "show": [119, 120, 127, 129, 130, 131, 133, 134, 381, 384, 387], "warn": [119, 120, 127, 129, 130, 131, 133, 134], "unus": [119, 120, 127, 129, 130, 131, 133, 134, 387], "all_integer_variables_are_ordin": 120, "assum": [120, 174, 290], "integ": [120, 121, 127, 380, 387], "obtain": [121, 387], "follow": [121, 350, 356, 387], "singl": [121, 133, 281, 289, 291, 387], "someth": [121, 318, 324, 387], "arraylik": [121, 213, 214, 230, 231, 236, 248, 249, 252, 264, 265, 384], "must": [122, 273, 287, 341, 356, 374, 382], "end": [122, 128, 387], "_data": [122, 128], "csv": [122, 128], "_varinfo": [122, 128], "info": [125, 211, 217, 232, 234, 238, 250, 254, 387], "new_label": [126, 355], "change_type_to": 127, "retain": [127, 168], "natur": [127, 387], "old": [127, 387], "reduc": [129, 130, 387], "row_select": 130, "rowselector": 130, "meta": [131, 211, 217, 234, 238, 250, 254, 387], "type_of_scale_vari": [131, 387], "erase_exist": 131, "scale": [131, 320, 375, 384, 387], "valid_valu": [134, 158, 159, 170, 387], "invalid_valu": [134, 158, 159, 170, 191, 193, 194, 195, 196, 387], "compute_value_count": 137, "possibli": [138, 152, 153, 158, 197, 198, 324], "abl": [138, 144, 387], "treat": [144, 191], "set_factoryfunc": 144, "var_nam": 147, "func": 147, "current": [148, 153, 154, 157, 215, 216, 237, 253, 374, 387], "lower": [148, 149, 151, 153, 157, 284, 285, 286, 287, 387], "similarity_matrix": [148, 153], "scipi": [148, 153, 231, 249, 265, 320, 321, 324, 387], "spars": [148, 153, 211, 231, 234, 249, 250, 265, 267, 268, 277, 282, 283, 297, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 339, 341, 342], "similar": [148, 153, 296, 319, 320, 321, 322, 323, 324, 337, 341, 387], "defaultprogresscallback": [148, 153, 197, 198, 208], "feature_system": [148, 203], "valid_agreement_lower_bound": 148, "change_agr": [148, 387], "initialize_search": 148, "ordered_metadata": [148, 387], "sepcified_featur": 148, "could": [148, 154, 273, 274, 299, 300, 302, 303, 305, 306, 387], "typical_answ": [148, 387], "typic": [148, 156, 387], "force_tree_upd": [149, 387], "prevent": [149, 387], "accident": 149, "consum": [149, 387], "task": [149, 387], "mai": 149, "features_or_separ": [151, 153], "_matrix": 153, "feature_factori": 153, "only_original_featur": 154, "return_metadata": 155, "remove_duplicate_row": 155, "remove_prefixing_tangl": 155, "ident": 155, "Such": [155, 387], "prefix": [155, 387], "word": [155, 387], "exactli": [155, 197, 198], "only_affected_quest": 156, "extract_const_answ": [156, 387], "remove_incomplete_tangl": [156, 387], "compon": [156, 272, 277, 279, 280, 283, 296, 297, 338, 380], "unknown": [158, 387], "is_us": [158, 387], "brief": 158, "version": [158, 387], "raw": [158, 159, 160, 162, 170, 172, 387], "kei": [158, 387], "meaning": [158, 387], "flag": [158, 382, 387], "nice": [158, 387], "add_valu": 158, "respect": [158, 159, 197, 198, 387], "all_values_as_list": 158, "create_valu": 158, "invalid_values_as_list": 158, "is_nominal_typ": 158, "is_numeric_typ": 158, "is_ordinal_typ": 158, "is_valid_typ": 158, "is_valid_type_nam": 158, "typenam": [158, 167], "replace_valu": 158, "set_value_label": 158, "set_valu": 158, "to_row": 158, "valid_values_as_list": 158, "value_class": 158, "instanc": [158, 173, 381, 387], "type_nam": 167, "length": [171, 213, 214, 230, 231, 236, 248, 249, 252, 264, 265, 339, 340, 342, 345, 347, 387], "6": [171, 174, 387], "usabl": [171, 387], "dot": [174, 387], "10": [174, 279, 319, 378, 379, 380, 381, 384, 387], "our": [174, 217, 238, 254, 387], "4": [174, 387], "7": [174, 387], "remain": [174, 283, 387], "order_valu": 178, "all_oriented_sep_id": 178, "original_sep_id": [178, 179], "lower_agr": 178, "forward": [183, 193, 324], "min": 189, "min_incl": 189, "max_incl": 189, "prev": 189, "next": [189, 387], "single_col_data": [190, 191, 193, 194, 195, 196, 199], "unique_valu": [190, 199], "configur": [191, 195, 387], "inaccur": [191, 195], "incorrectli": [191, 195], "declar": [191, 195], "num_bin": [194, 195], "regular": [194, 195], "bin": [194, 195], "whose": [194, 217, 238, 254], "section": [194, 195, 387], "max_num_values_for_extensive_sep": 195, "50": [195, 387], "multipl": [195, 324, 387], "divid": [195, 309, 310], "Their": 195, "boundari": [195, 341, 379, 380], "threshold": [195, 196, 323, 341, 387], "high": [195, 196, 280, 387], "style": [195, 387], "max_number_of_sep": [197, 198], "import": [197, 387], "cannot": [197, 387], "gener": [197, 211, 219, 228, 230, 231, 232, 234, 240, 246, 248, 249, 250, 256, 262, 264, 265, 272, 280, 281, 337, 342, 349, 350, 387], "afterward": [197, 387], "pleas": [197, 387], "bunch": [197, 198, 387], "three": [197, 198, 387], "overlap": [197, 198, 387], "defin": [197, 198, 337, 339, 340, 342], "posit": [197, 198, 279, 280, 290, 337, 341, 346, 350, 356, 374, 375, 378, 379, 380, 384, 387], "minimum": [197, 198, 287, 320, 387], "intersect": [197, 198, 218, 228, 239, 246, 255, 262, 387], "half": [200, 346, 387], "lie": [200, 356], "get_tangle_by_path": 200, "guided_tangl": 200, "is_guid": 200, "stop": 201, "longest": 201, "subpath": 201, "extending_tangl": [204, 206], "extendingtangl": [205, 207], "respons": [205, 206, 349, 350, 387], "extend_tangl": 206, "forbidden_agr": 207, "superset": 207, "atomic_set": [210, 268, 270, 271], "setseparationsystemorderfunc": [210, 287], "data_s": [211, 234], "columnvector": [211, 212], "add_featur": 211, "add_sep": [211, 234, 250], "all_feature_id": 211, "all_sep_id": [211, 234, 250], "assemble_meta_info": [211, 234, 250], "user": [211, 217, 234, 238, 250, 254, 376, 381, 387], "enter": [211, 217, 234, 238, 250, 254], "custom": [211, 217, 232, 234, 238, 250, 254, 387], "prioritis": [211, 217, 234, 238, 250, 254], "befor": [211, 217, 234, 238, 250, 254, 387], "everyth": [211, 217, 234, 238, 250, 254], "els": [211, 217, 234, 238, 250, 254, 380, 387], "compute_infimum": [211, 234, 250], "infimum": [211, 218, 224, 234, 239, 243, 250, 255, 259, 287], "crossing_sep": [211, 234, 250], "feature_metadata": 211, "feature_id": [211, 220], "get_corn": [211, 234, 250], "four": [211, 217, 221, 234, 238, 241, 250, 254, 257, 272, 276, 377, 378, 380, 387], "get_feature_id": 211, "get_sep_id": [211, 234, 250], "infimum_of_two": [211, 234, 250], "is_l": [211, 234, 250], "feat_id_a": [211, 225, 227], "b": [211, 225, 234, 244, 250, 260, 335, 340, 387], "feat_id_b": [211, 225, 227], "is_nest": [211, 234, 250], "nest": [211, 226, 234, 245, 250, 261, 287], "is_subset": 211, "metadata_matrix": [211, 234, 250], "explain": [211, 228, 234, 246, 250, 262], "repeatedli": [211, 228, 234, 246, 250, 262], "separation_metadata": [211, 234, 250], "with_arrai": [211, 234, 250], "with_sparse_arrai": [211, 234, 250], "access": [212, 234, 235, 250, 251, 353, 387], "datapoint": [212, 218, 222, 223, 235, 239, 242, 251, 255, 258], "new_featur": 213, "piec": [213, 214, 230, 231, 232, 233, 236, 248, 249, 252, 264, 265], "new_sep": [214, 236, 252], "store": [215, 216, 237, 253, 387], "known_meta_info": [217, 238, 254], "mere": [217, 238, 254], "being": [217, 238, 245, 254, 261], "info_object": [217, 228, 238, 246, 254, 262], "becom": [217, 238, 254, 387], "specification1": 217, "info_object_1": [217, 238, 254], "specification2": 217, "info_object2": [217, 238, 254], "implic": [217, 238, 254], "meta_info": [217, 238, 254], "avoid": [217, 228, 238, 246, 254, 262, 387], "stuff": [217, 228, 238, 246, 254, 262], "twice": [217, 228, 238, 246, 254, 262, 387], "henc": [218, 239, 255], "sequenc": [219, 240, 256], "link": [220, 387], "feature_id_a": [221, 224], "feature_id_b": [221, 224], "specification_a": [224, 225, 227], "specification_b": [224, 225, 227], "le": [225, 244, 260], "inclus": [225, 387], "prohibit": 225, "latter": [225, 387], "feature_id_1": 226, "feature_id_2": 226, "data_list": [228, 246, 262], "normal_form": [228, 246, 262], "disjunct": [228, 246, 262, 325, 335], "_known_feature_matric": 228, "simplifi": [228, 246, 262, 325], "logic": [228, 246, 262, 288, 326, 327, 328, 329, 330, 331, 333, 334, 336], "term": [228, 246, 262, 325, 330, 331, 336, 387], "conjunct": [228, 246, 262, 325, 335], "normal": [228, 246, 262, 267, 270, 296, 317, 322, 330, 331, 334, 335, 345, 347, 380], "form": [228, 246, 262, 330, 331, 334, 335, 341, 381, 387], "dnf": [228, 246, 262, 325, 330, 331, 334, 335], "union": [228, 246, 262, 387], "cnf": [228, 246, 262, 325, 330, 331, 334, 335], "cach": [228, 246, 262], "return_sep_info": [230, 231, 248, 249, 264, 265], "incom": [230, 231, 248, 249, 264, 265, 387], "input": [230, 231, 248, 249, 264, 265, 272, 276, 279, 325, 330, 331, 334, 350], "csc_matrix": [231, 249, 265, 268, 315], "intuit": 232, "questionnair": [232, 387], "sep_id_a": [234, 241, 243, 244, 250, 257, 259, 260], "sep_id_b": [234, 241, 243, 244, 250, 257, 259, 260], "orientation1": [238, 254], "orientation2": [238, 254], "orientation_a": [243, 244, 259, 260], "orientation_b": [243, 244, 259, 260], "sep_id_1": [245, 261], "sep_id_2": [245, 261], "depend": [245, 261, 350, 387], "_known_sep_matric": [246, 262], "datas": 250, "atomic_set_ind": 267, "atom": [267, 268, 269, 270, 271], "atomic_to_sep": 267, "contract": [267, 270, 271], "seps_to_atom": 267, "csr_matrix": [268, 316, 320, 321, 324, 341, 377], "s_atom": 270, "orderfuncderiv": [272, 274, 275, 278], "cut": [272, 273, 277, 278, 298, 308], "add_all_corners_of_featur": 272, "min_s_t_cut": 272, "weight": [272, 277, 298, 308, 309, 310, 311, 312, 320, 387], "graph": [272, 277, 278, 279, 282, 283, 288, 297, 299, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 350], "adjac": [272, 277, 279, 296, 297, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 321, 324], "minimize_cut": 272, "local": [272, 278, 387], "starting_featur": [272, 278], "nodal_domain": 272, "nodal": [272, 279], "domain": [272, 279], "vertic": [272, 277, 279, 283, 309, 310, 311, 312, 315, 322], "real": [272, 279, 387], "pca_featur": 272, "inspir": [272, 280], "princip": [272, 280, 338, 387], "pca": [272, 280], "random_featur": 272, "randomli": [272, 281], "spectral_featur": 272, "spectral": [272, 282, 283], "bipartit": [272, 282, 283, 337, 340, 377, 378, 379, 380], "directli": [272, 280, 282, 387], "eigenvector": [272, 280, 282], "spectral_features_split": 272, "discret": [273, 278, 289, 292, 294], "deriv": [273, 274, 278, 300, 303, 306, 387], "change_discrete_deriv": [273, 299, 302, 305], "help": [273, 274, 299, 300, 302, 303, 305, 306, 387], "perform": [273, 274, 278, 287, 299, 300, 302, 303, 305, 306, 387], "discrete_deriv": [273, 299, 302, 305], "feat": [274, 276, 285, 286, 289, 291, 293, 300, 303, 306, 339, 340, 342], "change_index": [274, 300, 303, 306], "flip": [275, 301, 304, 307], "duplic": [276, 387], "csr_arrai": [277, 299, 302, 305, 308, 309, 310, 311, 312, 319, 322, 323], "vertex": [277, 318, 322], "disjoint": 277, "produc": 277, "identifi": [277, 279, 280, 387], "equival": [277, 387], "float": [277, 279, 281, 283, 294, 319, 320, 321, 322, 323, 339, 341, 342, 356, 374, 384, 385], "flow": 277, "order_deriv": 278, "max_step": 278, "100000000": 278, "initi": [278, 387], "better": [278, 287, 374, 387], "minima": 278, "optim": [278, 341], "u": [279, 338, 387], "weak": 279, "ep": [279, 341], "1e": [279, 319, 341], "detail": [279, 387], "strong": [279, 387], "decomposit": [279, 337, 338], "epsilon": [279, 321], "larger": 279, "like": [279, 318, 322, 324, 341, 380, 387], "close": [279, 318, 322, 341, 387], "closer": 279, "use_j": 280, "orthogon": 280, "direct": [280, 283, 324, 350, 354, 387], "covari": [280, 337, 338], "coordin": [280, 318, 322, 323, 356, 380, 381, 382], "regard": 280, "axi": [280, 322, 345, 346, 347, 348, 356, 374, 381, 384], "particular": 280, "n": [280, 338, 387], "p": [280, 341, 387], "dimens": 280, "lowest": [280, 387], "greatest": 280, "magnitud": 280, "accept": [280, 387], "lead": 280, "exclus": 280, "There": [280, 387], "shortcut": 280, "eigenvalu": [280, 282], "j": [280, 295, 344, 387], "mm": [280, 387], "sens": [280, 387], "larg": [280, 387], "dtype": 280, "num_el": 281, "probabl": [281, 387], "groundset": 281, "independ": [281, 387], "chosen": [281, 356], "ground": 281, "l": [282, 283, 290, 296, 313, 317, 387], "return_eigenvector": 282, "disconnect": 282, "laplacian": [282, 283, 296, 317, 343], "check_connect": 283, "min_component_size_fract": 283, "01": [283, 323, 374], "ignore_small_compon": 283, "faster": 283, "spectral_bipartit": 283, "bigger": [283, 387], "further": [283, 387], "big": [283, 387], "few": [283, 387], "constant": [283, 321], "order_func_bal": 284, "balanc": [284, 285, 286, 338, 339, 342, 345], "order_func_min_side_s": 284, "sys_ord": 287, "done": [287, 331, 387], "suitabl": 287, "chose": 287, "thu": [287, 335], "work": [287, 320, 356, 387], "requir": [287, 387], "submodular": [287, 342], "inject": 287, "star": [287, 387], "todo": 287, "dont": [287, 387], "sy": [287, 387], "ord": 287, "program": [287, 387], "efficient_distinguisher_level": 287, "efficient_distinguisher_id": 287, "entropi": [288, 290, 291, 293, 294, 295], "matrix_ord": [288, 338, 339, 340, 341, 343, 344], "preprocess": [288, 346, 347, 348], "ui": [288, 377, 381, 384, 385, 387], "colsplit_mutual_inform": 289, "mutual": [289, 290, 295, 387], "datapointwise_information_gain": 289, "gain": [289, 291, 293], "information_gain": 289, "joint_entropi": [289, 290], "joint": [289, 294], "pairwise_mutual_inform": 289, "pairwis": [289, 295], "combined_entropi": 290, "max_entropi": 290, "togeth": [290, 387], "entir": [290, 356], "per": [291, 387], "x_1": [292, 294], "x_k": [292, 294], "h": [292, 294, 387], "x_2": 294, "cut_weight": [296, 299, 302, 305, 308, 309, 310], "minor": [296, 315, 387], "connected_component_ind": 296, "greedy_neighborhood": 296, "neighborhood": [296, 311, 312, 318, 321, 387], "greedy_neighborhood_old": 296, "combinatori": [296, 313], "d": [296, 313, 316, 317, 387], "modularity_matrix": 296, "modular": [296, 316], "normalized_laplacian": 296, "2": [296, 317, 322, 323, 341, 374, 384, 387], "cutweightord": [298, 300, 301], "ncutord": [298, 303, 304], "ratiocutord": [298, 306, 307], "cut_weight_ord": 298, "adjacency_matrix": [298, 299, 302, 305, 308, 309, 310], "ncut_ord": 298, "ncut": [298, 309], "ratiocut_ord": 298, "ratiocut": [298, 310], "sum": [308, 309, 310, 323, 331], "across": [308, 309, 310], "o1": 308, "book": [308, 337, 343, 344, 387], "w": [308, 387], "orderfunct": [308, 309, 310], "multipli": [309, 310, 331], "total": [309, 310, 338, 374, 387], "volum": 309, "start_neighborhood": [311, 312], "forbidden_vertic": [311, 312], "minimize_weight": [311, 312], "best": [311, 312, 387], "ones": [311, 312], "greedi": [311, 312], "procedur": [311, 312], "diagon": [313, 317, 342], "csr": [313, 317], "contract_graph": 314, "bag": [314, 315], "bag_ind": 315, "cosine_similar": 318, "cosin": [318, 319, 320], "cosine_similarity_graph_csr_data": 318, "epsilon_neighborhood_graph": 318, "distanc": [318, 321, 322, 323, 324, 337, 341, 380], "grid_distance_graph": 318, "grid": [318, 322], "image_to_similarity_graph": 318, "pixel": [318, 322, 323, 384], "imag": [318, 323, 376, 384], "k_nearest_neighbor": 318, "nearest": [318, 324], "sim_thresh": [319, 320], "max_neighbour": 319, "return_spars": 319, "sequenti": [319, 387], "memori": [319, 320], "slower": [319, 387], "issu": 319, "mat": 320, "25": [320, 387], "weight_rang": 320, "chunk_siz": 320, "100": [320, 387], "matric": [320, 335], "cosine_similarity_graph": 320, "chunk": 320, "adj_matrix": 320, "max_dist": [321, 322], "dist2sim": 321, "metric": [321, 322, 324], "condens": [321, 324], "spatial": [321, 324], "squareform": [321, 324], "pdist": [321, 324], "argument": [321, 324], "transform": 321, "unweight": 321, "grid_shap": 322, "dist": 322, "euklid": 322, "squar": [322, 340], "manhattan": 322, "pixel_coord_distance_graph": 323, "sigma_c": 323, "sigma_d": 323, "color_sim_p": 323, "gaussian": 323, "color": [323, 378, 379, 380], "appli": [323, 384, 387], "absolut": [323, 387], "channel": 323, "width": [323, 374, 387], "grayscal": 323, "spread": 323, "sprase": 323, "ties_al": 324, "them": [324, 387], "realli": [324, 387], "nn": [324, 387], "ti": [324, 387], "broken": [324, 387], "special": [324, 387], "sep_to_term": [325, 333], "logcial": [325, 335], "made": [325, 335, 382], "claus": [325, 335], "themselv": [325, 335], "liter": [325, 335], "said": [325, 335], "conjunctivenormalform": 325, "disjunctivenormalform": 325, "logicterm": 325, "textterm": [325, 336], "distribut": 325, "row_label": [326, 327], "_outer_oper": 329, "terma": [330, 331], "termb": [330, 331], "law": [331, 387], "recursionlog": 332, "feature_label": 333, "og_sep": 333, "matter": 334, "conjuct": 335, "c": [335, 338, 339, 342, 387], "On": 335, "hand": 335, "As": [335, 387], "tell": 335, "semantictextterm": 335, "matrixordersvd": 337, "approxim": [337, 338], "singular": [337, 338], "covariance_ord": 337, "logdet_ord": 337, "f": [337, 338, 339, 340, 342, 387], "log": [337, 340], "det": [337, 340], "m_a": [337, 340], "m_b": [337, 340], "margin_order_matrix": 337, "quadrat": [337, 341, 342], "o_fiv": 337, "o5": [337, 343], "o_seven": 337, "o7": [337, 344], "mode": [338, 387], "variance_explain": 338, "shift": [338, 339, 342], "svd_arg": 338, "col": 338, "want": [338, 381, 384, 387], "evalu": 338, "af": [338, 339, 387], "paramet": [338, 387], "prefer": [338, 339, 342, 387], "effect": [338, 339, 342], "supermodular": [338, 339, 342], "let": [338, 339, 342, 387], "cj": [338, 339, 342], "vt": 338, "signific": 338, "fraction": [338, 374], "varianc": 338, "margin": 341, "08": 341, "sparse_mat": 341, "distance_p": 341, "behav": 341, "fictiti": 341, "minkowski": 341, "norm": 341, "infti": 341, "outsid": [342, 387], "main": [342, 387], "along": [345, 346, 347, 348], "median": [345, 346], "subtract": [345, 346], "normalize_length": 345, "euclidean": [345, 347], "balanced_data": 346, "deviat": 348, "convert": [348, 387], "bintreenetworkx": [349, 351, 352, 353, 354, 355, 356], "networkx": [349, 350, 379, 380], "bintre": [349, 357], "graphnod": 349, "treenod": [349, 374, 375], "plot_tre": [349, 375], "plot": [349, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384], "print_node_label": [349, 374], "depths_for_layout": 350, "successor": 350, "choic": 350, "descend": 350, "draw": [350, 377, 378, 379, 381], "get_ids_from_label": 350, "get_label": 350, "relabel": 350, "tst_layout": 350, "ax": [351, 374, 375, 378, 379, 380, 381, 384, 385, 387], "draw_node_label_func": 351, "draw_edge_label_func": 351, "node_label_s": 351, "05": [351, 379, 380], "edge_label_s": 351, "03": [351, 378], "level_label_width": [351, 387], "draw_level": 351, "level_label_func": [351, 387], "node_id": [353, 355], "digraph": 354, "nx": 354, "awai": [354, 387], "y": [356, 381, 382, 384, 387], "sinc": 356, "grow": 356, "toward": [356, 387], "bottom": 356, "layout": [356, 379], "when": [357, 387], "some_tree_nod": 374, "search_cent": 374, "plot_nod": 374, "edge_color": [374, 378, 379, 380], "node_s": [374, 375, 378, 380], "ax_project": 374, "plot_edge_annot": 374, "edge_annotation_s": 374, "matplotlib": [374, 375, 379, 380, 381, 384, 387], "activ": [374, 387], "center": [374, 387], "plotnodefunc": 374, "circl": [374, 377, 380], "figur": [374, 384, 387], "project": 374, "rectilinear": 374, "fit": 374, "uncommon": [374, 387], "plotedgeannotationfunc": 374, "annot": [374, 376, 384, 385], "move": 375, "splitgraph": [376, 378, 379, 380], "xypick": [376, 382, 383], "pick": [376, 381], "plot_annot": [376, 385], "wrap_annotation_func_ax": [376, 384], "annotationfuncimg": [376, 384, 385], "annotationfuncax": [376, 385], "draw_ellips": [377, 380], "arrang": [377, 378, 380], "ellips": [377, 378], "draw_side_and_boundari": 377, "draw_stacked_circl": 377, "inner_node_color_neg": [378, 380], "boundary_node_color_neg": [378, 380], "r": [378, 379, 380, 387], "inner_node_color_po": [378, 380], "boundary_node_color_po": [378, 380], "pos_sid": 379, "node_posit": 379, "inner_node_color": [379, 380], "boundary_node_color": [379, 380], "inner_node_s": 379, "boundary_node_s": 379, "inner": [379, 387], "marked_nodes_ind": 380, "marked_node_s": 380, "marked_nodes_color": 380, "horizont": 380, "flip_pos_sid": 380, "center_boundary_part": 380, "fixed_stack_dist": 380, "prev_po": 380, "third": 380, "fourth": 380, "drawn": 380, "diamet": 380, "stack": 380, "unit": [380, 384, 387], "marked_nodes_s": 380, "revers": 380, "forc": [380, 387], "mid": 380, "fix": [380, 387], "factor": 380, "interpol": 380, "drawn_po": 380, "po": 380, "mainli": [380, 387], "movi": 380, "sel_callback": 381, "xrang": 381, "yrang": 381, "xtick": 381, "ytick": 381, "continuous_upd": 381, "draw_custom_pick": 381, "librari": [381, 387], "callback_object": 381, "min_x_valu": 381, "max_x_valu": 381, "min_y_valu": 381, "max_y_valu": 381, "tick": 381, "drag": [381, 384], "drop": [381, 387], "click": [381, 384], "selected_x": 381, "selected_i": 381, "picker": 381, "xlabel": [381, 384], "ylabel": [381, 384], "__init__": 381, "listen": [381, 382], "redraw": [381, 382, 383], "sel_x": 382, "sel_i": 382, "with_callback": 382, "annotation_x_posit": 384, "annotation_offset": 384, "annotation_func": 384, "annotation_is_imag": 384, "annotation_zoom": 384, "titl": [384, 387], "figsiz": [384, 387], "caller": 384, "offset": 384, "dx": 384, "dy": 384, "box": [384, 387], "annotationfunctxt": 384, "content": 384, "pass": 384, "curv": 384, "mous": 384, "annotation_func_ax": 385, "your": [385, 387], "date": [386, 387], "feb": 386, "12": [386, 387], "2024": 386, "html": 387, "90": 387, "sp": 387, "pyplot": 387, "plt": 387, "ipython": 387, "displai": 387, "surveytanglesvisu": 387, "plot_tangle_search_tre": 387, "set_opt": 387, "max_row": 387, "max_column": 387, "max_colwidth": 387, "vscrollbar": 387, "selector": 387, "prop": 387, "500px": 387, "overflow": 387, "scroll": 387, "inlin": 387, "block": 387, "def": 387, "styled_df": 387, "df": 387, "scrollabl": 387, "set_properti": 387, "border": 387, "1px": 387, "black": 387, "solid": 387, "set_table_styl": 387, "notebook": 387, "purpos": 387, "facil": 387, "showcas": 387, "recommend": 387, "practic": 387, "investig": 387, "european": 387, "studi": 387, "ev": 387, "2017": 387, "nation": 387, "repeat": 387, "research": 387, "programm": 387, "basic": 387, "human": 387, "insight": 387, "idea": 387, "belief": 387, "attitud": 387, "opinion": 387, "citizen": 387, "over": 387, "europ": 387, "websit": 387, "due": 387, "licens": 387, "restrict": 387, "share": 387, "repositori": 387, "regist": 387, "download": 387, "free": 387, "gesi": 387, "spss": 387, "integr": 387, "extract": 387, "zip": 387, "za7500_v5": 387, "sav": 387, "quick": 387, "overview": 387, "interfac": 387, "read": 387, "export": 387, "profession": 387, "statist": 387, "tool": 387, "stata": 387, "qualiti": 387, "vari": 387, "greatli": 387, "workflow": 387, "therefor": 387, "post": 387, "process": 387, "nevertheless": 387, "good": 387, "lot": 387, "highli": 387, "user_miss": 387, "read_sav": 387, "job": 387, "sync": 387, "cell": 387, "complete_survei": 387, "properli": 387, "crucial": 387, "support": 387, "finit": 387, "ask": 387, "favorit": 387, "ic": 387, "cream": 387, "categori": 387, "dai": 387, "week": 387, "eat": 387, "onc": 387, "These": 387, "potenti": 387, "arbitrari": 387, "amount": 387, "monei": 387, "spent": 387, "year": 387, "alwai": 387, "unambigu": 387, "especi": 387, "becaus": 387, "classifi": 387, "ratio": 387, "techniqu": 387, "appropri": 387, "inappropri": 387, "context": 387, "fortun": 387, "easili": 387, "customiz": 387, "scope": 387, "a_1": 387, "a_k": 387, "a_i": 387, "a_2": 387, "a_": 387, "space": 387, "Then": 387, "earlier": 387, "tabl": 387, "inspect": 387, "nbsp": 387, "num_valid_answ": 387, "num_unique_answ": 387, "studyno": 387, "59438": 387, "archiv": 387, "doi": 387, "digit": 387, "studynoc": 387, "36": 387, "versionc": 387, "id_coca": 387, "unifi": 387, "caseno": 387, "19504": 387, "2018": 387, "2019": 387, "2020": 387, "2021": 387, "fw_start": 387, "month": 387, "fieldwork": 387, "19": 387, "fw_end": 387, "9": 387, "countri": 387, "code": 387, "iso": 387, "3166": 387, "albania": 387, "31": 387, "azerbaijan": 387, "40": 387, "austria": 387, "51": 387, "armenia": 387, "70": 387, "bosnia": 387, "herzegovina": 387, "bulgaria": 387, "112": 387, "belaru": 387, "191": 387, "croatia": 387, "203": 387, "czechia": 387, "208": 387, "denmark": 387, "233": 387, "estonia": 387, "246": 387, "finland": 387, "250": 387, "franc": 387, "268": 387, "georgia": 387, "276": 387, "germani": 387, "300": 387, "greec": 387, "348": 387, "hungari": 387, "352": 387, "iceland": 387, "380": 387, "itali": 387, "428": 387, "latvia": 387, "440": 387, "lithuania": 387, "499": 387, "montenegro": 387, "528": 387, "netherland": 387, "578": 387, "norwai": 387, "616": 387, "poland": 387, "620": 387, "portug": 387, "642": 387, "romania": 387, "643": 387, "russia": 387, "688": 387, "serbia": 387, "703": 387, "slovakia": 387, "705": 387, "slovenia": 387, "724": 387, "spain": 387, "752": 387, "sweden": 387, "756": 387, "switzerland": 387, "804": 387, "ukrain": 387, "807": 387, "north": 387, "macedonia": 387, "826": 387, "great": 387, "britain": 387, "c_abrv": 387, "11": 387, "abbrevi": 387, "alpha": 387, "cntry_i": 387, "fw": 387, "82018": 387, "312018": 387, "402018": 387, "512018": 387, "702019": 387, "1002017": 387, "1122018": 387, "1912017": 387, "2032017": 387, "2082017": 387, "2332018": 387, "2462017": 387, "2462018": 387, "2502018": 387, "2682018": 387, "2762017": 387, "3002019": 387, "3482018": 387, "3522017": 387, "3802018": 387, "4282021": 387, "4402018": 387, "4992019": 387, "5282017": 387, "5782018": 387, "6162017": 387, "6202020": 387, "6422018": 387, "6422019": 387, "6432017": 387, "6882018": 387, "7032017": 387, "7052017": 387, "7242017": 387, "7522017": 387, "7562017": 387, "8042020": 387, "8072019": 387, "8262018": 387, "13": 387, "collect": 387, "capi": 387, "papi": 387, "cawi": 387, "mail": 387, "cati": 387, "mm_select_sampl": 387, "14": 387, "mix": 387, "subsampl": 387, "interview": 387, "administ": 387, "self": 387, "full": 387, "modifi": 387, "de": 387, "break": 387, "off": 387, "mm_mixed_mod": 387, "15": 387, "design": 387, "experi": 387, "mod": 387, "mm_mode_fu": 387, "16": 387, "applic": 387, "3851": 387, "mm_matrix_group": 387, "17": 387, "21": 387, "41": 387, "61": 387, "8346": 387, "mm_original_matrix_design_i": 387, "18": 387, "709": 387, "mm_original_matrix_group_i": 387, "mm_fw_start_fu": 387, "20": 387, "3379": 387, "mm_fw_end_fu": 387, "mm_year_fu": 387, "22": 387, "mr_detailed_mode_d": 387, "23": 387, "sampl": 387, "phase": 387, "multi_referenc": 387, "676": 387, "mr_contact_mode_d": 387, "24": 387, "contact": 387, "simultan": 387, "mr_incentive_d": 387, "incent": 387, "euro": 387, "eur": 387, "postpaid": 387, "prepaid": 387, "fduplic": 387, "26": 387, "merg": 387, "fmiss": 387, "27": 387, "incomplet": 387, "v1": 387, "28": 387, "life": 387, "q1a": 387, "veri": 387, "quit": 387, "58727": 387, "v2": 387, "29": 387, "famili": 387, "q1b": 387, "59221": 387, "v3": 387, "30": 387, "friend": 387, "acquaint": 387, "q1c": 387, "59215": 387, "v4": 387, "leisur": 387, "q1d": 387, "59032": 387, "v5": 387, "32": 387, "polit": 387, "q1e": 387, "58764": 387, "v6": 387, "33": 387, "religion": 387, "q1f": 387, "58622": 387, "v7": 387, "34": 387, "thing": 387, "happi": 387, "q2": 387, "58707": 387, "v8": 387, "35": 387, "state": 387, "health": 387, "q3": 387, "fair": 387, "poor": 387, "59304": 387, "v9": 387, "belong": 387, "religi": 387, "organ": 387, "q4a": 387, "mention": 387, "58333": 387, "v10": 387, "37": 387, "cultur": 387, "q4b": 387, "58284": 387, "v11": 387, "38": 387, "trade": 387, "q4c": 387, "58269": 387, "v12": 387, "39": 387, "parti": 387, "q4d": 387, "58243": 387, "v13": 387, "environ": 387, "ecologi": 387, "anim": 387, "q4e": 387, "58271": 387, "v14": 387, "q4f": 387, "58223": 387, "v15": 387, "42": 387, "sport": 387, "recreat": 387, "q4g": 387, "58374": 387, "v16": 387, "43": 387, "charit": 387, "humanitarian": 387, "q4h": 387, "58259": 387, "v17": 387, "44": 387, "q4i": 387, "58181": 387, "v18": 387, "45": 387, "aid": 387, "q4j": 387, "58176": 387, "v19": 387, "46": 387, "q4k": 387, "57728": 387, "f20": 387, "47": 387, "inconsist": 387, "spontan": 387, "q4": 387, "consist": 387, "dk": 387, "na": 387, "although": 387, "53834": 387, "v20": 387, "48": 387, "53185": 387, "v20a": 387, "49": 387, "mq": 387, "26602": 387, "v20b": 387, "26337": 387, "v21": 387, "did": 387, "voluntari": 387, "q5": 387, "ye": 387, "58986": 387, "v22": 387, "52": 387, "peopl": 387, "race": 387, "q6a": 387, "57084": 387, "v23": 387, "53": 387, "heavi": 387, "drinker": 387, "q6b": 387, "58075": 387, "v24": 387, "54": 387, "immigr": 387, "foreign": 387, "worker": 387, "q6c": 387, "56520": 387, "f24_it": 387, "55": 387, "IT": 387, "experiment": 387, "v24a_it": 387, "v24b_it": 387, "2277": 387, "56": 387, "303": 387, "57": 387, "335": 387, "v25": 387, "58": 387, "drug": 387, "addict": 387, "q6d": 387, "58247": 387, "v26": 387, "59": 387, "homosexu": 387, "q6e": 387, "57513": 387, "v27": 387, "60": 387, "christian": 387, "major": 387, "q6f": 387, "49003": 387, "v28": 387, "muslim": 387, "q6g": 387, "55587": 387, "v29": 387, "62": 387, "jew": 387, "q6h": 387, "57061": 387, "v30": 387, "63": 387, "gypsi": 387, "q6i": 387, "57288": 387, "f30a": 387, "64": 387, "q6": 387, "19276": 387, "v30a": 387, "65": 387, "wouldn": 387, "mind": 387, "17871": 387, "v30b": 387, "66": 387, "18369": 387, "v30c": 387, "67": 387, "18823": 387, "v31": 387, "68": 387, "trust": 387, "too": 387, "care": 387, "q7": 387, "58083": 387, "v32": 387, "69": 387, "q8a": 387, "somewhat": 387, "59178": 387, "v33": 387, "q8b": 387, "58616": 387, "v34": 387, "71": 387, "person": 387, "q8c": 387, "58981": 387, "v35": 387, "72": 387, "meet": 387, "q8d": 387, "57969": 387, "v36": 387, "73": 387, "q8e": 387, "54785": 387, "v37": 387, "74": 387, "q8f": 387, "55087": 387, "v38": 387, "75": 387, "control": 387, "q9": 387, "deal": 387, "58550": 387, "v39": 387, "76": 387, "satisfi": 387, "q10": 387, "dissatisfi": 387, "59122": 387, "v40": 387, "77": 387, "pai": 387, "q11a": 387, "58740": 387, "v41": 387, "78": 387, "hour": 387, "q11b": 387, "58538": 387, "v42": 387, "79": 387, "opportun": 387, "q11c": 387, "57902": 387, "v43": 387, "80": 387, "holidai": 387, "q11d": 387, "58007": 387, "v44": 387, "81": 387, "achiev": 387, "q11e": 387, "58218": 387, "v45": 387, "82": 387, "q11f": 387, "57965": 387, "f45a": 387, "83": 387, "q11": 387, "iconsist": 387, "55646": 387, "v45a": 387, "84": 387, "55039": 387, "v45b": 387, "85": 387, "26626": 387, "v45c": 387, "86": 387, "27351": 387, "v46": 387, "87": 387, "develop": 387, "talent": 387, "q12a": 387, "agre": 387, "strongli": 387, "neither": 387, "nor": 387, "disagre": 387, "58777": 387, "f46_it": 387, "88": 387, "cat": 387, "v50": 387, "q12": 387, "accordo": 387, "contrario": 387, "against": 387, "disaccordo": 387, "v47": 387, "89": 387, "humili": 387, "receiv": 387, "without": 387, "q12b": 387, "58515": 387, "v48": 387, "lazi": 387, "q12c": 387, "58687": 387, "v49": 387, "91": 387, "duti": 387, "societi": 387, "q12d": 387, "58714": 387, "92": 387, "come": 387, "q12e": 387, "58820": 387, "v51": 387, "93": 387, "denomin": 387, "q13": 387, "58984": 387, "v52": 387, "94": 387, "q13a": 387, "harmon": 387, "roman": 387, "cathol": 387, "protest": 387, "church": 387, "conformist": 387, "evangel": 387, "hindu": 387, "buddhist": 387, "orthodox": 387, "41037": 387, "v52_c": 387, "95": 387, "801": 387, "al": 387, "sunni": 387, "802": 387, "bekrathi": 387, "803": 387, "805": 387, "806": 387, "mormon": 387, "808": 387, "jehovah": 387, "wit": 387, "809": 387, "810": 387, "bah\u00e1": 387, "\u00ed": 387, "811": 387, "jewish": 387, "812": 387, "813": 387, "write": 387, "3101": 387, "az": 387, "3102": 387, "3103": 387, "3104": 387, "3105": 387, "baha": 387, "3106": 387, "3130": 387, "xa0oth": 387, "4001": 387, "AT": 387, "4002": 387, "greek": 387, "4003": 387, "armen": 387, "4004": 387, "4005": 387, "4006": 387, "augsburg": 387, "confess": 387, "4007": 387, "helvet": 387, "4008": 387, "4009": 387, "4010": 387, "4011": 387, "4012": 387, "russian": 387, "saint": 387, "nichola": 387, "4013": 387, "polish": 387, "4014": 387, "rumanian": 387, "commun": 387, "holi": 387, "resurrect": 387, "4015": 387, "serbian": 387, "sava": 387, "4016": 387, "bulgarian": 387, "ivan": 387, "rilski": 387, "4017": 387, "4018": 387, "jesu": 387, "christ": 387, "4019": 387, "4020": 387, "4021": 387, "4022": 387, "4023": 387, "alev": 387, "4024": 387, "shia": 387, "4025": 387, "4026": 387, "islam": 387, "4027": 387, "faith": 387, "4028": 387, "4029": 387, "4030": 387, "4031": 387, "5101": 387, "am": 387, "armenian": 387, "apostol": 387, "5102": 387, "5103": 387, "5104": 387, "5105": 387, "5106": 387, "yazidi": 387, "5116": 387, "7001": 387, "ba": 387, "7002": 387, "7003": 387, "7004": 387, "7005": 387, "7006": 387, "adventist": 387, "7007": 387, "baptist": 387, "7008": 387, "7030": 387, "10001": 387, "bg": 387, "10002": 387, "10003": 387, "10004": 387, "10005": 387, "10006": 387, "10030": 387, "11201": 387, "BY": 387, "11202": 387, "pentecost": 387, "11203": 387, "11204": 387, "11205": 387, "seventh": 387, "11206": 387, "whole": 387, "gospel": 387, "11207": 387, "believ": 387, "11208": 387, "judaic": 387, "judaism": 387, "11209": 387, "lutheran": 387, "11210": 387, "11211": 387, "moslem": 387, "11212": 387, "11213": 387, "uniat": 387, "11214": 387, "19101": 387, "hr": 387, "19102": 387, "19103": 387, "19104": 387, "zagreb": 387, "19105": 387, "19106": 387, "19107": 387, "republ": 387, "croatian": 387, "19108": 387, "slovenian": 387, "confer": 387, "19109": 387, "19110": 387, "19116": 387, "20301": 387, "cz": 387, "20302": 387, "20303": 387, "20304": 387, "czech": 387, "brethren": 387, "20305": 387, "czechoslovak": 387, "hussit": 387, "20306": 387, "20307": 387, "20308": 387, "20309": 387, "20310": 387, "20311": 387, "20312": 387, "20801": 387, "20802": 387, "20803": 387, "20804": 387, "20805": 387, "20806": 387, "nors": 387, "20807": 387, "23301": 387, "ee": 387, "23302": 387, "moscow": 387, "23303": 387, "constantinopl": 387, "23304": 387, "23305": 387, "judaist": 387, "23306": 387, "23307": 387, "24601": 387, "fi": 387, "xa0evangel": 387, "24602": 387, "24603": 387, "24604": 387, "24605": 387, "24606": 387, "24607": 387, "24608": 387, "24610": 387, "25001": 387, "fr": 387, "25002": 387, "25003": 387, "25004": 387, "25005": 387, "25006": 387, "25007": 387, "25008": 387, "25016": 387, "25088": 387, "25099": 387, "26801": 387, "ge": 387, "26802": 387, "26803": 387, "gregorian": 387, "26804": 387, "26805": 387, "26806": 387, "26807": 387, "26808": 387, "sun": 387, "cult": 387, "26809": 387, "26816": 387, "27601": 387, "27602": 387, "27603": 387, "27604": 387, "27605": 387, "27606": 387, "27607": 387, "34801": 387, "hu": 387, "34802": 387, "34803": 387, "calvinist": 387, "34804": 387, "34805": 387, "34806": 387, "34807": 387, "34808": 387, "34809": 387, "jehova": 387, "34810": 387, "krishna": 387, "conscious": 387, "34815": 387, "35201": 387, "xa0": 387, "35202": 387, "35203": 387, "congreg": 387, "35204": 387, "reykjavik": 387, "35205": 387, "hafnarfj\u00f6r\u00f0ur": 387, "35206": 387, "assembli": 387, "35207": 387, "35208": 387, "35209": 387, "asatru": 387, "35210": 387, "sm\u00e1rakirkja": 387, "35211": 387, "35212": 387, "35213": 387, "35214": 387, "35215": 387, "35216": 387, "sidmennt": 387, "ethic": 387, "humanist": 387, "35217": 387, "35218": 387, "zuism": 387, "35219": 387, "35220": 387, "38001": 387, "38002": 387, "38003": 387, "38004": 387, "jeovah": 387, "Withnesses": 387, "etc": 387, "38005": 387, "38006": 387, "38007": 387, "38008": 387, "38030": 387, "42801": 387, "lv": 387, "42802": 387, "42803": 387, "42804": 387, "42805": 387, "42806": 387, "42807": 387, "42808": 387, "methodist": 387, "42809": 387, "42810": 387, "42811": 387, "42816": 387, "44001": 387, "lt": 387, "44002": 387, "44003": 387, "44004": 387, "44005": 387, "reform": 387, "44006": 387, "44007": 387, "44008": 387, "44016": 387, "49901": 387, "me": 387, "49902": 387, "montenegrin": 387, "49903": 387, "49904": 387, "49905": 387, "49906": 387, "49907": 387, "eastern": 387, "49916": 387, "49977": 387, "49988": 387, "49999": 387, "52801": 387, "nl": 387, "52802": 387, "52803": 387, "52804": 387, "52805": 387, "52806": 387, "52807": 387, "52808": 387, "52809": 387, "52810": 387, "buddhism": 387, "52811": 387, "57801": 387, "NO": 387, "57802": 387, "57803": 387, "57804": 387, "57805": 387, "57806": 387, "57807": 387, "57808": 387, "57809": 387, "61601": 387, "pl": 387, "61602": 387, "orhodox": 387, "61603": 387, "61604": 387, "mainstream": 387, "61605": 387, "61606": 387, "61607": 387, "mariavit": 387, "61608": 387, "61609": 387, "61610": 387, "buddism": 387, "61611": 387, "62001": 387, "pt": 387, "62002": 387, "62003": 387, "62004": 387, "62005": 387, "62006": 387, "62007": 387, "62008": 387, "62009": 387, "62010": 387, "64201": 387, "ro": 387, "64202": 387, "64203": 387, "64204": 387, "64205": 387, "64206": 387, "64207": 387, "budhist": 387, "64208": 387, "64209": 387, "whit": 387, "64216": 387, "64301": 387, "ru": 387, "64302": 387, "catholic": 387, "64303": 387, "protestant": 387, "64304": 387, "64305": 387, "64306": 387, "64307": 387, "64316": 387, "68801": 387, "68802": 387, "68803": 387, "68804": 387, "68805": 387, "68806": 387, "68807": 387, "slovakian": 387, "68808": 387, "68809": 387, "68810": 387, "68830": 387, "70301": 387, "sk": 387, "70302": 387, "70303": 387, "70304": 387, "70305": 387, "70306": 387, "70307": 387, "70308": 387, "70309": 387, "70310": 387, "70311": 387, "70312": 387, "70316": 387, "70501": 387, "si": 387, "70502": 387, "70503": 387, "70504": 387, "70505": 387, "70506": 387, "70507": 387, "hinduist": 387, "70508": 387, "70509": 387, "70510": 387, "72401": 387, "72402": 387, "72403": 387, "72404": 387, "72405": 387, "england": 387, "anglican": 387, "72406": 387, "72407": 387, "72408": 387, "presbyterian": 387, "scotland": 387, "72409": 387, "72410": 387, "72411": 387, "72412": 387, "72413": 387, "72414": 387, "72416": 387, "75201": 387, "se": 387, "swedish": 387, "75202": 387, "75203": 387, "75204": 387, "75205": 387, "75206": 387, "75207": 387, "75208": 387, "75216": 387, "75601": 387, "ch": 387, "75602": 387, "75603": 387, "75604": 387, "75605": 387, "75606": 387, "75607": 387, "75608": 387, "75609": 387, "75616": 387, "80401": 387, "ua": 387, "metropolitan": 387, "epiphanii": 387, "80402": 387, "ukrainian": 387, "onufrii": 387, "80403": 387, "80404": 387, "80405": 387, "80406": 387, "80407": 387, "80408": 387, "80409": 387, "charismat": 387, "80410": 387, "80411": 387, "80412": 387, "80413": 387, "80414": 387, "hinduism": 387, "80415": 387, "80701": 387, "mk": 387, "80702": 387, "80703": 387, "80704": 387, "irc": 387, "80705": 387, "80706": 387, "80716": 387, "82601": 387, "gb": 387, "82602": 387, "82603": 387, "82604": 387, "82605": 387, "82606": 387, "82607": 387, "82608": 387, "82609": 387, "urc": 387, "82610": 387, "IN": 387, "82611": 387, "82612": 387, "82613": 387, "82614": 387, "82615": 387, "sikh": 387, "82616": 387, "82617": 387, "41036": 387, "299": 387, "v53": 387, "96": 387, "q14": 387, "18919": 387, "v54": 387, "97": 387, "attend": 387, "servic": 387, "q15": 387, "never": 387, "58851": 387, "v55": 387, "98": 387, "q16": 387, "57551": 387, "v56": 387, "99": 387, "q17": 387, "convinc": 387, "atheist": 387, "57082": 387, "v57": 387, "god": 387, "q18a": 387, "55894": 387, "v58": 387, "101": 387, "death": 387, "q18b": 387, "51186": 387, "v59": 387, "102": 387, "hell": 387, "q18c": 387, "51868": 387, "v60": 387, "103": 387, "heaven": 387, "q18d": 387, "51899": 387, "v61": 387, "104": 387, "re": 387, "incarn": 387, "q19": 387, "52299": 387, "v62": 387, "105": 387, "statement": 387, "closest": 387, "q20": 387, "spirit": 387, "think": 387, "57497": 387, "v63": 387, "106": 387, "q21": 387, "57947": 387, "v64": 387, "107": 387, "prai": 387, "q22": 387, "sever": 387, "57882": 387, "v65": 387, "108": 387, "marriag": 387, "q23a": 387, "rather": 387, "59138": 387, "v66": 387, "109": 387, "adequ": 387, "q23b": 387, "59078": 387, "v67": 387, "110": 387, "hous": 387, "q23c": 387, "59121": 387, "v68": 387, "111": 387, "household": 387, "chore": 387, "q23d": 387, "58887": 387, "v69": 387, "q23e": 387, "58676": 387, "v70": 387, "113": 387, "hobbi": 387, "q23f": 387, "58814": 387, "v71": 387, "114": 387, "outdat": 387, "q24": 387, "57349": 387, "v72": 387, "115": 387, "suffer": 387, "mother": 387, "q25a": 387, "58080": 387, "v72_de": 387, "116": 387, "middl": 387, "v73": 387, "117": 387, "women": 387, "home": 387, "q25b": 387, "57241": 387, "v73_de": 387, "118": 387, "v74": 387, "119": 387, "woman": 387, "q25c": 387, "58055": 387, "v74_de": 387, "120": 387, "v75": 387, "121": 387, "man": 387, "earn": 387, "q25d": 387, "58466": 387, "v75_de": 387, "122": 387, "v76": 387, "123": 387, "men": 387, "leader": 387, "q25e": 387, "56994": 387, "v76_de": 387, "124": 387, "v77": 387, "125": 387, "univers": 387, "educ": 387, "boi": 387, "girl": 387, "q25f": 387, "58183": 387, "v77_de": 387, "126": 387, "v78": 387, "127": 387, "busi": 387, "execut": 387, "q25g": 387, "57158": 387, "v78_de": 387, "128": 387, "v79": 387, "129": 387, "goal": 387, "my": 387, "proud": 387, "q25h": 387, "56622": 387, "v79_de": 387, "130": 387, "v80": 387, "131": 387, "scarc": 387, "give": 387, "prioriti": 387, "q26a": 387, "58633": 387, "v81": 387, "132": 387, "q26b": 387, "58695": 387, "v82": 387, "133": 387, "coupl": 387, "q27a": 387, "54764": 387, "v83": 387, "134": 387, "q27b": 387, "58491": 387, "v84": 387, "135": 387, "long": 387, "q27c": 387, "58678": 387, "f85": 387, "136": 387, "learn": 387, "five": 387, "q28": 387, "v85": 387, "137": 387, "manner": 387, "q28a": 387, "58798": 387, "v86": 387, "138": 387, "q28b": 387, "58627": 387, "v87": 387, "139": 387, "q28c": 387, "58708": 387, "v88": 387, "140": 387, "feel": 387, "q28d": 387, "58729": 387, "v89": 387, "141": 387, "imagin": 387, "q28e": 387, "58160": 387, "v90": 387, "142": 387, "toler": 387, "q28f": 387, "58560": 387, "v91": 387, "143": 387, "thrift": 387, "q28g": 387, "58432": 387, "v92": 387, "144": 387, "persever": 387, "q28h": 387, "58376": 387, "v93": 387, "145": 387, "q28i": 387, "58124": 387, "v94": 387, "146": 387, "unselfish": 387, "q28j": 387, "58190": 387, "v95": 387, "147": 387, "obedi": 387, "q28k": 387, "58189": 387, "f96": 387, "148": 387, "54275": 387, "v96": 387, "149": 387, "53671": 387, "v96a": 387, "150": 387, "32113": 387, "v96b": 387, "151": 387, "32838": 387, "v97": 387, "152": 387, "q29": 387, "59132": 387, "v98": 387, "153": 387, "action": 387, "sign": 387, "petit": 387, "q30a": 387, "57002": 387, "v99": 387, "154": 387, "join": 387, "boycott": 387, "q30b": 387, "55875": 387, "v100": 387, "155": 387, "demonstr": 387, "q30c": 387, "v101": 387, "156": 387, "unoffici": 387, "strike": 387, "q30d": 387, "55474": 387, "v102": 387, "157": 387, "view": 387, "q31": 387, "47723": 387, "v103": 387, "158": 387, "q32a": 387, "58214": 387, "v104": 387, "159": 387, "refus": 387, "unemploi": 387, "q32b": 387, "58066": 387, "v105": 387, "160": 387, "competit": 387, "harm": 387, "q32c": 387, "57516": 387, "v106": 387, "161": 387, "effort": 387, "q32d": 387, "58103": 387, "v107": 387, "162": 387, "privat": 387, "govern": 387, "ownership": 387, "q32e": 387, "54991": 387, "f108": 387, "163": 387, "aim": 387, "q33": 387, "q33a": 387, "59248": 387, "v108": 387, "164": 387, "econom": 387, "growth": 387, "defens": 387, "sai": 387, "citi": 387, "countrysid": 387, "beauti": 387, "57503": 387, "v109": 387, "165": 387, "2nd": 387, "56342": 387, "f110": 387, "166": 387, "q34": 387, "q35": 387, "59321": 387, "v110": 387, "167": 387, "maintain": 387, "decis": 387, "fight": 387, "rise": 387, "price": 387, "protect": 387, "freedom": 387, "speech": 387, "v111": 387, "168": 387, "57178": 387, "v111_4": 387, "169": 387, "materialist": 387, "construct": 387, "postmaterialist": 387, "57053": 387, "v112": 387, "170": 387, "willing": 387, "q36": 387, "52718": 387, "f112_se": 387, "171": 387, "strida": 387, "f\u00f6r": 387, "f\u00f6rsvara": 387, "defend": 387, "1194": 387, "v113": 387, "172": 387, "bad": 387, "q37a": 387, "56028": 387, "v114": 387, "173": 387, "author": 387, "q37b": 387, "55280": 387, "v115": 387, "174": 387, "confid": 387, "q38a": 387, "57455": 387, "v116": 387, "175": 387, "arm": 387, "q38b": 387, "56006": 387, "v117": 387, "176": 387, "q38c": 387, "58159": 387, "v118": 387, "177": 387, "press": 387, "q38d": 387, "58072": 387, "v119": 387, "178": 387, "q38e": 387, "54191": 387, "v120": 387, "179": 387, "polic": 387, "q38f": 387, "58495": 387, "v121": 387, "180": 387, "parliament": 387, "q38g": 387, "57366": 387, "v122": 387, "181": 387, "civil": 387, "q38h": 387, "57228": 387, "v123": 387, "182": 387, "social": 387, "secur": 387, "q38i": 387, "57294": 387, "v124": 387, "183": 387, "q38j": 387, "55705": 387, "v125": 387, "184": 387, "q38k": 387, "54168": 387, "v126": 387, "185": 387, "q38l": 387, "58585": 387, "v127": 387, "186": 387, "justic": 387, "q38m": 387, "57092": 387, "v128": 387, "187": 387, "compani": 387, "q38n": 387, "54645": 387, "v129": 387, "188": 387, "environment": 387, "q38o": 387, "55582": 387, "v130": 387, "189": 387, "q38p": 387, "56884": 387, "v131": 387, "190": 387, "q38q": 387, "57506": 387, "v132": 387, "media": 387, "q38r": 387, "54341": 387, "v133": 387, "192": 387, "democraci": 387, "tax": 387, "rich": 387, "subsid": 387, "q39a": 387, "NOT": 387, "essenti": 387, "characterist": 387, "52980": 387, "v133_11c": 387, "193": 387, "respon": 387, "3283": 387, "v134": 387, "194": 387, "q39b": 387, "51892": 387, "v134_11c": 387, "195": 387, "3227": 387, "v135": 387, "196": 387, "elect": 387, "q39c": 387, "54015": 387, "v135_11c": 387, "197": 387, "3368": 387, "v136": 387, "198": 387, "unemploy": 387, "q39d": 387, "53977": 387, "v136_11c": 387, "199": 387, "3387": 387, "v137": 387, "200": 387, "armi": 387, "incompet": 387, "q39e": 387, "51896": 387, "v137_11c": 387, "201": 387, "3271": 387, "v138": 387, "202": 387, "oppress": 387, "q39f": 387, "52504": 387, "v138_11c": 387, "3323": 387, "v139": 387, "204": 387, "q39g": 387, "53050": 387, "v139_11c": 387, "205": 387, "3328": 387, "v140": 387, "206": 387, "obei": 387, "ruler": 387, "q39h": 387, "53068": 387, "v140_11c": 387, "207": 387, "3326": 387, "v141": 387, "q39i": 387, "54426": 387, "v141_11c": 387, "209": 387, "3440": 387, "v142": 387, "210": 387, "q40": 387, "58125": 387, "v143": 387, "211": 387, "own": 387, "q41": 387, "democrat": 387, "57214": 387, "v144": 387, "212": 387, "satisfact": 387, "q42": 387, "57530": 387, "v145": 387, "213": 387, "q43a": 387, "fairli": 387, "55374": 387, "v146": 387, "214": 387, "expert": 387, "q43b": 387, "54313": 387, "v147": 387, "215": 387, "rule": 387, "q43c": 387, "55409": 387, "v148": 387, "216": 387, "q43d": 387, "56245": 387, "v149": 387, "217": 387, "justifi": 387, "claim": 387, "benefit": 387, "q44a": 387, "58240": 387, "v150": 387, "218": 387, "cheat": 387, "q44b": 387, "58511": 387, "v151": 387, "219": 387, "q44c": 387, "58442": 387, "v152": 387, "220": 387, "bribe": 387, "q44d": 387, "58723": 387, "v153": 387, "221": 387, "q44e": 387, "56952": 387, "v154": 387, "222": 387, "abort": 387, "q44f": 387, "57277": 387, "v155": 387, "223": 387, "divorc": 387, "q44g": 387, "57903": 387, "v156": 387, "224": 387, "euthanasia": 387, "q44h": 387, "56185": 387, "v157": 387, "225": 387, "suicid": 387, "q44i": 387, "56705": 387, "v158": 387, "226": 387, "casual": 387, "sex": 387, "q44j": 387, "57033": 387, "v159": 387, "227": 387, "fare": 387, "public": 387, "transport": 387, "q44k": 387, "58559": 387, "v160": 387, "228": 387, "prostitut": 387, "q44l": 387, "57709": 387, "v161": 387, "229": 387, "artifici": 387, "insemin": 387, "vitro": 387, "fertil": 387, "q44m": 387, "56800": 387, "v162": 387, "230": 387, "violenc": 387, "q44n": 387, "58009": 387, "v163": 387, "231": 387, "penalti": 387, "q44o": 387, "57123": 387, "v164": 387, "232": 387, "town": 387, "q45a": 387, "58942": 387, "v165": 387, "counti": 387, "region": 387, "district": 387, "q45b": 387, "58786": 387, "v166": 387, "234": 387, "q45c": 387, "58857": 387, "v167": 387, "235": 387, "contin": 387, "q45d": 387, "58110": 387, "v168": 387, "236": 387, "world": 387, "q45e": 387, "57393": 387, "v169": 387, "237": 387, "q46": 387, "59318": 387, "v170": 387, "238": 387, "q47": 387, "55885": 387, "v171": 387, "239": 387, "vote": 387, "q48a": 387, "57525": 387, "v172": 387, "240": 387, "q48b": 387, "v173": 387, "241": 387, "q48c": 387, "34242": 387, "v174_lr": 387, "242": 387, "appeal": 387, "q49": 387, "40448": 387, "v174_c": 387, "243": 387, "socialist": 387, "movement": 387, "republican": 387, "legal": 387, "front": 387, "uniti": 387, "challeng": 387, "814": 387, "815": 387, "albanian": 387, "816": 387, "liber": 387, "817": 387, "agrarian": 387, "environmentalist": 387, "818": 387, "819": 387, "communist": 387, "820": 387, "allianc": 387, "821": 387, "libra": 387, "822": 387, "green": 387, "823": 387, "824": 387, "moder": 387, "825": 387, "disabl": 387, "866": 387, "No": 387, "877": 387, "888": 387, "899": 387, "musavat": 387, "popular": 387, "3107": 387, "3108": 387, "3109": 387, "3110": 387, "civic": 387, "solidar": 387, "3111": 387, "motherland": 387, "3112": 387, "hope": 387, "3113": 387, "prosper": 387, "3114": 387, "3115": 387, "3116": 387, "3117": 387, "3118": 387, "3119": 387, "modern": 387, "3131": 387, "sp\u00f6": 387, "kurz": 387, "austrian": 387, "\u00f6vp": 387, "fp\u00f6": 387, "altern": 387, "neo": 387, "peter": 387, "pilz": 387, "4066": 387, "revolutionari": 387, "feder": 387, "exit": 387, "heritag": 387, "5107": 387, "congress": 387, "former": 387, "5108": 387, "5109": 387, "tsarukyan": 387, "5110": 387, "5111": 387, "apricot": 387, "5112": 387, "renaiss": 387, "5126": 387, "5166": 387, "bosnian": 387, "1990": 387, "7009": 387, "7010": 387, "7011": 387, "7012": 387, "7013": 387, "futur": 387, "bih": 387, "7014": 387, "7015": 387, "7016": 387, "7017": 387, "7018": 387, "7019": 387, "bloc": 387, "7031": 387, "7066": 387, "bsp": 387, "mrf": 387, "attack": 387, "10007": 387, "vmro": 387, "10008": 387, "volya": 387, "10009": 387, "reviv": 387, "10010": 387, "10011": 387, "dost": 387, "10012": 387, "10013": 387, "10014": 387, "10015": 387, "salvat": 387, "10026": 387, "10066": 387, "belarusian": 387, "zyalyoniya": 387, "concord": 387, "narodnai": 387, "zgodi": 387, "conserv": 387, "bnf": 387, "labor": 387, "patriot": 387, "hramada": 387, "11215": 387, "11216": 387, "polici": 387, "presid": 387, "xa0lukashenko": 387, "11226": 387, "11266": 387, "bandi\u0107": 387, "milan": 387, "365": 387, "peasant": 387, "pension": 387, "slavonia": 387, "baranja": 387, "istrian": 387, "smart": 387, "19111": 387, "gorski": 387, "kotar": 387, "19112": 387, "19113": 387, "bridg": 387, "19114": 387, "19115": 387, "shield": 387, "19126": 387, "19166": 387, "ano": 387, "\u010dssd": 387, "ks\u010dm": 387, "bohemia": 387, "moravia": 387, "od": 387, "kdu": 387, "\u010dsl": 387, "top": 387, "09": 387, "pir\u00e1ti": 387, "pirat": 387, "spd": 387, "tomio": 387, "okamura": 387, "sz": 387, "stan": 387, "mayor": 387, "\u00fasvit": 387, "nk": 387, "dawn": 387, "coalit": 387, "svobodn\u00ed": 387, "20313": 387, "spo": 387, "20314": 387, "realist\u00e9": 387, "realist": 387, "20315": 387, "dsss": 387, "20316": 387, "20366": 387, "danish": 387, "venstr": 387, "20808": 387, "20809": 387, "red": 387, "20810": 387, "20811": 387, "blank": 387, "20866": 387, "estonian": 387, "centr": 387, "pro": 387, "patria": 387, "publica": 387, "conserav": 387, "23331": 387, "23366": 387, "leagu": 387, "finn": 387, "24609": 387, "24666": 387, "wing": 387, "extremist": 387, "anticapitalist": 387, "struggl": 387, "unsubmiss": 387, "radic": 387, "leftist": 387, "republicain": 387, "onward": 387, "25009": 387, "25010": 387, "25011": 387, "act": 387, "25012": 387, "25013": 387, "aris": 387, "25014": 387, "25015": 387, "25026": 387, "25066": 387, "georgian": 387, "rightist": 387, "industri": 387, "Will": 387, "26810": 387, "dream": 387, "26811": 387, "forum": 387, "26812": 387, "26813": 387, "girchi": 387, "26814": 387, "26815": 387, "26826": 387, "26866": 387, "german": 387, "27666": 387, "hungarian": 387, "mszp": 387, "fidesz": 387, "kdnp": 387, "jobbik": 387, "Be": 387, "lmp": 387, "era": 387, "egy\u00fctt": 387, "dialogu": 387, "pm": 387, "momentum": 387, "liber\u00e1lisok": 387, "34811": 387, "tail": 387, "dog": 387, "mkkp": 387, "34812": 387, "munk\u00e1sp\u00e1rt": 387, "34826": 387, "34866": 387, "xa0left": 387, "bright": 387, "xa0iceland": 387, "35226": 387, "35266": 387, "power": 387, "lorenzin": 387, "svp": 387, "patt": 387, "38009": 387, "38010": 387, "udc": 387, "38011": 387, "38012": 387, "38013": 387, "38014": 387, "brother": 387, "giorgia": 387, "meloni": 387, "38015": 387, "casapound": 387, "38016": 387, "italian": 387, "38031": 387, "38066": 387, "harmoni": 387, "kpv": 387, "farmer": 387, "latvian": 387, "42866": 387, "labour": 387, "lithuanian": 387, "elector": 387, "pole": 387, "alianc": 387, "44009": 387, "44010": 387, "homeland": 387, "44011": 387, "44012": 387, "44066": 387, "socialdemocrat": 387, "49908": 387, "demo": 387, "49909": 387, "49910": 387, "49911": 387, "49912": 387, "49913": 387, "bosniak": 387, "49914": 387, "49915": 387, "49917": 387, "forca": 387, "49918": 387, "49919": 387, "49926": 387, "49966": 387, "greenleft": 387, "50plu": 387, "52812": 387, "denk": 387, "52813": 387, "52814": 387, "52866": 387, "coastal": 387, "57810": 387, "57811": 387, "57812": 387, "57813": 387, "57814": 387, "57866": 387, "spontani": 387, "platform": 387, "kukiz": 387, "liberti": 387, "korwin": 387, "61666": 387, "portugues": 387, "reorgan": 387, "proletariat": 387, "monarch": 387, "62011": 387, "enough": 387, "62012": 387, "62013": 387, "62014": 387, "62015": 387, "renew": 387, "pnr": 387, "62016": 387, "62017": 387, "62018": 387, "62019": 387, "retire": 387, "pensionist": 387, "62020": 387, "62021": 387, "citizenship": 387, "62022": 387, "ptp": 387, "62023": 387, "earth": 387, "62024": 387, "62066": 387, "64226": 387, "64266": 387, "rodina": 387, "ldpr": 387, "64308": 387, "parna": 387, "64309": 387, "64310": 387, "civilian": 387, "64311": 387, "yabloko": 387, "64312": 387, "cprf": 387, "64313": 387, "64314": 387, "64326": 387, "64366": 387, "sn": 387, "psg": 387, "dss": 387, "sr": 387, "sd": 387, "ldp": 387, "68811": 387, "dveri": 387, "68812": 387, "djb": 387, "68813": 387, "pup": 387, "68814": 387, "68815": 387, "vojvodina": 387, "svm": 387, "68816": 387, "lsv": 387, "68817": 387, "pdd": 387, "68818": 387, "roma": 387, "rp": 387, "68819": 387, "sda": 387, "68820": 387, "sdp": 387, "68821": 387, "croat": 387, "dshv": 387, "68831": 387, "68866": 387, "kotleba": 387, "h\u00edd": 387, "ordinari": 387, "network": 387, "slovak": 387, "bori": 387, "koll\u00e1r": 387, "70313": 387, "70366": 387, "smc": 387, "desu": 387, "zl": 387, "nsi": 387, "zaab": 387, "alenka": 387, "bratusek": 387, "sl": 387, "sloven": 387, "70511": 387, "70566": 387, "spanish": 387, "catalonia": 387, "tide": 387, "compromis": 387, "catalan": 387, "basqu": 387, "nationalist": 387, "navarres": 387, "72415": 387, "canari": 387, "72417": 387, "island": 387, "72418": 387, "galician": 387, "72419": 387, "aragones": 387, "72420": 387, "72421": 387, "asturia": 387, "72426": 387, "72466": 387, "75231": 387, "75266": 387, "swiss": 387, "french": 387, "speak": 387, "75610": 387, "75611": 387, "75612": 387, "75613": 387, "ticino": 387, "75614": 387, "75626": 387, "75666": 387, "sluha": 387, "narodu": 387, "opozytsiina": 387, "platforma": 387, "za": 387, "zhyttia": 387, "batkivshchyna": 387, "yevropeiska": 387, "solidarnist": 387, "holo": 387, "oleh": 387, "liashko": 387, "syla": 387, "chest": 387, "partiia": 387, "opozytsiinyi": 387, "blok": 387, "hroisman": 387, "strategi": 387, "sharii": 387, "svoboda": 387, "80466": 387, "imro": 387, "dpmnu": 387, "intern": 387, "macedonian": 387, "besa": 387, "dpa": 387, "dpsm": 387, "serb": 387, "80707": 387, "dptm": 387, "turc": 387, "80708": 387, "dui": 387, "unioun": 387, "80709": 387, "dr": 387, "adp": 387, "uniteti": 387, "ndp": 387, "80710": 387, "80711": 387, "nsdp": 387, "80712": 387, "pdt": 387, "turk": 387, "80713": 387, "pef": 387, "80714": 387, "popgm": 387, "80715": 387, "ram": 387, "sdam": 387, "80717": 387, "spm": 387, "80718": 387, "80719": 387, "levica": 387, "80731": 387, "80766": 387, "scottish": 387, "plaid": 387, "cymru": 387, "uk": 387, "ukip": 387, "british": 387, "bnp": 387, "82666": 387, "47229": 387, "508": 387, "v175_lr": 387, "244": 387, "q49a": 387, "23004": 387, "v175_c": 387, "245": 387, "498": 387, "v176": 387, "q50a": 387, "52270": 387, "v176_dk": 387, "247": 387, "1618": 387, "v177": 387, "248": 387, "opposit": 387, "candid": 387, "run": 387, "q50b": 387, "47740": 387, "v177_dk": 387, "249": 387, "1469": 387, "v178": 387, "tv": 387, "favor": 387, "q50c": 387, "51081": 387, "v178_dk": 387, "251": 387, "1460": 387, "v179": 387, "252": 387, "voter": 387, "q50d": 387, "49897": 387, "v179_dk": 387, "253": 387, "1473": 387, "v180": 387, "254": 387, "journalist": 387, "coverag": 387, "q50e": 387, "51685": 387, "v180_dk": 387, "255": 387, "1571": 387, "v181": 387, "256": 387, "offici": 387, "q50f": 387, "50664": 387, "v181_dk": 387, "257": 387, "1551": 387, "v182": 387, "258": 387, "bui": 387, "q50g": 387, "48126": 387, "v182_dk": 387, "259": 387, "1459": 387, "v183": 387, "260": 387, "threaten": 387, "poll": 387, "q50h": 387, "49341": 387, "v183_dk": 387, "261": 387, "1534": 387, "v184": 387, "262": 387, "impact": 387, "q51": 387, "56958": 387, "v185": 387, "263": 387, "q52a": 387, "57389": 387, "v186": 387, "264": 387, "crime": 387, "q52b": 387, "wors": 387, "56679": 387, "v187": 387, "265": 387, "strain": 387, "welfar": 387, "q52c": 387, "56578": 387, "v188": 387, "266": 387, "q52d": 387, "distinct": 387, "tradit": 387, "55706": 387, "v189": 387, "267": 387, "born": 387, "q53a": 387, "58850": 387, "v190": 387, "institut": 387, "q53b": 387, "v191": 387, "269": 387, "ancestri": 387, "q53c": 387, "58728": 387, "v192": 387, "270": 387, "languag": 387, "q53d": 387, "59034": 387, "v193": 387, "271": 387, "q53e": 387, "58811": 387, "v194": 387, "272": 387, "q54a": 387, "57741": 387, "v195": 387, "273": 387, "q54b": 387, "57562": 387, "v196": 387, "274": 387, "q54c": 387, "57302": 387, "v197": 387, "275": 387, "q54d": 387, "57614": 387, "v198": 387, "enlarg": 387, "q55": 387, "gone": 387, "54139": 387, "v199": 387, "277": 387, "q56a": 387, "57664": 387, "f199_it": 387, "278": 387, "v203": 387, "q56": 387, "v200": 387, "279": 387, "difficult": 387, "q56b": 387, "58012": 387, "v201": 387, "280": 387, "q56c": 387, "58091": 387, "v202": 387, "281": 387, "unless": 387, "q56d": 387, "58042": 387, "282": 387, "threat": 387, "exagger": 387, "q56e": 387, "56348": 387, "v204": 387, "283": 387, "q57": 387, "loss": 387, "volunt": 387, "52224": 387, "v205": 387, "284": 387, "area": 387, "under": 387, "video": 387, "surveil": 387, "q58a": 387, "definit": 387, "57923": 387, "v206": 387, "285": 387, "monitor": 387, "exchang": 387, "internet": 387, "q58b": 387, "57022": 387, "v207": 387, "286": 387, "anyon": 387, "knowledg": 387, "q58c": 387, "57470": 387, "v208": 387, "287": 387, "televis": 387, "q59a": 387, "59128": 387, "v209": 387, "288": 387, "radio": 387, "q59b": 387, "58924": 387, "v210": 387, "289": 387, "daili": 387, "q59c": 387, "58929": 387, "v211": 387, "290": 387, "q59d": 387, "58647": 387, "v212": 387, "291": 387, "concern": 387, "neighbourhood": 387, "q60a": 387, "extent": 387, "58883": 387, "v213": 387, "292": 387, "q60b": 387, "58781": 387, "v214": 387, "293": 387, "fellow": 387, "countrymen": 387, "q60c": 387, "58704": 387, "v215": 387, "294": 387, "q60d": 387, "58212": 387, "v216": 387, "295": 387, "humankind": 387, "q60e": 387, "58144": 387, "v217": 387, "296": 387, "elderli": 387, "q61a": 387, "v218": 387, "297": 387, "q61b": 387, "58797": 387, "v219": 387, "298": 387, "q61c": 387, "58379": 387, "v220": 387, "sick": 387, "q61d": 387, "58912": 387, "v221": 387, "elimin": 387, "inequ": 387, "q62a": 387, "57320": 387, "v221_dk": 387, "301": 387, "384": 387, "v222": 387, "302": 387, "q62b": 387, "v222_dk": 387, "400": 387, "v223": 387, "304": 387, "recogn": 387, "merit": 387, "q62c": 387, "v223_dk": 387, "305": 387, "381": 387, "v224": 387, "306": 387, "terror": 387, "q62d": 387, "58215": 387, "v224_dk": 387, "307": 387, "404": 387, "v225": 387, "308": 387, "q63": 387, "male": 387, "femal": 387, "59412": 387, "v226": 387, "309": 387, "birth": 387, "q64": 387, "1937": 387, "59113": 387, "ag": 387, "310": 387, "older": 387, "age_r": 387, "311": 387, "recod": 387, "age_r2": 387, "312": 387, "age_r3": 387, "313": 387, "v227": 387, "314": 387, "q65": 387, "59367": 387, "v228b": 387, "315": 387, "q66": 387, "005": 387, "m49": 387, "south": 387, "america": 387, "011": 387, "western": 387, "africa": 387, "013": 387, "central": 387, "014": 387, "015": 387, "northern": 387, "017": 387, "018": 387, "southern": 387, "029": 387, "caribbean": 387, "030": 387, "asia": 387, "034": 387, "035": 387, "039": 387, "053": 387, "australia": 387, "zealand": 387, "054": 387, "melanesia": 387, "061": 387, "polynesia": 387, "andorra": 387, "ae": 387, "arab": 387, "emir": 387, "afghanistan": 387, "antigua": 387, "barbuda": 387, "ai": 387, "anguilla": 387, "ao": 387, "angola": 387, "aq": 387, "antarctica": 387, "argentina": 387, "AS": 387, "american": 387, "samoa": 387, "au": 387, "aw": 387, "aruba": 387, "\u00e5land": 387, "bb": 387, "barbado": 387, "bd": 387, "bangladesh": 387, "BE": 387, "belgium": 387, "bf": 387, "burkina": 387, "faso": 387, "bh": 387, "bahrain": 387, "bi": 387, "burundi": 387, "bj": 387, "benin": 387, "bl": 387, "barth\u00e9lemi": 387, "bm": 387, "bermuda": 387, "bn": 387, "brunei": 387, "darussalam": 387, "bo": 387, "bolivia": 387, "plurin": 387, "bq": 387, "bonair": 387, "sint": 387, "eustatiu": 387, "saba": 387, "br": 387, "brazil": 387, "bahama": 387, "bt": 387, "bhutan": 387, "bv": 387, "bouvet": 387, "bw": 387, "botswana": 387, "bz": 387, "beliz": 387, "ca": 387, "canada": 387, "cc": 387, "coco": 387, "keel": 387, "cd": 387, "congo": 387, "cf": 387, "african": 387, "cg": 387, "ci": 387, "c\u00f4te": 387, "ivoir": 387, "ck": 387, "cook": 387, "cl": 387, "chile": 387, "cm": 387, "cameroon": 387, "cn": 387, "china": 387, "co": 387, "colombia": 387, "cr": 387, "costa": 387, "rica": 387, "cshh": 387, "czechoslovakia": 387, "csxx": 387, "cu": 387, "cuba": 387, "cv": 387, "cabo": 387, "verd": 387, "cw": 387, "cura\u00e7ao": 387, "cx": 387, "christma": 387, "cy": 387, "cypru": 387, "tcc": 387, "ddde": 387, "dj": 387, "djibouti": 387, "dm": 387, "dominica": 387, "dominican": 387, "dz": 387, "algeria": 387, "ec": 387, "ecuador": 387, "eg": 387, "egypt": 387, "eh": 387, "sahara": 387, "er": 387, "eritrea": 387, "et": 387, "ethiopia": 387, "fj": 387, "fiji": 387, "fk": 387, "falkland": 387, "malvina": 387, "fm": 387, "micronesia": 387, "fo": 387, "faro": 387, "ga": 387, "gabon": 387, "kingdom": 387, "ireland": 387, "gd": 387, "grenada": 387, "gf": 387, "guiana": 387, "gg": 387, "guernsei": 387, "gh": 387, "ghana": 387, "gi": 387, "gibraltar": 387, "gl": 387, "greenland": 387, "gm": 387, "gambia": 387, "gn": 387, "guinea": 387, "gp": 387, "guadeloup": 387, "gq": 387, "equatori": 387, "gr": 387, "sandwich": 387, "gt": 387, "guatemala": 387, "gu": 387, "guam": 387, "gw": 387, "bissau": 387, "gy": 387, "guyana": 387, "hk": 387, "hong": 387, "kong": 387, "hm": 387, "heard": 387, "mcdonald": 387, "hn": 387, "hondura": 387, "ht": 387, "haiti": 387, "indonesia": 387, "ie": 387, "il": 387, "israel": 387, "im": 387, "isl": 387, "india": 387, "io": 387, "indian": 387, "ocean": 387, "territori": 387, "iq": 387, "iraq": 387, "ir": 387, "iran": 387, "je": 387, "jersei": 387, "jm": 387, "jamaica": 387, "jo": 387, "jordan": 387, "jp": 387, "japan": 387, "ke": 387, "kenya": 387, "kg": 387, "kyrgyzstan": 387, "kh": 387, "cambodia": 387, "ki": 387, "kiribati": 387, "km": 387, "comoro": 387, "kn": 387, "kitt": 387, "nevi": 387, "kp": 387, "korea": 387, "kr": 387, "kw": 387, "kuwait": 387, "ky": 387, "cayman": 387, "kz": 387, "kazakhstan": 387, "la": 387, "lao": 387, "lb": 387, "lebanon": 387, "lc": 387, "lucia": 387, "liechtenstein": 387, "lk": 387, "sri": 387, "lanka": 387, "lr": 387, "liberia": 387, "lesotho": 387, "lu": 387, "luxembourg": 387, "ly": 387, "libya": 387, "ma": 387, "morocco": 387, "mc": 387, "monaco": 387, "md": 387, "moldova": 387, "mf": 387, "martin": 387, "mg": 387, "madagascar": 387, "mh": 387, "marshal": 387, "ml": 387, "mali": 387, "myanmar": 387, "mn": 387, "mongolia": 387, "mo": 387, "macao": 387, "mp": 387, "mariana": 387, "martiniqu": 387, "mr": 387, "mauritania": 387, "montserrat": 387, "mt": 387, "malta": 387, "mu": 387, "mauritiu": 387, "mv": 387, "maldiv": 387, "mw": 387, "malawi": 387, "mx": 387, "mexico": 387, "malaysia": 387, "mz": 387, "mozambiqu": 387, "namibia": 387, "nc": 387, "caledonia": 387, "ne": 387, "niger": 387, "nf": 387, "norfolk": 387, "ng": 387, "nigeria": 387, "ni": 387, "nicaragua": 387, "nepal": 387, "nr": 387, "nauru": 387, "nu": 387, "niue": 387, "nz": 387, "om": 387, "oman": 387, "pa": 387, "panama": 387, "pe": 387, "peru": 387, "pf": 387, "pg": 387, "papua": 387, "ph": 387, "philippin": 387, "pk": 387, "pakistan": 387, "pierr": 387, "miquelon": 387, "pn": 387, "pitcairn": 387, "pr": 387, "puerto": 387, "rico": 387, "palestin": 387, "pw": 387, "palau": 387, "py": 387, "paraguai": 387, "qa": 387, "qatar": 387, "r\u00e9union": 387, "rw": 387, "rwanda": 387, "sa": 387, "saudi": 387, "arabia": 387, "sb": 387, "solomon": 387, "sc": 387, "seychel": 387, "sudan": 387, "sg": 387, "singapor": 387, "sh": 387, "helena": 387, "ascens": 387, "tristan": 387, "da": 387, "cunha": 387, "sj": 387, "svalbard": 387, "jan": 387, "mayen": 387, "sierra": 387, "leon": 387, "sm": 387, "san": 387, "marino": 387, "seneg": 387, "somalia": 387, "surinam": 387, "ss": 387, "st": 387, "sao": 387, "tome": 387, "suhh": 387, "sv": 387, "el": 387, "salvador": 387, "sx": 387, "maarten": 387, "dutch": 387, "syrian": 387, "swaziland": 387, "tc": 387, "caico": 387, "td": 387, "chad": 387, "tf": 387, "tg": 387, "togo": 387, "thailand": 387, "tj": 387, "tajikistan": 387, "tk": 387, "tokelau": 387, "tl": 387, "timor": 387, "lest": 387, "tm": 387, "turkmenistan": 387, "tn": 387, "tunisia": 387, "TO": 387, "tonga": 387, "tr": 387, "turkei": 387, "tt": 387, "trinidad": 387, "tobago": 387, "tuvalu": 387, "tw": 387, "taiwan": 387, "provinc": 387, "tz": 387, "tanzania": 387, "ug": 387, "uganda": 387, "um": 387, "outli": 387, "uruguai": 387, "uz": 387, "uzbekistan": 387, "va": 387, "vc": 387, "vincent": 387, "grenadin": 387, "ve": 387, "venezuela": 387, "bolivarian": 387, "vg": 387, "virgin": 387, "vi": 387, "vn": 387, "viet": 387, "nam": 387, "vu": 387, "vanuatu": 387, "wf": 387, "walli": 387, "futuna": 387, "xk": 387, "kosovo": 387, "xxx": 387, "yemen": 387, "yt": 387, "mayott": 387, "yuc": 387, "yugoslavia": 387, "zm": 387, "zambia": 387, "zw": 387, "zimbabw": 387, "4221": 387, "v228b_r": 387, "316": 387, "320": 387, "324": 387, "328": 387, "332": 387, "334": 387, "336": 387, "340": 387, "344": 387, "356": 387, "360": 387, "364": 387, "368": 387, "372": 387, "376": 387, "388": 387, "392": 387, "398": 387, "408": 387, "410": 387, "414": 387, "417": 387, "418": 387, "422": 387, "426": 387, "430": 387, "434": 387, "438": 387, "442": 387, "446": 387, "450": 387, "454": 387, "458": 387, "462": 387, "466": 387, "470": 387, "474": 387, "478": 387, "480": 387, "484": 387, "492": 387, "496": 387, "500": 387, "504": 387, "512": 387, "516": 387, "520": 387, "524": 387, "531": 387, "533": 387, "534": 387, "535": 387, "540": 387, "548": 387, "554": 387, "558": 387, "562": 387, "566": 387, "570": 387, "574": 387, "580": 387, "581": 387, "583": 387, "584": 387, "585": 387, "586": 387, "591": 387, "598": 387, "600": 387, "604": 387, "608": 387, "612": 387, "624": 387, "626": 387, "630": 387, "634": 387, "638": 387, "646": 387, "652": 387, "654": 387, "659": 387, "660": 387, "662": 387, "663": 387, "666": 387, "670": 387, "674": 387, "678": 387, "682": 387, "686": 387, "690": 387, "694": 387, "702": 387, "704": 387, "706": 387, "710": 387, "716": 387, "728": 387, "729": 387, "732": 387, "740": 387, "744": 387, "748": 387, "760": 387, "762": 387, "764": 387, "768": 387, "772": 387, "776": 387, "780": 387, "784": 387, "788": 387, "792": 387, "795": 387, "796": 387, "798": 387, "800": 387, "831": 387, "832": 387, "833": 387, "834": 387, "840": 387, "850": 387, "854": 387, "858": 387, "860": 387, "862": 387, "876": 387, "882": 387, "887": 387, "890": 387, "891": 387, "894": 387, "915": 387, "1111": 387, "nan": 387, "4220": 387, "v229": 387, "317": 387, "came": 387, "live": 387, "q67": 387, "1941": 387, "4116": 387, "v230": 387, "318": 387, "father": 387, "q68": 387, "59042": 387, "v231b": 387, "319": 387, "q69": 387, "6117": 387, "v231b_r": 387, "v232": 387, "321": 387, "q70": 387, "59218": 387, "v233b": 387, "322": 387, "q71": 387, "6121": 387, "v233b_r": 387, "323": 387, "v234": 387, "marit": 387, "statu": 387, "q72": 387, "marri": 387, "partnership": 387, "widow": 387, "59020": 387, "v235": 387, "325": 387, "partner": 387, "q73": 387, "43987": 387, "v236": 387, "326": 387, "q74": 387, "27301": 387, "v237": 387, "327": 387, "steadi": 387, "relationship": 387, "q75": 387, "19888": 387, "v238": 387, "q76": 387, "59001": 387, "v239_r": 387, "329": 387, "hh": 387, "q77": 387, "58952": 387, "v239a": 387, "330": 387, "q77a": 387, "58094": 387, "v239b": 387, "331": 387, "q77b": 387, "58114": 387, "v240": 387, "q78": 387, "alon": 387, "58691": 387, "v241": 387, "333": 387, "youngest": 387, "q79": 387, "45983": 387, "v242": 387, "q80": 387, "younger": 387, "formal": 387, "55834": 387, "v242_r": 387, "v243_edulvlb": 387, "ess": 387, "edulvlb": 387, "q81": 387, "Not": 387, "isc": 387, "short": 387, "vocat": 387, "pre": 387, "32x": 387, "tertiari": 387, "412": 387, "413": 387, "421": 387, "423": 387, "510": 387, "qualif": 387, "bachelor": 387, "610": 387, "master": 387, "720": 387, "doctor": 387, "6666": 387, "59049": 387, "v243_edulvlb_2": 387, "337": 387, "primari": 387, "secondari": 387, "upper": 387, "cycl": 387, "v243_edulvlb_1": 387, "338": 387, "v243_isced_3": 387, "339": 387, "343": 387, "353": 387, "354": 387, "444": 387, "453": 387, "550": 387, "640": 387, "academ": 387, "650": 387, "750": 387, "v243_isced_2": 387, "v243_isced_2b": 387, "341": 387, "59050": 387, "v243_isced_1": 387, "342": 387, "v243_eisc": 387, "ii": 387, "train": 387, "iiib": 387, "iiia": 387, "iv": 387, "advanc": 387, "v243_isced97": 387, "isced97": 387, "stage": 387, "v243_8cat": 387, "345": 387, "inadequ": 387, "elementari": 387, "compulsori": 387, "school": 387, "technic": 387, "preparatori": 387, "v243_r": 387, "346": 387, "medium": 387, "v243_c": 387, "347": 387, "certif": 387, "matur": 387, "diploma": 387, "diplom": 387, "art": 387, "scienc": 387, "grade": 387, "lyceum": 387, "colleg": 387, "aspirantura": 387, "phd": 387, "philosophi": 387, "3188": 387, "3199": 387, "secundari": 387, "polytechn": 387, "ah": 387, "apprenticeship": 387, "examin": 387, "commerci": 387, "matricul": 387, "entranc": 387, "nurs": 387, "pedago": 387, "medic": 387, "graduat": 387, "cours": 387, "mba": 387, "went": 387, "specialist": 387, "5113": 387, "habilit": 387, "unfinish": 387, "relat": 387, "undergradu": 387, "baccalaureu": 387, "academi": 387, "stud": 387, "profess": 387, "postgradu": 387, "mathemat": 387, "semi": 387, "parallel": 387, "1st": 387, "sz\u0161": 387, "zz\u0161": 387, "bougeoi": 387, "exam": 387, "teach": 387, "retrain": 387, "gcse": 387, "grammar": 387, "di": 387, "5th": 387, "6th": 387, "conservatori": 387, "discharg": 387, "mgr": 387, "ing": 387, "mudr": 387, "mddr": 387, "mvdr": 387, "csc": 387, "municip": 387, "8th": 387, "9th": 387, "10th": 387, "gymnasium": 387, "hf": 387, "semiskil": 387, "proffesion": 387, "kandidat": 387, "licentiat": 387, "20812": 387, "20813": 387, "23308": 387, "tehnic": 387, "aft": 387, "23309": 387, "23310": 387, "23311": 387, "23312": 387, "23313": 387, "23314": 387, "incl": 387, "1992": 387, "speci": 387, "23315": 387, "comprehens": 387, "24611": 387, "24612": 387, "24613": 387, "licenti": 387, "24614": 387, "24615": 387, "certificat": 387, "\u00e9tude": 387, "primair": 387, "brevet": 387, "\u00e9l\u00e9mentair": 387, "du": 387, "premier": 387, "baccalaur\u00e9at": 387, "abil": 387, "aptitud": 387, "professionnel": 387, "cap": 387, "etud": 387, "baccalaureat": 387, "technolog": 387, "admiss": 387, "moniteur": 387, "\u00e9ducateur": 387, "equi": 387, "technician": 387, "paramed": 387, "sector": 387, "assist": 387, "25017": 387, "25018": 387, "25019": 387, "engin": 387, "25020": 387, "25021": 387, "intermedi": 387, "25022": 387, "teacher": 387, "25023": 387, "architect": 387, "veterinari": 387, "notari": 387, "25024": 387, "dipl\u00f4ma": 387, "grand": 387, "\u00e9cole": 387, "25025": 387, "medecin": 387, "odontologi": 387, "pharmaci": 387, "2010": 387, "certifi": 387, "2008": 387, "interim": 387, "attent": 387, "mon": 387, "vet": 387, "bsc": 387, "msc": 387, "34813": 387, "34814": 387, "test": 387, "oblig": 387, "classic": 387, "scientif": 387, "linguist": 387, "psyco": 387, "pedagog": 387, "music": 387, "includi": 387, "physic": 387, "fine": 387, "38017": 387, "38018": 387, "42812": 387, "42813": 387, "42814": 387, "42815": 387, "soviet": 387, "44000": 387, "44013": 387, "44014": 387, "44015": 387, "bologn": 387, "durat": 387, "magist": 387, "medicin": 387, "vmbo": 387, "lbo": 387, "compar": 387, "mavo": 387, "senior": 387, "havo": 387, "vwo": 387, "kmbo": 387, "meao": 387, "plu": 387, "propaedeut": 387, "shorter": 387, "52815": 387, "52816": 387, "52817": 387, "52818": 387, "promot": 387, "earli": 387, "childhood": 387, "57824": 387, "57825": 387, "57834": 387, "57835": 387, "57844": 387, "57845": 387, "57854": 387, "57855": 387, "57856": 387, "unspecifi": 387, "57864": 387, "57865": 387, "57874": 387, "57875": 387, "57876": 387, "57884": 387, "57885": 387, "57886": 387, "agricultur": 387, "61612": 387, "61613": 387, "61614": 387, "61615": 387, "61616": 387, "professor": 387, "61617": 387, "4th": 387, "comerci": 387, "format": 387, "conclus": 387, "12th": 387, "gra": 387, "artist": 387, "visual": 387, "audiovisu": 387, "danc": 387, "cour": 387, "thecnolog": 387, "superior": 387, "bacalaureat": 387, "atribut": 387, "gradut": 387, "inc": 387, "64200": 387, "finish": 387, "gymnasia": 387, "apprentic": 387, "complementari": 387, "craft": 387, "64210": 387, "64211": 387, "theoret": 387, "baccalaur": 387, "64212": 387, "64213": 387, "foreman": 387, "64214": 387, "64215": 387, "highschool": 387, "64217": 387, "64218": 387, "64219": 387, "64220": 387, "64221": 387, "64222": 387, "64223": 387, "64224": 387, "attestat": 387, "1958": 387, "1960": 387, "1980": 387, "profe": 387, "ed": 387, "got": 387, "grad": 387, "ptu": 387, "fsu": 387, "fso": 387, "techn": 387, "compl": 387, "sec": 387, "gen": 387, "2y": 387, "technikum": 387, "uchilish": 387, "3rd": 387, "7th": 387, "yr": 387, "requalif": 387, "voc": 387, "maturita": 387, "eight": 387, "schoool": 387, "six": 387, "70314": 387, "70315": 387, "bologna": 387, "70512": 387, "70513": 387, "1970": 387, "egb": 387, "administr": 387, "mechan": 387, "72422": 387, "72423": 387, "72424": 387, "nurseri": 387, "72425": 387, "72427": 387, "72428": 387, "2a": 387, "3a": 387, "formerli": 387, "75209": 387, "75210": 387, "75211": 387, "75212": 387, "longer": 387, "insti": 387, "75213": 387, "75214": 387, "75215": 387, "semest": 387, "uni": 387, "75217": 387, "75218": 387, "75219": 387, "licanti": 387, "75220": 387, "adult": 387, "preprimari": 387, "enterpris": 387, "dual": 387, "dipl": 387, "75615": 387, "withrecognit": 387, "75617": 387, "75618": 387, "75619": 387, "intermediari": 387, "75620": 387, "75621": 387, "75622": 387, "75623": 387, "75624": 387, "80400": 387, "basi": 387, "junior": 387, "80788": 387, "80799": 387, "55120": 387, "v243_cs_de1": 387, "2133": 387, "v243_cs_de2": 387, "349": 387, "preliminari": 387, "27608": 387, "27609": 387, "27610": 387, "examani": 387, "27611": 387, "27612": 387, "27613": 387, "2016": 387, "v243_cs_de3": 387, "350": 387, "servant": 387, "sale": 387, "occup": 387, "student": 387, "entrac": 387, "craftsmen": 387, "2048": 387, "v243_cs_gb1": 387, "351": 387, "q81a": 387, "gnvq": 387, "gsvq": 387, "skill": 387, "1776": 387, "v243_cs_gb2": 387, "q81b": 387, "phil": 387, "cnaa": 387, "mb": 387, "bed": 387, "beng": 387, "he": 387, "edexcel": 387, "btec": 387, "bec": 387, "tec": 387, "hnd": 387, "guild": 387, "nvq": 387, "svq": 387, "leve": 387, "foundat": 387, "fda": 387, "fdsc": 387, "hnc": 387, "avc": 387, "gce": 387, "1775": 387, "v244": 387, "paid": 387, "employ": 387, "q82": 387, "30h": 387, "emploi": 387, "militari": 387, "retir": 387, "homemak": 387, "59027": 387, "v245": 387, "q83": 387, "had": 387, "21903": 387, "v246_isco_2": 387, "355": 387, "isco08": 387, "q84a": 387, "commiss": 387, "offic": 387, "rank": 387, "isco": 387, "chief": 387, "legisl": 387, "product": 387, "hospit": 387, "retail": 387, "technologi": 387, "cleric": 387, "keyboard": 387, "clerk": 387, "materi": 387, "record": 387, "forestri": 387, "fisheri": 387, "market": 387, "hunt": 387, "subsist": 387, "fisher": 387, "hunter": 387, "gather": 387, "exclud": 387, "electrician": 387, "metal": 387, "machineri": 387, "handicraft": 387, "electr": 387, "electron": 387, "food": 387, "woodwork": 387, "garment": 387, "plant": 387, "machin": 387, "assembl": 387, "stationari": 387, "driver": 387, "mobil": 387, "cleaner": 387, "helper": 387, "mine": 387, "manufactur": 387, "street": 387, "51510": 387, "v246_siop": 387, "siops08": 387, "51280": 387, "v246_isei": 387, "357": 387, "isei08": 387, "v246_esec": 387, "358": 387, "esec08": 387, "supervisori": 387, "supervisor": 387, "routin": 387, "beak": 387, "v246_egp": 387, "359": 387, "egp11": 387, "nonmanu": 387, "iva": 387, "selfempl": 387, "empl": 387, "ivb": 387, "manual": 387, "viia": 387, "unskil": 387, "viib": 387, "farm": 387, "ivc": 387, "99999": 387, "51257": 387, "v247": 387, "mani": 387, "employe": 387, "q85": 387, "5467": 387, "v248": 387, "361": 387, "supervis": 387, "someon": 387, "q86": 387, "46098": 387, "v248a": 387, "362": 387, "q86a": 387, "12205": 387, "v249": 387, "363": 387, "q87": 387, "profit": 387, "43442": 387, "v250": 387, "spous": 387, "q88": 387, "35914": 387, "v251b": 387, "q88a": 387, "2708": 387, "v251b_r": 387, "366": 387, "v252_edulvlb": 387, "367": 387, "q89": 387, "35069": 387, "f252_edulvlb_ch": 387, "web_german": 387, "web": 387, "ihr": 387, "2501": 387, "v252_edulvlb_2": 387, "369": 387, "v252_edulvlb_1": 387, "370": 387, "v252_isced_3": 387, "371": 387, "v252_isced_2": 387, "v252_isced_2b": 387, "373": 387, "v252_isced_1": 387, "374": 387, "35820": 387, "v252_eisc": 387, "375": 387, "v252_isced97": 387, "v252_8cat": 387, "377": 387, "v252_r": 387, "378": 387, "v252_c": 387, "379": 387, "preschool": 387, "vk1": 387, "folkeh\u00f8gskol": 387, "realskol": 387, "vk2": 387, "vk3": 387, "gymna": 387, "supplementari": 387, "cand": 387, "mag": 387, "33460": 387, "521": 387, "v252_cs_de1": 387, "1471": 387, "v252_cs_de2": 387, "1390": 387, "v252_cs_de3": 387, "382": 387, "1379": 387, "v252_cs_gb1": 387, "383": 387, "q89a": 387, "869": 387, "v252_cs_gb2": 387, "q89b": 387, "v253": 387, "385": 387, "q90": 387, "35752": 387, "v254": 387, "386": 387, "q91": 387, "11543": 387, "v255_isco_2": 387, "387": 387, "q92a": 387, "30950": 387, "v255_siop": 387, "30809": 387, "v255_isei": 387, "389": 387, "v255_esec": 387, "390": 387, "v255_egp": 387, "391": 387, "30796": 387, "v256": 387, "q93": 387, "3522": 387, "v257": 387, "393": 387, "q94": 387, "27871": 387, "v258": 387, "394": 387, "she": 387, "q95": 387, "6562": 387, "v259": 387, "395": 387, "experienc": 387, "q96": 387, "58024": 387, "v260": 387, "396": 387, "q97": 387, "58561": 387, "v261": 387, "397": 387, "net": 387, "q98": 387, "decil": 387, "50698": 387, "v261_ppp": 387, "monthli": 387, "x1000": 387, "ppp": 387, "v261_r": 387, "399": 387, "low": 387, "v262_edulvlb": 387, "q99": 387, "53940": 387, "v262_edulvlb_2": 387, "401": 387, "v262_edulvlb_1": 387, "402": 387, "v262_isced_3": 387, "403": 387, "v262_isced_2": 387, "v262_isced_2b": 387, "405": 387, "v262_isced_1": 387, "406": 387, "55017": 387, "v262_eisc": 387, "407": 387, "v262_isced97": 387, "v262_8cat": 387, "409": 387, "v262_r": 387, "v262_c": 387, "411": 387, "51560": 387, "525": 387, "v262_cs_de1": 387, "1835": 387, "v262_cs_de2": 387, "1822": 387, "v262_cs_de3": 387, "1737": 387, "v262_cs_gb1": 387, "415": 387, "q99a": 387, "1449": 387, "v262_cs_gb2": 387, "416": 387, "q99b": 387, "1456": 387, "v263_edulvlb": 387, "q100": 387, "55028": 387, "v263_edulvlb_2": 387, "v263_edulvlb_1": 387, "419": 387, "v263_isced_3": 387, "420": 387, "v263_isced_2": 387, "v263_isced_2b": 387, "v263_isced_1": 387, "56130": 387, "v263_eisc": 387, "424": 387, "v263_isced97": 387, "425": 387, "v263_8cat": 387, "v263_r": 387, "427": 387, "v263_c": 387, "52602": 387, "v263_cs_de1": 387, "429": 387, "1918": 387, "v263_cs_de2": 387, "1865": 387, "v263_cs_de3": 387, "431": 387, "1781": 387, "v263_cs_gb1": 387, "432": 387, "q100a": 387, "1504": 387, "v263_cs_gb2": 387, "433": 387, "1508": 387, "v264": 387, "q101": 387, "55049": 387, "v265": 387, "435": 387, "q102": 387, "56942": 387, "v266": 387, "436": 387, "earner": 387, "q103": 387, "banker": 387, "secretari": 387, "bookkeep": 387, "shop": 387, "owner": 387, "insur": 387, "agent": 387, "buyer": 387, "restaur": 387, "waitress": 387, "barber": 387, "caretak": 387, "motor": 387, "printer": 387, "seamstress": 387, "die": 387, "maker": 387, "bricklay": 387, "bu": 387, "canneri": 387, "carpent": 387, "sheet": 387, "baker": 387, "porter": 387, "tractor": 387, "proprietor": 387, "55344": 387, "v267": 387, "437": 387, "q104a": 387, "littl": 387, "bit": 387, "56398": 387, "v268": 387, "discuss": 387, "q104b": 387, "57142": 387, "v269": 387, "439": 387, "q104c": 387, "56312": 387, "v270": 387, "q104d": 387, "56977": 387, "v271": 387, "441": 387, "q104e": 387, "54376": 387, "v272": 387, "q104f": 387, "55219": 387, "v273": 387, "443": 387, "q104g": 387, "54635": 387, "v274": 387, "q104h": 387, "55792": 387, "v275b_n2": 387, "445": 387, "conduct": 387, "nut": 387, "q105": 387, "al01": 387, "al02": 387, "al03": 387, "alzz": 387, "extra": 387, "am01": 387, "yerevan": 387, "am02": 387, "am03": 387, "iii": 387, "am04": 387, "amzz": 387, "at11": 387, "ost\u00f6sterreich": 387, "burgenland": 387, "at12": 387, "nieder\u00f6sterreich": 387, "at13": 387, "wien": 387, "at21": 387, "s\u00fcd\u00f6sterreich": 387, "k\u00e4rnten": 387, "at22": 387, "steiermark": 387, "at31": 387, "west\u00f6sterreich": 387, "ober\u00f6sterreich": 387, "at32": 387, "salzburg": 387, "at33": 387, "tirol": 387, "at34": 387, "vorarlberg": 387, "atzz": 387, "regio": 387, "ab": 387, "absheron": 387, "aga": 387, "agstafa": 387, "agc": 387, "agdzhebedinski": 387, "agdash": 387, "agu": 387, "agsu": 387, "ast": 387, "astara": 387, "baku": 387, "bal": 387, "belakanski": 387, "bar": 387, "barda": 387, "bei": 387, "beylagan": 387, "bil": 387, "bilasuvar": 387, "cal": 387, "jalilabad": 387, "dashkesan": 387, "ganja": 387, "gad": 387, "kedabegski": 387, "gor": 387, "goranboi": 387, "goi": 387, "goychai": 387, "gyg": 387, "gai": 387, "gelski": 387, "hac": 387, "hajikabul": 387, "imi": 387, "imishli": 387, "ism": 387, "ismaili": 387, "kur": 387, "kurdamir": 387, "lan": 387, "lankaran": 387, "ler": 387, "lerik": 387, "masal": 387, "mi": 387, "mingechaur": 387, "naftalan": 387, "nef": 387, "neftchala": 387, "ogu": 387, "oguz": 387, "qab": 387, "gabala": 387, "qax": 387, "gakh": 387, "qaz": 387, "gazakh": 387, "qba": 387, "gubinski": 387, "qob": 387, "gobustan": 387, "qu": 387, "gusar": 387, "sab": 387, "sabirabad": 387, "sak": 387, "sheki": 387, "sal": 387, "salyan": 387, "sat": 387, "saatli": 387, "sbn": 387, "shabran": 387, "sii": 387, "siyazan": 387, "skr": 387, "shamkir": 387, "sumgait": 387, "smi": 387, "shemakha": 387, "smx": 387, "samukh": 387, "shirvan": 387, "tov": 387, "tovuz": 387, "uca": 387, "ujar": 387, "xac": 387, "khachmaz": 387, "xiz": 387, "khyzi": 387, "yar": 387, "yardimli": 387, "yev": 387, "yevlakh": 387, "zaq": 387, "zakatala": 387, "zar": 387, "zardob": 387, "babih": 387, "babrc": 387, "br\u010dko": 387, "basrp": 387, "republica": 387, "srpska": 387, "bg31": 387, "severna": 387, "yugoiztochna": 387, "severozapaden": 387, "bg32": 387, "severen": 387, "tsentralen": 387, "bg33": 387, "severoiztochen": 387, "bg34": 387, "yugoiztochen": 387, "bg41": 387, "yugozapadna": 387, "yuzhna": 387, "tsentralna": 387, "yugozapaden": 387, "bg42": 387, "yuzhen": 387, "bgzz": 387, "by01": 387, "brest": 387, "by02": 387, "vitebsk": 387, "by03": 387, "gomel": 387, "by04": 387, "grodno": 387, "by05": 387, "minsk": 387, "capit": 387, "by06": 387, "by07": 387, "mogilev": 387, "byzz": 387, "ch01": 387, "lemaniqu": 387, "ch02": 387, "espac": 387, "mittelland": 387, "ch03": 387, "nordwestschweiz": 387, "ch04": 387, "z\u00fcrich": 387, "ch05": 387, "ostschweiz": 387, "ch06": 387, "zentralschweiz": 387, "ch07": 387, "chzz": 387, "cz01": 387, "\u010desk\u00e1": 387, "republika": 387, "praha": 387, "cz02": 387, "st\u0159edn\u00ed": 387, "\u010dechi": 387, "cz03": 387, "jihoz\u00e1pad": 387, "cz04": 387, "severoz\u00e1pad": 387, "cz05": 387, "severov\u00fdchod": 387, "cz06": 387, "jihov\u00fdchod": 387, "cz07": 387, "morava": 387, "cz08": 387, "moravskoslezsko": 387, "czzz": 387, "de11": 387, "baden": 387, "w\u00fcrttemberg": 387, "stuttgart": 387, "de12": 387, "karlsruh": 387, "de13": 387, "freiburg": 387, "de14": 387, "t\u00fcbingen": 387, "de21": 387, "bayern": 387, "oberbayern": 387, "de22": 387, "niederbayern": 387, "de23": 387, "oberpfalz": 387, "de24": 387, "oberfranken": 387, "de25": 387, "mittelfranken": 387, "de26": 387, "unterfranken": 387, "de27": 387, "schwaben": 387, "de30": 387, "berlin": 387, "de40": 387, "brandenburg": 387, "de50": 387, "bremen": 387, "de60": 387, "hamburg": 387, "de71": 387, "hessen": 387, "darmstadt": 387, "de72": 387, "gie\u00dfen": 387, "de73": 387, "kassel": 387, "de80": 387, "mecklenburg": 387, "vorpommern": 387, "de91": 387, "niedersachsen": 387, "braunschweig": 387, "de92": 387, "hannov": 387, "de93": 387, "l\u00fcneburg": 387, "de94": 387, "weser": 387, "em": 387, "dea1": 387, "nordrhein": 387, "westfalen": 387, "d\u00fcsseldorf": 387, "dea2": 387, "k\u00f6ln": 387, "dea3": 387, "m\u00fcnster": 387, "dea4": 387, "detmold": 387, "dea5": 387, "arnsberg": 387, "deb1": 387, "rheinland": 387, "pfalz": 387, "koblenz": 387, "deb2": 387, "trier": 387, "deb3": 387, "rheinhessen": 387, "dec0": 387, "saarland": 387, "ded2": 387, "sachsen": 387, "dresden": 387, "ded4": 387, "chemnitz": 387, "ded5": 387, "leipzig": 387, "dee0": 387, "anhalt": 387, "def0": 387, "schleswig": 387, "holstein": 387, "deg0": 387, "th\u00fcringen": 387, "dezz": 387, "dk01": 387, "danmark": 387, "hovedstaden": 387, "dk02": 387, "sj\u00e6lland": 387, "dk03": 387, "syddanmark": 387, "dk04": 387, "midtjylland": 387, "dk05": 387, "nordjylland": 387, "dkzz": 387, "ee00": 387, "eesti": 387, "esti": 387, "eezz": 387, "el30": 387, "attica": 387, "attiki": 387, "el41": 387, "nissia": 387, "aigaiou": 387, "kriti": 387, "aegean": 387, "voreio": 387, "aigaio": 387, "el42": 387, "notio": 387, "el43": 387, "crete": 387, "el51": 387, "voreia": 387, "ellada": 387, "thrace": 387, "el52": 387, "el53": 387, "el54": 387, "epiru": 387, "el61": 387, "kentriki": 387, "thessali": 387, "el62": 387, "ionian": 387, "el63": 387, "el64": 387, "sterea": 387, "el65": 387, "peloponnes": 387, "es11": 387, "noroest": 387, "galicia": 387, "es12": 387, "principado": 387, "es13": 387, "cantabria": 387, "es21": 387, "norest": 387, "pa\u00ed": 387, "vasco": 387, "es22": 387, "comunidad": 387, "foral": 387, "navarra": 387, "es23": 387, "rioja": 387, "es24": 387, "arag\u00f3n": 387, "es30": 387, "madrid": 387, "es41": 387, "centro": 387, "castilla": 387, "le\u00f3n": 387, "es42": 387, "mancha": 387, "es43": 387, "extremadura": 387, "es51": 387, "est": 387, "catalu\u00f1a": 387, "es52": 387, "valenciana": 387, "es53": 387, "ill": 387, "balear": 387, "es61": 387, "sur": 387, "andaluc\u00eda": 387, "es62": 387, "regi\u00f3n": 387, "murcia": 387, "es63": 387, "ciudad": 387, "aut\u00f3noma": 387, "ceuta": 387, "es64": 387, "melilla": 387, "es70": 387, "canaria": 387, "eszz": 387, "fi19": 387, "suomi": 387, "l\u00e4nsi": 387, "fi1b": 387, "helsinki": 387, "uusimaa": 387, "fi1c": 387, "etel\u00e4": 387, "fi1d": 387, "pohjoi": 387, "ja": 387, "it\u00e4": 387, "fi20": 387, "fizz": 387, "fr10": 387, "\u00eele": 387, "frb0": 387, "val": 387, "loir": 387, "frc1": 387, "bourgogn": 387, "franch": 387, "comt\u00e9": 387, "frc2": 387, "frd1": 387, "normandi": 387, "bass": 387, "frd2": 387, "haut": 387, "fre1": 387, "nord": 387, "calai": 387, "fre2": 387, "picardi": 387, "frf1": 387, "alsac": 387, "champagn": 387, "ardenn": 387, "lorrain": 387, "frf2": 387, "frf3": 387, "frg0": 387, "frh0": 387, "bretagn": 387, "fri1": 387, "aquitain": 387, "limousin": 387, "poitou": 387, "charent": 387, "fri2": 387, "fri3": 387, "frj1": 387, "languedoc": 387, "roussillon": 387, "midi": 387, "pyr\u00e9n\u00e9": 387, "frj2": 387, "frk1": 387, "auvergn": 387, "rh\u00f4ne": 387, "alp": 387, "frk2": 387, "frl0": 387, "provenc": 387, "azur": 387, "frm0": 387, "cors": 387, "fry1": 387, "rup": 387, "r\u00e9gion": 387, "ultrap\u00e9riph\u00e9riqu": 387, "fran\u00e7ais": 387, "fry2": 387, "fry3": 387, "guyan": 387, "fry4": 387, "fry5": 387, "frzz": 387, "ge01": 387, "ge02": 387, "ge03": 387, "gezz": 387, "grzz": 387, "hr03": 387, "hrvatska": 387, "jadranska": 387, "hr04": 387, "kontinentalna": 387, "hrzz": 387, "hu11": 387, "k\u00f6z\u00e9p": 387, "magyarorsz\u00e1g": 387, "budapest": 387, "hu12": 387, "pest": 387, "hu21": 387, "dun\u00e1nt\u00fal": 387, "hu22": 387, "nyugat": 387, "hu23": 387, "d\u00e9l": 387, "hu31": 387, "alf\u00f6ld": 387, "\u00e9": 387, "\u00e9szak": 387, "hu32": 387, "hu33": 387, "huzz": 387, "is00": 387, "\u00edsland": 387, "iszz": 387, "itc1": 387, "ovest": 387, "piemont": 387, "itc2": 387, "vall": 387, "aosta": 387, "vall\u00e9": 387, "aost": 387, "itc3": 387, "liguria": 387, "itc4": 387, "lombardia": 387, "itf1": 387, "sud": 387, "abruzzo": 387, "itf2": 387, "molis": 387, "itf3": 387, "campania": 387, "itf4": 387, "puglia": 387, "itf5": 387, "basilicata": 387, "itf6": 387, "calabria": 387, "itg1": 387, "isol": 387, "sicilia": 387, "itg2": 387, "sardegna": 387, "ith1": 387, "provincia": 387, "autonoma": 387, "bolzano": 387, "bozen": 387, "ith2": 387, "trento": 387, "ith3": 387, "veneto": 387, "ith4": 387, "friuli": 387, "venezia": 387, "giulia": 387, "ith5": 387, "emilia": 387, "romagna": 387, "iti1": 387, "toscana": 387, "iti2": 387, "umbria": 387, "iti3": 387, "march": 387, "iti4": 387, "lazio": 387, "itzz": 387, "lt01": 387, "lietuva": 387, "sostin\u0117": 387, "regiona": 387, "lt02": 387, "vidurio": 387, "vakar\u0173": 387, "lietuvo": 387, "ltzz": 387, "lv00": 387, "latvija": 387, "lvzz": 387, "me00": 387, "mk00": 387, "mkzz": 387, "nl11": 387, "noord": 387, "nederland": 387, "groningen": 387, "nl12": 387, "friesland": 387, "nl13": 387, "drenth": 387, "nl21": 387, "oost": 387, "overijssel": 387, "nl22": 387, "gelderland": 387, "nl23": 387, "flevoland": 387, "nl31": 387, "west": 387, "utrecht": 387, "nl32": 387, "holland": 387, "nl33": 387, "zuid": 387, "nl34": 387, "zeeland": 387, "nl41": 387, "brabant": 387, "nl42": 387, "limburg": 387, "nlzz": 387, "no01": 387, "oslo": 387, "og": 387, "akershu": 387, "no02": 387, "hedmark": 387, "oppland": 387, "no03": 387, "s\u00f8r": 387, "\u00f8stlandet": 387, "no04": 387, "agder": 387, "rogaland": 387, "no05": 387, "vestlandet": 387, "no06": 387, "tr\u00f8ndelag": 387, "no07": 387, "norg": 387, "nozz": 387, "pl21": 387, "makroregion": 387, "po\u0142udniowi": 387, "ma\u0142opolski": 387, "pl22": 387, "\u015bl\u0105skie": 387, "pl41": 387, "p\u00f3\u0142nocno": 387, "zachodni": 387, "wielkopolski": 387, "pl42": 387, "zachodniopomorski": 387, "pl43": 387, "lubuski": 387, "pl51": 387, "po\u0142udniowo": 387, "dolno\u015bl\u0105ski": 387, "pl52": 387, "opolski": 387, "pl61": 387, "p\u00f3\u0142nocni": 387, "kujawsko": 387, "pomorski": 387, "pl62": 387, "warmi\u0144sko": 387, "mazurski": 387, "pl63": 387, "pl71": 387, "centralni": 387, "\u0142\u00f3dzkie": 387, "pl72": 387, "\u015bwi\u0119tokrzyski": 387, "pl81": 387, "wschodni": 387, "lubelski": 387, "pl82": 387, "podkarpacki": 387, "pl84": 387, "podlaski": 387, "pl91": 387, "wojew\u00f3dztwo": 387, "mazowiecki": 387, "warszawski": 387, "sto\u0142eczni": 387, "pl92": 387, "regionalni": 387, "plzz": 387, "pt11": 387, "continent": 387, "nort": 387, "pt15": 387, "algarv": 387, "pt16": 387, "pt17": 387, "\u00e1rea": 387, "metropolitana": 387, "lisboa": 387, "pt18": 387, "alentejo": 387, "pt20": 387, "regi\u00e3o": 387, "a\u00e7or": 387, "pt30": 387, "madeira": 387, "ptzz": 387, "ro11": 387, "macroregiunea": 387, "unu": 387, "vest": 387, "ro12": 387, "centru": 387, "ro21": 387, "ro22": 387, "ro31": 387, "trei": 387, "muntenia": 387, "ro32": 387, "bucure\u0219ti": 387, "ilfov": 387, "ro41": 387, "patru": 387, "oltenia": 387, "ro42": 387, "rozz": 387, "rs11": 387, "beograd": 387, "rs12": 387, "rs21": 387, "jug": 387, "\u0161umadija": 387, "zapadna": 387, "srbija": 387, "rs22": 387, "ju\u017ena": 387, "isto\u010dna": 387, "rszz": 387, "ru11": 387, "ru21": 387, "ru31": 387, "ru41": 387, "privolzhski": 387, "ru51": 387, "ural": 387, "ru61": 387, "siberian": 387, "ru71": 387, "east": 387, "ru81": 387, "caucasian": 387, "se11": 387, "\u00f6stra": 387, "sverig": 387, "stockholm": 387, "se12": 387, "mellansverig": 387, "se21": 387, "s\u00f6dra": 387, "sm\u00e5land": 387, "med": 387, "\u00f6arna": 387, "se22": 387, "sydsverig": 387, "se23": 387, "v\u00e4stsverig": 387, "se31": 387, "norra": 387, "se32": 387, "mellersta": 387, "norrland": 387, "se33": 387, "\u00f6vre": 387, "sezz": 387, "si03": 387, "slovenija": 387, "vzhodna": 387, "si04": 387, "zahodna": 387, "sizz": 387, "sk01": 387, "slovensko": 387, "bratislavsk\u00fd": 387, "kraj": 387, "sk02": 387, "z\u00e1padn\u00e9": 387, "sk03": 387, "stredn\u00e9": 387, "sk04": 387, "v\u00fdchodn\u00e9": 387, "skzz": 387, "ua11": 387, "volyn": 387, "ua12": 387, "zakarpattya": 387, "ua13": 387, "ivano": 387, "frankivsk": 387, "ua14": 387, "lviv": 387, "ua21": 387, "rivn": 387, "ua22": 387, "ternopil": 387, "ua23": 387, "khmelnytski": 387, "ua24": 387, "chernivtsi": 387, "ua31": 387, "THE": 387, "OF": 387, "kyiv": 387, "ua41": 387, "mykolaiv": 387, "ua42": 387, "odesa": 387, "ua43": 387, "kherson": 387, "ua51": 387, "zhytomyr": 387, "ua52": 387, "ua53": 387, "chernihiv": 387, "ua61": 387, "dnipropetrovsk": 387, "ua62": 387, "sumi": 387, "ua63": 387, "kharkiv": 387, "ua71": 387, "donetsk": 387, "ua72": 387, "zaporizhya": 387, "ua73": 387, "luhansk": 387, "ua81": 387, "vinnytsia": 387, "ua82": 387, "kirovograd": 387, "ua83": 387, "poltava": 387, "ua84": 387, "cherkasi": 387, "ukc1": 387, "gbn": 387, "tee": 387, "vallei": 387, "durham": 387, "ukc2": 387, "northumberland": 387, "tyne": 387, "wear": 387, "ukd1": 387, "cumbria": 387, "ukd3": 387, "manchest": 387, "ukd4": 387, "lancashir": 387, "ukd6": 387, "cheshir": 387, "ukd7": 387, "merseysid": 387, "uke1": 387, "yorkshir": 387, "humber": 387, "lincolnshir": 387, "uke2": 387, "uke3": 387, "uke4": 387, "ukf1": 387, "midland": 387, "derbyshir": 387, "nottinghamshir": 387, "ukf2": 387, "leicestershir": 387, "rutland": 387, "northamptonshir": 387, "ukf3": 387, "ukg1": 387, "herefordshir": 387, "worcestershir": 387, "warwickshir": 387, "ukg2": 387, "shropshir": 387, "staffordshir": 387, "ukg3": 387, "ukh1": 387, "anglia": 387, "ukh2": 387, "bedfordshir": 387, "hertfordshir": 387, "ukh3": 387, "essex": 387, "uki3": 387, "london": 387, "uki4": 387, "uki5": 387, "outer": 387, "uki6": 387, "uki7": 387, "ukj1": 387, "berkshir": 387, "buckinghamshir": 387, "oxfordshir": 387, "ukj2": 387, "surrei": 387, "sussex": 387, "ukj3": 387, "hampshir": 387, "wight": 387, "ukj4": 387, "kent": 387, "ukk1": 387, "gloucestershir": 387, "wiltshir": 387, "bristol": 387, "bath": 387, "ukk2": 387, "dorset": 387, "somerset": 387, "ukk3": 387, "cornwal": 387, "scilli": 387, "ukk4": 387, "devon": 387, "ukl1": 387, "wale": 387, "ukl2": 387, "ukm5": 387, "ukm6": 387, "highland": 387, "ukm7": 387, "ukm8": 387, "ukm9": 387, "ukn0": 387, "nir": 387, "ukzz": 387, "57248": 387, "v275b_n1": 387, "grz": 387, "al0": 387, "alz": 387, "am0": 387, "amz": 387, "at1": 387, "at2": 387, "at3": 387, "atz": 387, "az1": 387, "az2": 387, "apsheron": 387, "az3": 387, "kuba": 387, "az4": 387, "aran": 387, "az5": 387, "lenkaran": 387, "az6": 387, "mountain": 387, "az7": 387, "kazakh": 387, "az8": 387, "bg0": 387, "bg3": 387, "bg4": 387, "bgz": 387, "by0": 387, "byz": 387, "ch0": 387, "chz": 387, "cz0": 387, "czz": 387, "de1": 387, "de2": 387, "de3": 387, "de4": 387, "de5": 387, "de6": 387, "de7": 387, "de8": 387, "de9": 387, "dea": 387, "deb": 387, "dec": 387, "ded": 387, "dee": 387, "deg": 387, "dez": 387, "dk0": 387, "dkz": 387, "ee0": 387, "eez": 387, "el3": 387, "el4": 387, "el5": 387, "el6": 387, "es1": 387, "es2": 387, "es3": 387, "es4": 387, "es5": 387, "es6": 387, "es7": 387, "esz": 387, "fi1": 387, "fi2": 387, "fiz": 387, "fr1": 387, "frb": 387, "frc": 387, "frd": 387, "fre": 387, "frf": 387, "frg": 387, "frh": 387, "fri": 387, "frj": 387, "frk": 387, "frl": 387, "frm": 387, "fry": 387, "frz": 387, "ge0": 387, "gez": 387, "hr0": 387, "hrz": 387, "hu1": 387, "hu2": 387, "hu3": 387, "huz": 387, "is0": 387, "isz": 387, "itc": 387, "itf": 387, "itg": 387, "ith": 387, "iti": 387, "itz": 387, "lt0": 387, "ltz": 387, "lv0": 387, "lvz": 387, "me0": 387, "mk0": 387, "mkz": 387, "nl1": 387, "nl2": 387, "nl3": 387, "nl4": 387, "nlz": 387, "no0": 387, "noz": 387, "pl2": 387, "pl4": 387, "pl5": 387, "pl6": 387, "pl7": 387, "pl8": 387, "pl9": 387, "plz": 387, "pt1": 387, "pt2": 387, "pt3": 387, "ptz": 387, "ro1": 387, "ro2": 387, "ro3": 387, "ro4": 387, "roz": 387, "rs1": 387, "rs2": 387, "rsz": 387, "ru1": 387, "ru2": 387, "ru3": 387, "ru4": 387, "ru5": 387, "ru6": 387, "ru7": 387, "ru8": 387, "se1": 387, "se2": 387, "se3": 387, "sez": 387, "si0": 387, "siz": 387, "sk0": 387, "skz": 387, "ua1": 387, "ua2": 387, "ua3": 387, "ua4": 387, "ua5": 387, "ua6": 387, "ua7": 387, "ua8": 387, "ukc": 387, "ukd": 387, "AND": 387, "ukf": 387, "ukg": 387, "ukh": 387, "uki": 387, "ukj": 387, "ukk": 387, "ukl": 387, "ukm": 387, "ukn": 387, "ukz": 387, "59418": 387, "v275c_n2": 387, "447": 387, "80001": 387, "80102": 387, "80203": 387, "80335": 387, "310100": 387, "310201": 387, "310202": 387, "310203": 387, "310300": 387, "310301": 387, "310302": 387, "310303": 387, "310304": 387, "310400": 387, "310401": 387, "310402": 387, "310403": 387, "310404": 387, "310405": 387, "310406": 387, "310407": 387, "310408": 387, "310409": 387, "310410": 387, "310411": 387, "310412": 387, "310413": 387, "310414": 387, "310415": 387, "310416": 387, "310417": 387, "310500": 387, "310501": 387, "310502": 387, "310503": 387, "310504": 387, "310505": 387, "310600": 387, "310601": 387, "310602": 387, "310603": 387, "310700": 387, "310701": 387, "310702": 387, "310703": 387, "310704": 387, "310705": 387, "310706": 387, "310707": 387, "310708": 387, "310709": 387, "310710": 387, "310800": 387, "310801": 387, "310802": 387, "310803": 387, "310804": 387, "310805": 387, "313535": 387, "400101": 387, "400102": 387, "400103": 387, "400201": 387, "400202": 387, "400301": 387, "400302": 387, "400303": 387, "400304": 387, "403535": 387, "510001": 387, "510002": 387, "510003": 387, "510004": 387, "513535": 387, "700001": 387, "700002": 387, "700003": 387, "1000301": 387, "1000302": 387, "1000303": 387, "1000304": 387, "1000401": 387, "1000402": 387, "1003535": 387, "1120000": 387, "1120001": 387, "1120002": 387, "1120003": 387, "1120004": 387, "1120005": 387, "1120006": 387, "1120007": 387, "1123535": 387, "1910003": 387, "1910004": 387, "1913535": 387, "2030001": 387, "2030002": 387, "2030003": 387, "2030004": 387, "2030005": 387, "2030006": 387, "2030007": 387, "2030008": 387, "2033535": 387, "2080001": 387, "2080002": 387, "2080003": 387, "2080004": 387, "2080005": 387, "2083535": 387, "2330000": 387, "2333535": 387, "2460109": 387, "2460111": 387, "2460112": 387, "2460113": 387, "2460200": 387, "2463535": 387, "2500100": 387, "2501100": 387, "2501201": 387, "2501202": 387, "2501301": 387, "2501302": 387, "2501401": 387, "2501402": 387, "2501501": 387, "2501502": 387, "2501503": 387, "2501600": 387, "2501700": 387, "2501801": 387, "2501802": 387, "2501803": 387, "2501901": 387, "2501902": 387, "2502001": 387, "2502002": 387, "2502100": 387, "2502200": 387, "2503401": 387, "2503402": 387, "2503403": 387, "2503404": 387, "2503405": 387, "2503535": 387, "2680001": 387, "2680002": 387, "2680003": 387, "2683535": 387, "2760101": 387, "2760102": 387, "2760103": 387, "2760104": 387, "2760201": 387, "2760202": 387, "2760203": 387, "2760204": 387, "2760205": 387, "2760206": 387, "2760207": 387, "2760300": 387, "2760400": 387, "2760500": 387, "2760600": 387, "2760701": 387, "2760702": 387, "2760703": 387, "2760800": 387, "2760901": 387, "2760902": 387, "2760903": 387, "2760904": 387, "2761001": 387, "2761002": 387, "2761003": 387, "2761004": 387, "2761005": 387, "2761101": 387, "2761102": 387, "2761103": 387, "2761200": 387, "2761302": 387, "2761304": 387, "2761305": 387, "2761400": 387, "2761500": 387, "2761600": 387, "2763535": 387, "3000300": 387, "3000401": 387, "3000402": 387, "3000403": 387, "3000501": 387, "3000502": 387, "3000503": 387, "3000504": 387, "3000601": 387, "3000602": 387, "3000603": 387, "3000604": 387, "3000605": 387, "3003535": 387, "3480101": 387, "3480102": 387, "3480201": 387, "3480202": 387, "3480203": 387, "3480301": 387, "3480302": 387, "3480303": 387, "3483535": 387, "3520000": 387, "3523535": 387, "3801201": 387, "3801202": 387, "3801203": 387, "3801204": 387, "3801501": 387, "3801502": 387, "3801503": 387, "3801504": 387, "3801505": 387, "3801506": 387, "3801601": 387, "3801602": 387, "3801701": 387, "3801702": 387, "3801703": 387, "3801704": 387, "3801705": 387, "3801801": 387, "3801802": 387, "3801803": 387, "3801804": 387, "3803535": 387, "4280000": 387, "4283535": 387, "4400001": 387, "4400002": 387, "4403535": 387, "4990000": 387, "5280101": 387, "5280102": 387, "5280103": 387, "5280201": 387, "5280202": 387, "5280203": 387, "5280301": 387, "5280302": 387, "5280303": 387, "5280304": 387, "5280401": 387, "5280402": 387, "5283535": 387, "5780001": 387, "5780002": 387, "5780003": 387, "5780004": 387, "5780005": 387, "5780006": 387, "5780007": 387, "5783535": 387, "6160201": 387, "6160202": 387, "6160401": 387, "6160402": 387, "6160403": 387, "6160501": 387, "6160502": 387, "6160601": 387, "6160602": 387, "6160603": 387, "6160701": 387, "6160702": 387, "6160801": 387, "6160802": 387, "6160804": 387, "6160901": 387, "6160902": 387, "6163535": 387, "6200101": 387, "6200105": 387, "6200106": 387, "6200107": 387, "6200108": 387, "6200200": 387, "6200300": 387, "6203535": 387, "6420101": 387, "6420102": 387, "6420201": 387, "6420202": 387, "6420301": 387, "6420302": 387, "6420401": 387, "6420402": 387, "6423535": 387, "6430101": 387, "6430201": 387, "6430301": 387, "6430401": 387, "6430501": 387, "6430601": 387, "6430701": 387, "6430801": 387, "6880101": 387, "beogradski": 387, "6880102": 387, "vojvodin": 387, "6880201": 387, "\u0161umadij": 387, "zapadn": 387, "srbije": 387, "6880202": 387, "ju\u017en": 387, "isto\u010dn": 387, "6883535": 387, "7030001": 387, "7030002": 387, "7030003": 387, "7030004": 387, "7033535": 387, "7050003": 387, "7050004": 387, "7053535": 387, "7240101": 387, "7240102": 387, "7240103": 387, "7240201": 387, "7240202": 387, "7240203": 387, "7240204": 387, "7240300": 387, "7240401": 387, "7240402": 387, "7240403": 387, "7240501": 387, "7240502": 387, "7240503": 387, "7240601": 387, "7240602": 387, "7240603": 387, "7240604": 387, "7240700": 387, "7243535": 387, "7520101": 387, "7520102": 387, "7520201": 387, "7520202": 387, "7520203": 387, "7520301": 387, "7520302": 387, "7520303": 387, "7523535": 387, "7560001": 387, "7560002": 387, "7560003": 387, "7560004": 387, "7560005": 387, "7560006": 387, "7560007": 387, "7563535": 387, "8040101": 387, "8040102": 387, "8040103": 387, "8040104": 387, "8040201": 387, "8040202": 387, "8040203": 387, "8040204": 387, "8040301": 387, "8040401": 387, "8040402": 387, "8040403": 387, "8040501": 387, "8040502": 387, "8040503": 387, "8040601": 387, "8040602": 387, "8040603": 387, "8040701": 387, "8040702": 387, "8040703": 387, "8040801": 387, "8040802": 387, "8040803": 387, "8040804": 387, "8070000": 387, "8073535": 387, "8261201": 387, "8261202": 387, "8261301": 387, "8261303": 387, "8261304": 387, "8261306": 387, "8261307": 387, "8261401": 387, "8261402": 387, "8261403": 387, "8261404": 387, "8261501": 387, "8261502": 387, "8261503": 387, "8261601": 387, "8261602": 387, "8261603": 387, "8261701": 387, "8261702": 387, "8261703": 387, "8261803": 387, "8261804": 387, "8261805": 387, "8261806": 387, "8261807": 387, "8261901": 387, "8261902": 387, "8261903": 387, "8261904": 387, "8262001": 387, "8262002": 387, "8262003": 387, "8262004": 387, "8262101": 387, "8262102": 387, "8262205": 387, "8262206": 387, "8262207": 387, "8262208": 387, "8262209": 387, "8263535": 387, "9092300": 387, "v275c_n1": 387, "448": 387, "835": 387, "3135": 387, "4035": 387, "5100": 387, "5135": 387, "7000": 387, "10000": 387, "10035": 387, "11200": 387, "11235": 387, "19100": 387, "19135": 387, "20300": 387, "20335": 387, "20800": 387, "20835": 387, "23300": 387, "23335": 387, "24635": 387, "25034": 387, "25035": 387, "26800": 387, "26835": 387, "27614": 387, "27615": 387, "27616": 387, "27635": 387, "30003": 387, "30004": 387, "30005": 387, "30006": 387, "30035": 387, "34835": 387, "35200": 387, "35235": 387, "38035": 387, "42800": 387, "42835": 387, "44035": 387, "49900": 387, "52835": 387, "57800": 387, "61635": 387, "62035": 387, "64235": 387, "68835": 387, "70300": 387, "70335": 387, "70500": 387, "70535": 387, "72435": 387, "75235": 387, "75600": 387, "75635": 387, "80700": 387, "80735": 387, "82618": 387, "82619": 387, "82620": 387, "82621": 387, "82622": 387, "82635": 387, "90923": 387, "v276_r": 387, "449": 387, "q106": 387, "5000": 387, "20000": 387, "100000": 387, "500000": 387, "53444": 387, "v277": 387, "q107": 387, "57588": 387, "951": 387, "mm_v277_fu": 387, "451": 387, "3376": 387, "v278a": 387, "452": 387, "q108": 387, "56217": 387, "v278b": 387, "minut": 387, "v278c_r": 387, "1278": 387, "v279a": 387, "455": 387, "56138": 387, "v279b": 387, "456": 387, "v279c_r": 387, "457": 387, "1295": 387, "v279d_r": 387, "q109": 387, "55336": 387, "502": 387, "mm_v278a_fu": 387, "459": 387, "2855": 387, "mm_v278b_fu": 387, "460": 387, "mm_v279a_fu": 387, "461": 387, "2823": 387, "mm_v279b_fu": 387, "v280": 387, "463": 387, "54488": 387, "v281a": 387, "464": 387, "639": 387, "q110": 387, "aa": 387, "afar": 387, "abkhazian": 387, "avestan": 387, "afrikaan": 387, "ak": 387, "akan": 387, "amhar": 387, "assames": 387, "av": 387, "avar": 387, "aymara": 387, "azerbaijani": 387, "bashkir": 387, "bihari": 387, "bislama": 387, "bambara": 387, "bengali": 387, "tibetan": 387, "breton": 387, "ce": 387, "chechen": 387, "chamorro": 387, "cnr": 387, "corsican": 387, "cree": 387, "slavic": 387, "chuvash": 387, "welsh": 387, "dv": 387, "divehi": 387, "dzongkha": 387, "ew": 387, "en": 387, "english": 387, "eo": 387, "esperanto": 387, "eu": 387, "fa": 387, "persian": 387, "ff": 387, "fulah": 387, "finnish": 387, "fijian": 387, "faroes": 387, "fy": 387, "frisian": 387, "irish": 387, "gaelic": 387, "guaran\u00ed": 387, "gujarati": 387, "gv": 387, "manx": 387, "hausa": 387, "hebrew": 387, "hi": 387, "hindi": 387, "ho": 387, "hiri": 387, "motu": 387, "haitian": 387, "hy": 387, "hz": 387, "herero": 387, "ia": 387, "interlingua": 387, "auxiliari": 387, "indonesian": 387, "interlingu": 387, "ig": 387, "igbo": 387, "sichuan": 387, "yi": 387, "ik": 387, "inupiaq": 387, "ido": 387, "iu": 387, "inuktitut": 387, "japanes": 387, "jv": 387, "javanes": 387, "ka": 387, "kongo": 387, "kikuyu": 387, "kj": 387, "kwanyama": 387, "kk": 387, "kl": 387, "kalaallisut": 387, "khmer": 387, "kannada": 387, "ko": 387, "korean": 387, "kanuri": 387, "kashmiri": 387, "ku": 387, "kurdish": 387, "kv": 387, "komi": 387, "cornish": 387, "kirghiz": 387, "latin": 387, "luxembourgish": 387, "lg": 387, "ganda": 387, "limburgish": 387, "ln": 387, "lingala": 387, "lo": 387, "luba": 387, "katanga": 387, "malagasi": 387, "marshalles": 387, "m\u0101ori": 387, "malayalam": 387, "mongolian": 387, "moldavian": 387, "marathi": 387, "malai": 387, "maltes": 387, "burmes": 387, "nb": 387, "norwegian": 387, "bokm\u00e5l": 387, "nd": 387, "ndebel": 387, "nepali": 387, "ndonga": 387, "nynorsk": 387, "nv": 387, "navajo": 387, "ny": 387, "chichewa": 387, "oc": 387, "occitan": 387, "oj": 387, "ojibwa": 387, "oromo": 387, "oriya": 387, "o": 387, "ossetian": 387, "panjabi": 387, "pi": 387, "p\u0101li": 387, "pashto": 387, "quechua": 387, "rm": 387, "raeto": 387, "romanc": 387, "rn": 387, "kirundi": 387, "romanian": 387, "kinyarwanda": 387, "sanskrit": 387, "sardinian": 387, "sindhi": 387, "sami": 387, "sango": 387, "serbo": 387, "sinhales": 387, "samoan": 387, "shona": 387, "somali": 387, "sq": 387, "swati": 387, "sotho": 387, "su": 387, "sundanes": 387, "sw": 387, "swahili": 387, "ta": 387, "tamil": 387, "te": 387, "telugu": 387, "tajik": 387, "thai": 387, "tigrinya": 387, "turkmen": 387, "tagalog": 387, "tswana": 387, "turkish": 387, "tsonga": 387, "tatar": 387, "twi": 387, "ty": 387, "tahitian": 387, "uighur": 387, "ur": 387, "urdu": 387, "uzbek": 387, "venda": 387, "vietnames": 387, "vo": 387, "volap\u00fck": 387, "walloon": 387, "wo": 387, "wolof": 387, "xh": 387, "xhosa": 387, "yiddish": 387, "yo": 387, "yoruba": 387, "zhuang": 387, "zh": 387, "chines": 387, "zu": 387, "zulu": 387, "59430": 387, "v281a_r": 387, "465": 387, "wv": 387, "475": 387, "v282": 387, "q111": 387, "51092": 387, "1989": 387, "gweight": 387, "467": 387, "calibr": 387, "6924": 387, "gweight_no_edu": 387, "468": 387, "2849": 387, "dweight": 387, "469": 387, "10246": 387, "2423": 387, "pweight": 387, "popul": 387, "age_r3_weight": 387, "471": 387, "v225_weight": 387, "472": 387, "gender": 387, "v243_r_weight": 387, "473": 387, "criteria": 387, "slightli": 387, "whatev": 387, "creation": 387, "nearli": 387, "heurist": 387, "consult": 387, "lambda": 387, "express": 387, "criterion": 387, "abov": 387, "isnumer": 387, "again": 387, "anymor": 387, "desir": 387, "reason": 387, "now": 387, "still": 387, "columnselect": 387, "observ": 387, "perfectli": 387, "infer": 387, "obvious": 387, "sometim": 387, "aesthet": 387, "ok": 387, "fulli": 387, "soon": 387, "disk": 387, "modif": 387, "easi": 387, "benefici": 387, "persist": 387, "ignor": 387, "select_row": 387, "some_quest": 387, "42710": 387, "phenomenon": 387, "mayb": 387, "common": 387, "confus": 387, "later": 387, "try": 387, "explan": 387, "mandatori": 387, "o2": 387, "That": 387, "simplic": 387, "transpos": 387, "seem": 387, "particularli": 387, "interestingli": 387, "scratch": 387, "dynam": 387, "unfortun": 387, "To": 387, "trigger": 387, "accid": 387, "divis": 387, "situat": 387, "focu": 387, "const_answ": 387, "reflect": 387, "slight": 387, "variat": 387, "transit": 387, "extrem": 387, "inher": 387, "translat": 387, "readabl": 387, "level_label": 387, "edge_label_func": 387, "gca": 387, "draw_edge_label": 387, "_include_split": 387, "edge_label_func_for_meta_data": 387, "primarili": 387, "quickli": 387, "extern": 387, "correctli": 387, "touch": 387, "surfac": 387, "avail": 387, "entireti": 387}, "objects": {"": [[1, 0, 0, "-", "tangles"]], "tangles": [[2, 1, 1, "", "FTreeNode"], [17, 1, 1, "", "Tangle"], [34, 1, 1, "", "TangleSearchTree"], [47, 1, 1, "", "TangleSweep"], [54, 1, 1, "", "ToTEdge"], [56, 1, 1, "", "ToTNode"], [61, 1, 1, "", "TreeOfTangles"], [63, 1, 1, "", "UncrossingSweep"], [69, 0, 0, "-", "agreement"], [74, 4, 1, "", "agreement_func"], [75, 0, 0, "-", "analysis"], [82, 0, 0, "-", "convenience"], [200, 0, 0, "-", "guiding"], [204, 0, 0, "-", "search"], [210, 0, 0, "-", "separations"], [287, 4, 1, "", "uncross_distinguishers"], [288, 0, 0, "-", "util"]], "tangles.FTreeNode": [[3, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [5, 2, 1, "", "copy_subtree"], [6, 2, 1, "", "copy_subtree_into_children"], [7, 2, 1, "", "detach"], [8, 2, 1, "", "from_indicator_matrix"], [9, 2, 1, "", "is_leaf"], [10, 2, 1, "", "leaves_in_subtree"], [11, 2, 1, "", "level"], [12, 2, 1, "", "level_in_subtree"], [13, 2, 1, "", "path_from_root_indicator"], [14, 2, 1, "", "set_left_child"], [15, 2, 1, "", "set_right_child"], [16, 2, 1, "", "to_indicator_matrix"]], "tangles.Tangle": [[18, 2, 1, "", "children"], [19, 2, 1, "", "copy"], [20, 2, 1, "", "copy_subtree"], [21, 2, 1, "", "copy_subtree_into_children"], [22, 2, 1, "", "detach"], [23, 2, 1, "", "equal_data"], [24, 2, 1, "", "from_indicator_matrix"], [25, 2, 1, "", "is_leaf"], [26, 2, 1, "", "leaves_in_subtree"], [27, 2, 1, "", "level"], [28, 2, 1, "", "level_in_subtree"], [29, 2, 1, "", "open"], [30, 2, 1, "", "path_from_root_indicator"], [31, 2, 1, "", "set_left_child"], [32, 2, 1, "", "set_right_child"], [33, 2, 1, "", "to_indicator_matrix"]], "tangles.TangleSearchTree": [[35, 2, 1, "", "get_efficient_distinguishers"], [36, 2, 1, "", "k_tangles"], [37, 3, 1, "", "limit"], [38, 2, 1, "", "load"], [39, 2, 1, "", "maximal_tangles"], [40, 3, 1, "", "number_of_separations"], [41, 3, 1, "", "root"], [42, 2, 1, "", "save"], [43, 2, 1, "", "search_tree"], [44, 3, 1, "", "sep_ids"], [45, 2, 1, "", "tangle_matrix"], [46, 2, 1, "", "tree_height_for_agreement"]], "tangles.TangleSweep": [[48, 2, 1, "", "append_separation"], [49, 2, 1, "", "greedy_search"], [50, 2, 1, "", "insert_separation"], [51, 2, 1, "", "sweep_below"], [52, 2, 1, "", "sweep_one"], [53, 3, 1, "", "tree"]], "tangles.ToTEdge": [[55, 2, 1, "", "other_end"]], "tangles.ToTNode": [[57, 2, 1, "", "degree"], [58, 2, 1, "", "is_leaf"], [59, 3, 1, "", "neighbours"], [60, 2, 1, "", "set_label"]], "tangles.TreeOfTangles": [[62, 2, 1, "", "any_node"]], "tangles.UncrossingSweep": [[64, 2, 1, "", "create_tot"], [65, 2, 1, "", "sweep_below"], [66, 2, 1, "", "sweep_one"], [67, 2, 1, "", "tangle_matrix"], [68, 3, 1, "", "tree"]], "tangles.agreement": [[70, 1, 1, "", "AgreementFunc"], [71, 1, 1, "", "AgreementFuncBitarray"], [72, 1, 1, "", "AgreementFuncBitarrayBips"], [73, 1, 1, "", "CalculateAgreement"]], "tangles.analysis": [[76, 4, 1, "", "coherence_levels"], [77, 4, 1, "", "complexity_levels"], [78, 4, 1, "", "hard_clustering_tuebingen"], [79, 4, 1, "", "soft_clustering_tuebingen"], [80, 4, 1, "", "tangle_score"], [81, 4, 1, "", "visibility"]], "tangles.convenience": [[83, 1, 1, "", "NominalVariableValues"], [87, 1, 1, "", "NumericalVariableValues"], [91, 1, 1, "", "OrderFunctionO1"], [92, 1, 1, "", "OrderFunctionO1biased"], [93, 1, 1, "", "OrderFunctionO2"], [94, 1, 1, "", "OrderFunctionO3"], [95, 1, 1, "", "OrderFunctionO4"], [96, 1, 1, "", "OrdinalVariableValues"], [100, 1, 1, "", "SimpleSurveyFeatureFactory"], [103, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesBothSides"], [106, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesImplicit"], [109, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures"], [112, 1, 1, "", "Survey"], [138, 1, 1, "", "SurveyFeatureFactory"], [141, 1, 1, "", "SurveyFeatureFactoryDecorator"], [144, 1, 1, "", "SurveyFeatureFactory_CherryPicker"], [148, 1, 1, "", "SurveyTangles"], [158, 1, 1, "", "SurveyVariable"], [174, 1, 1, "", "SurveyVariableValues"], [178, 1, 1, "", "TangleSweepFeatureSys"], [189, 1, 1, "", "UnionOfIntervals"], [190, 4, 1, "", "binary_unique_value_features"], [191, 4, 1, "", "extensive_numericvar_features"], [192, 4, 1, "", "feats2seps_invalids_to_both_sides"], [193, 4, 1, "", "nominalvar_features_all_cats"], [194, 4, 1, "", "numericvar_features_inside_regular_bins"], [195, 4, 1, "", "numericvar_features_split_regular_ge"], [196, 4, 1, "", "ordinalvar_features_ge_all_splits"], [197, 4, 1, "", "search_tangles"], [198, 4, 1, "", "search_tangles_uncrossed"], [199, 4, 1, "", "simple_unique_value_features"]], "tangles.convenience.NominalVariableValues": [[84, 2, 1, "", "invert_op"], [85, 2, 1, "", "possible_values_representation"], [86, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.NumericalVariableValues": [[88, 2, 1, "", "invert_op"], [89, 2, 1, "", "possible_values_representation"], [90, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.OrdinalVariableValues": [[97, 2, 1, "", "invert_op"], [98, 2, 1, "", "possible_values_representation"], [99, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.SimpleSurveyFeatureFactory": [[101, 2, 1, "", "create_features"], [102, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides": [[104, 2, 1, "", "create_features"], [105, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit": [[107, 2, 1, "", "create_features"], [108, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures": [[110, 2, 1, "", "create_features"], [111, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.Survey": [[113, 2, 1, "", "__getitem__"], [114, 2, 1, "", "check_variables"], [115, 2, 1, "", "complete_rows"], [116, 2, 1, "", "copy"], [117, 2, 1, "", "count_number_of_unique_answers"], [118, 2, 1, "", "count_valid_answers_per_respondent"], [119, 2, 1, "", "guess_missing_variable_ranges"], [120, 2, 1, "", "guess_missing_variable_types"], [121, 2, 1, "", "interpret_column_selection"], [122, 2, 1, "", "load"], [123, 3, 1, "", "num_questions"], [124, 3, 1, "", "num_respondents"], [125, 2, 1, "", "replace_variable_names"], [126, 2, 1, "", "replace_variable_value_labels"], [127, 2, 1, "", "replace_variable_values"], [128, 2, 1, "", "save"], [129, 2, 1, "", "select_questions"], [130, 2, 1, "", "select_respondents"], [131, 2, 1, "", "set_pyreadstat_meta_data"], [132, 2, 1, "", "set_variable_labels"], [133, 2, 1, "", "set_variable_types"], [134, 2, 1, "", "set_variable_value_lists"], [135, 3, 1, "", "shape"], [136, 2, 1, "", "summarize"], [137, 2, 1, "", "variable_info"]], "tangles.convenience.SurveyFeatureFactory": [[139, 2, 1, "", "create_features"], [140, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyFeatureFactoryDecorator": [[142, 2, 1, "", "create_features"], [143, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyFeatureFactory_CherryPicker": [[145, 2, 1, "", "create_features"], [146, 2, 1, "", "create_features_for_single_col"], [147, 2, 1, "", "set_factoryfunc"]], "tangles.convenience.SurveyTangles": [[149, 2, 1, "", "change_agreement"], [150, 3, 1, "", "feature_system"], [151, 2, 1, "", "initialize_search"], [152, 2, 1, "", "ordered_metadata"], [153, 2, 1, "", "search"], [154, 2, 1, "", "sepcified_features"], [155, 2, 1, "", "tangle_matrix"], [156, 2, 1, "", "typical_answers"], [157, 3, 1, "", "valid_agreement_lower_bound"]], "tangles.convenience.SurveyVariable": [[159, 2, 1, "", "add_values"], [160, 2, 1, "", "all_values_as_list"], [161, 2, 1, "", "create_values"], [162, 2, 1, "", "invalid_values_as_list"], [163, 2, 1, "", "is_nominal_type"], [164, 2, 1, "", "is_numeric_type"], [165, 2, 1, "", "is_ordinal_type"], [166, 2, 1, "", "is_valid_type"], [167, 2, 1, "", "is_valid_type_name"], [168, 2, 1, "", "replace_values"], [169, 2, 1, "", "set_value_labels"], [170, 2, 1, "", "set_values"], [171, 2, 1, "", "to_row"], [172, 2, 1, "", "valid_values_as_list"], [173, 2, 1, "", "value_class"]], "tangles.convenience.SurveyVariableValues": [[175, 2, 1, "", "invert_op"], [176, 2, 1, "", "possible_values_representation"], [177, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.TangleSweepFeatureSys": [[179, 3, 1, "", "all_oriented_sep_ids"], [180, 2, 1, "", "append_separation"], [181, 2, 1, "", "greedy_search"], [182, 2, 1, "", "insert_separation"], [183, 2, 1, "", "lower_agreement"], [184, 3, 1, "", "original_sep_ids"], [185, 2, 1, "", "sweep_below"], [186, 2, 1, "", "sweep_one"], [187, 2, 1, "", "tangle_matrix"], [188, 3, 1, "", "tree"]], "tangles.guiding": [[201, 4, 1, "", "get_tangle_by_path"], [202, 4, 1, "", "guided_tangle"], [203, 4, 1, "", "is_guiding"]], "tangles.search": [[205, 0, 0, "-", "extending_tangles"], [208, 0, 0, "-", "progress"]], "tangles.search.extending_tangles": [[206, 1, 1, "", "ExtendingTangles"]], "tangles.search.extending_tangles.ExtendingTangles": [[207, 2, 1, "", "extend_tangles"]], "tangles.search.progress": [[209, 1, 1, "", "DefaultProgressCallback"]], "tangles.separations": [[211, 1, 1, "", "FeatureSystem"], [232, 1, 1, "", "MetaData"], [234, 1, 1, "", "SetSeparationSystem"], [250, 1, 1, "", "SetSeparationSystemBase"], [266, 1, 1, "", "SetSeparationSystemOrderFunc"], [267, 0, 0, "-", "atomic_sets"], [272, 0, 0, "-", "finding"], [284, 0, 0, "-", "util"]], "tangles.separations.FeatureSystem": [[212, 2, 1, "", "__getitem__"], [213, 2, 1, "", "add_features"], [214, 2, 1, "", "add_seps"], [215, 2, 1, "", "all_feature_ids"], [216, 2, 1, "", "all_sep_ids"], [217, 2, 1, "", "assemble_meta_info"], [218, 2, 1, "", "compute_infimum"], [219, 2, 1, "", "crossing_seps"], [220, 2, 1, "", "feature_metadata"], [221, 2, 1, "", "get_corners"], [222, 2, 1, "", "get_feature_ids"], [223, 2, 1, "", "get_sep_ids"], [224, 2, 1, "", "infimum_of_two"], [225, 2, 1, "", "is_le"], [226, 2, 1, "", "is_nested"], [227, 2, 1, "", "is_subset"], [228, 2, 1, "", "metadata_matrix"], [229, 2, 1, "", "separation_metadata"], [230, 2, 1, "", "with_array"], [231, 2, 1, "", "with_sparse_array"]], "tangles.separations.MetaData": [[233, 2, 1, "", "append"]], "tangles.separations.SetSeparationSystem": [[235, 2, 1, "", "__getitem__"], [236, 2, 1, "", "add_seps"], [237, 2, 1, "", "all_sep_ids"], [238, 2, 1, "", "assemble_meta_info"], [239, 2, 1, "", "compute_infimum"], [240, 2, 1, "", "crossing_seps"], [241, 2, 1, "", "get_corners"], [242, 2, 1, "", "get_sep_ids"], [243, 2, 1, "", "infimum_of_two"], [244, 2, 1, "", "is_le"], [245, 2, 1, "", "is_nested"], [246, 2, 1, "", "metadata_matrix"], [247, 2, 1, "", "separation_metadata"], [248, 2, 1, "", "with_array"], [249, 2, 1, "", "with_sparse_array"]], "tangles.separations.SetSeparationSystemBase": [[251, 2, 1, "", "__getitem__"], [252, 2, 1, "", "add_seps"], [253, 2, 1, "", "all_sep_ids"], [254, 2, 1, "", "assemble_meta_info"], [255, 2, 1, "", "compute_infimum"], [256, 2, 1, "", "crossing_seps"], [257, 2, 1, "", "get_corners"], [258, 2, 1, "", "get_sep_ids"], [259, 2, 1, "", "infimum_of_two"], [260, 2, 1, "", "is_le"], [261, 2, 1, "", "is_nested"], [262, 2, 1, "", "metadata_matrix"], [263, 2, 1, "", "separation_metadata"], [264, 2, 1, "", "with_array"], [265, 2, 1, "", "with_sparse_array"]], "tangles.separations.atomic_sets": [[268, 4, 1, "", "atomic_set_indicators"], [269, 4, 1, "", "atomic_sets"], [270, 4, 1, "", "atomic_to_seps"], [271, 4, 1, "", "seps_to_atomic"]], "tangles.separations.finding": [[273, 1, 1, "", "OrderFuncDerivative"], [276, 4, 1, "", "add_all_corners_of_features"], [277, 4, 1, "", "min_S_T_cut"], [278, 4, 1, "", "minimize_cut"], [279, 4, 1, "", "nodal_domains"], [280, 4, 1, "", "pca_features"], [281, 4, 1, "", "random_features"], [282, 4, 1, "", "spectral_features"], [283, 4, 1, "", "spectral_features_splitted"]], "tangles.separations.finding.OrderFuncDerivative": [[274, 2, 1, "", "change_discrete_derivative"], [275, 2, 1, "", "discrete_derivative"]], "tangles.separations.util": [[285, 4, 1, "", "order_func_balance"], [286, 4, 1, "", "order_func_min_side_size"]], "tangles.util": [[289, 0, 0, "-", "entropy"], [296, 0, 0, "-", "graph"], [325, 0, 0, "-", "logic"], [337, 0, 0, "-", "matrix_order"], [345, 0, 0, "-", "preprocessing"], [349, 0, 0, "-", "tree"], [376, 0, 0, "-", "ui"]], "tangles.util.entropy": [[290, 4, 1, "", "colsplit_mutual_information"], [291, 4, 1, "", "datapointwise_information_gains"], [292, 4, 1, "", "entropy"], [293, 4, 1, "", "information_gain"], [294, 4, 1, "", "joint_entropy"], [295, 4, 1, "", "pairwise_mutual_information"]], "tangles.util.graph": [[297, 4, 1, "", "connected_component_indicators"], [298, 0, 0, "-", "cut_weight"], [311, 4, 1, "", "greedy_neighborhood"], [312, 4, 1, "", "greedy_neighborhood_old"], [313, 4, 1, "", "laplacian"], [314, 0, 0, "-", "minor"], [316, 4, 1, "", "modularity_matrix"], [317, 4, 1, "", "normalized_laplacian"], [318, 0, 0, "-", "similarity"]], "tangles.util.graph.cut_weight": [[299, 1, 1, "", "CutWeightOrder"], [302, 1, 1, "", "NCutOrder"], [305, 1, 1, "", "RatioCutOrder"], [308, 4, 1, "", "cut_weight_order"], [309, 4, 1, "", "ncut_order"], [310, 4, 1, "", "ratiocut_order"]], "tangles.util.graph.cut_weight.CutWeightOrder": [[300, 2, 1, "", "change_discrete_derivative"], [301, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.NCutOrder": [[303, 2, 1, "", "change_discrete_derivative"], [304, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.RatioCutOrder": [[306, 2, 1, "", "change_discrete_derivative"], [307, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.minor": [[315, 4, 1, "", "contract_graph"]], "tangles.util.graph.similarity": [[319, 4, 1, "", "cosine_similarity"], [320, 4, 1, "", "cosine_similarity_graph_csr_data"], [321, 4, 1, "", "epsilon_neighborhood_graph"], [322, 4, 1, "", "grid_distance_graph"], [323, 4, 1, "", "image_to_similarity_graph"], [324, 4, 1, "", "k_nearest_neighbors"]], "tangles.util.logic": [[326, 1, 1, "", "ConjunctiveNormalForm"], [327, 1, 1, "", "DisjunctiveNormalForm"], [328, 1, 1, "", "LogicTerm"], [329, 1, 1, "", "TextTerm"], [330, 4, 1, "", "append"], [331, 4, 1, "", "distribute"], [332, 0, 0, "-", "sep_to_term"], [334, 4, 1, "", "simplify"], [335, 0, 0, "-", "term"]], "tangles.util.logic.sep_to_term": [[333, 1, 1, "", "RecursionLogic"]], "tangles.util.logic.term": [[336, 1, 1, "", "SemanticTextTerm"]], "tangles.util.matrix_order": [[338, 1, 1, "", "MatrixOrderSVD"], [339, 4, 1, "", "covariance_order"], [340, 4, 1, "", "logdet_order"], [341, 4, 1, "", "margin_order_matrix"], [342, 4, 1, "", "matrix_order"], [343, 4, 1, "", "o_five"], [344, 4, 1, "", "o_seven"]], "tangles.util.preprocessing": [[346, 4, 1, "", "balance"], [347, 4, 1, "", "normalize_length"], [348, 4, 1, "", "standardize"]], "tangles.util.tree": [[350, 1, 1, "", "BinTreeNetworkX"], [357, 1, 1, "", "BinTreeNode"], [372, 1, 1, "", "GraphNode"], [373, 1, 1, "", "TreeNode"], [374, 4, 1, "", "plot_tree"], [375, 4, 1, "", "print_node_label"]], "tangles.util.tree.BinTreeNetworkX": [[351, 2, 1, "", "draw"], [352, 2, 1, "", "get_ids_from_label"], [353, 2, 1, "", "get_label"], [354, 3, 1, "", "graph"], [355, 2, 1, "", "relabel"], [356, 2, 1, "", "tst_layout"]], "tangles.util.tree.BinTreeNode": [[358, 2, 1, "", "children"], [359, 2, 1, "", "copy"], [360, 2, 1, "", "copy_subtree"], [361, 2, 1, "", "copy_subtree_into_children"], [362, 2, 1, "", "detach"], [363, 2, 1, "", "from_indicator_matrix"], [364, 2, 1, "", "is_leaf"], [365, 2, 1, "", "leaves_in_subtree"], [366, 2, 1, "", "level"], [367, 2, 1, "", "level_in_subtree"], [368, 2, 1, "", "path_from_root_indicator"], [369, 2, 1, "", "set_left_child"], [370, 2, 1, "", "set_right_child"], [371, 2, 1, "", "to_indicator_matrix"]], "tangles.util.ui": [[377, 1, 1, "", "SplitGraph"], [381, 1, 1, "", "XYPicker"], [384, 4, 1, "", "plot_annotated"], [385, 4, 1, "", "wrap_annotation_func_ax"]], "tangles.util.ui.SplitGraph": [[378, 2, 1, "", "draw_ellipses"], [379, 2, 1, "", "draw_side_and_boundary"], [380, 2, 1, "", "draw_stacked_circles"]], "tangles.util.ui.XYPicker": [[382, 2, 1, "", "show"], [383, 2, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"tangl": [0, 1, 17, 69, 75, 82, 200, 204, 205, 208, 210, 267, 272, 284, 288, 289, 296, 298, 314, 318, 325, 332, 335, 337, 345, 349, 376, 387], "softwar": 0, "document": 0, "ftreenod": 2, "children": [3, 18, 358], "return": [3, 5, 8, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 43, 45, 46, 48, 51, 52, 55, 57, 58, 62, 64, 65, 66, 67, 74, 76, 77, 78, 79, 80, 81, 84, 88, 97, 101, 102, 104, 105, 107, 108, 110, 111, 113, 114, 115, 118, 121, 123, 124, 129, 130, 135, 136, 137, 139, 140, 142, 143, 145, 146, 150, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 175, 180, 185, 186, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 287, 290, 291, 292, 294, 295, 297, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 330, 331, 339, 340, 341, 342, 346, 347, 348, 352, 353, 354, 356, 358, 360, 363, 365, 366, 367, 368, 371, 380, 385], "copi": [4, 19, 116, 359], "copy_subtre": [5, 20, 360], "copy_subtree_into_children": [6, 21, 361], "detach": [7, 22, 362], "from_indicator_matrix": [8, 24, 363], "paramet": [8, 10, 12, 14, 15, 16, 24, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 64, 65, 67, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 158, 159, 167, 168, 169, 170, 174, 175, 176, 177, 180, 181, 182, 183, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 287, 290, 291, 292, 294, 295, 297, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 330, 331, 339, 340, 341, 342, 346, 347, 348, 350, 352, 353, 355, 356, 357, 363, 365, 367, 369, 370, 371, 374, 375, 378, 379, 380, 381, 382, 384, 385], "is_leaf": [9, 25, 58, 364], "leaves_in_subtre": [10, 26, 365], "level": [11, 27, 366], "level_in_subtre": [12, 28, 367], "path_from_root_ind": [13, 30, 368], "set_left_child": [14, 31, 369], "set_right_child": [15, 32, 370], "to_indicator_matrix": [16, 33, 371], "attribut": [17, 100, 141, 148, 178, 357, 381], "equal_data": 23, "open": 29, "tanglesearchtre": 34, "get_efficient_distinguish": 35, "k_tangl": 36, "limit": 37, "load": [38, 122], "maximal_tangl": 39, "number_of_separ": 40, "root": 41, "save": [42, 128], "search_tre": 43, "sep_id": 44, "tangle_matrix": [45, 67, 155, 187], "tree_height_for_agr": 46, "tanglesweep": 47, "append_separ": [48, 180], "greedy_search": [49, 181], "insert_separ": [50, 182], "sweep_below": [51, 65, 185], "sweep_on": [52, 66, 186], "tree": [53, 68, 188, 349], "totedg": 54, "other_end": 55, "totnod": 56, "degre": 57, "neighbour": 59, "set_label": 60, "treeoftangl": 61, "any_nod": 62, "uncrossingsweep": 63, "create_tot": 64, "agreement": 69, "agreementfunc": 70, "agreementfuncbitarrai": 71, "agreementfuncbitarraybip": 72, "calculateagr": 73, "agreement_func": 74, "analysi": [75, 387], "coherence_level": 76, "complexity_level": 77, "hard_clustering_tuebingen": 78, "soft_clustering_tuebingen": 79, "tangle_scor": 80, "visibl": 81, "conveni": 82, "nominalvariablevalu": 83, "invert_op": [84, 88, 97, 175], "possible_values_represent": [85, 89, 98, 176], "update_values_for_specif": [86, 90, 99, 177], "numericalvariablevalu": 87, "orderfunctiono1": 91, "orderfunctiono1bias": 92, "orderfunctiono2": 93, "orderfunctiono3": 94, "orderfunctiono4": 95, "ordinalvariablevalu": 96, "simplesurveyfeaturefactori": 100, "create_featur": [101, 104, 107, 110, 139, 142, 145], "create_features_for_single_col": [102, 105, 108, 111, 140, 143, 146], "simplesurveyfeaturefactory_missingvaluesbothsid": 103, "simplesurveyfeaturefactory_missingvaluesimplicit": 106, "simplesurveyfeaturefactory_missingvaluesownfeatur": 109, "survei": [112, 387], "__getitem__": [113, 212, 235, 251], "check_vari": 114, "complete_row": 115, "count_number_of_unique_answ": 117, "count_valid_answers_per_respond": 118, "guess_missing_variable_rang": 119, "guess_missing_variable_typ": 120, "interpret_column_select": 121, "num_quest": 123, "num_respond": 124, "replace_variable_nam": 125, "replace_variable_value_label": 126, "replace_variable_valu": 127, "select_quest": 129, "select_respond": 130, "set_pyreadstat_meta_data": 131, "set_variable_label": 132, "set_variable_typ": 133, "set_variable_value_list": 134, "shape": 135, "summar": 136, "variable_info": 137, "surveyfeaturefactori": 138, "surveyfeaturefactorydecor": 141, "surveyfeaturefactory_cherrypick": 144, "set_factoryfunc": 147, "surveytangl": 148, "change_agr": 149, "feature_system": 150, "initialize_search": 151, "ordered_metadata": 152, "search": [153, 204, 205, 208], "sepcified_featur": 154, "typical_answ": 156, "valid_agreement_lower_bound": 157, "surveyvari": 158, "add_valu": 159, "all_values_as_list": 160, "create_valu": 161, "invalid_values_as_list": 162, "is_nominal_typ": 163, "is_numeric_typ": 164, "is_ordinal_typ": 165, "is_valid_typ": 166, "is_valid_type_nam": 167, "replace_valu": 168, "set_value_label": 169, "set_valu": 170, "to_row": 171, "valid_values_as_list": 172, "value_class": 173, "surveyvariablevalu": 174, "tanglesweepfeaturesi": 178, "all_oriented_sep_id": 179, "lower_agr": 183, "original_sep_id": 184, "unionofinterv": 189, "binary_unique_value_featur": 190, "extensive_numericvar_featur": 191, "feats2seps_invalids_to_both_sid": 192, "nominalvar_features_all_cat": 193, "numericvar_features_inside_regular_bin": 194, "numericvar_features_split_regular_g": 195, "ordinalvar_features_ge_all_split": 196, "search_tangl": 197, "search_tangles_uncross": 198, "simple_unique_value_featur": 199, "guid": 200, "get_tangle_by_path": 201, "guided_tangl": 202, "is_guid": 203, "extending_tangl": 205, "extendingtangl": 206, "extend_tangl": 207, "progress": 208, "defaultprogresscallback": 209, "separ": [210, 267, 272, 284], "featuresystem": 211, "add_featur": 213, "add_sep": [214, 236, 252], "all_feature_id": 215, "all_sep_id": [216, 237, 253], "assemble_meta_info": [217, 238, 254], "compute_infimum": [218, 239, 255], "crossing_sep": [219, 240, 256], "feature_metadata": 220, "get_corn": [221, 241, 257], "get_feature_id": 222, "get_sep_id": [223, 242, 258], "infimum_of_two": [224, 243, 259], "is_l": [225, 244, 260], "is_nest": [226, 245, 261], "is_subset": 227, "metadata_matrix": [228, 246, 262], "separation_metadata": [229, 247, 263], "with_arrai": [230, 248, 264], "with_sparse_arrai": [231, 249, 265], "metadata": 232, "append": [233, 330], "setseparationsystem": 234, "setseparationsystembas": 250, "setseparationsystemorderfunc": 266, "atomic_set": [267, 269], "atomic_set_ind": 268, "atomic_to_sep": 270, "seps_to_atom": 271, "find": 272, "orderfuncderiv": 273, "change_discrete_deriv": [274, 300, 303, 306], "discrete_deriv": [275, 301, 304, 307], "add_all_corners_of_featur": 276, "min_s_t_cut": 277, "minimize_cut": 278, "nodal_domain": 279, "pca_featur": 280, "random_featur": 281, "spectral_featur": 282, "spectral_features_split": 283, "util": [284, 288, 289, 296, 298, 314, 318, 325, 332, 335, 337, 345, 349, 376], "order_func_bal": 285, "order_func_min_side_s": 286, "uncross_distinguish": 287, "entropi": [289, 292], "colsplit_mutual_inform": 290, "datapointwise_information_gain": 291, "information_gain": 293, "joint_entropi": 294, "pairwise_mutual_inform": 295, "graph": [296, 298, 314, 318, 354], "connected_component_ind": 297, "cut_weight": 298, "cutweightord": 299, "ncutord": 302, "ratiocutord": 305, "cut_weight_ord": 308, "ncut_ord": 309, "ratiocut_ord": 310, "greedy_neighborhood": 311, "greedy_neighborhood_old": 312, "laplacian": 313, "minor": 314, "contract_graph": 315, "modularity_matrix": 316, "normalized_laplacian": 317, "similar": 318, "cosine_similar": 319, "cosine_similarity_graph_csr_data": 320, "epsilon_neighborhood_graph": 321, "grid_distance_graph": 322, "image_to_similarity_graph": 323, "k_nearest_neighbor": 324, "logic": [325, 332, 335], "conjunctivenormalform": 326, "disjunctivenormalform": 327, "logicterm": 328, "textterm": 329, "distribut": 331, "sep_to_term": 332, "recursionlog": 333, "simplifi": 334, "term": 335, "semantictextterm": 336, "matrix_ord": [337, 342], "matrixordersvd": 338, "member": 338, "covariance_ord": 339, "logdet_ord": 340, "margin_order_matrix": 341, "o_fiv": 343, "o_seven": 344, "preprocess": 345, "balanc": 346, "normalize_length": 347, "standard": 348, "bintreenetworkx": 350, "draw": 351, "get_ids_from_label": 352, "get_label": 353, "relabel": 355, "tst_layout": 356, "bintreenod": 357, "graphnod": 372, "treenod": 373, "plot_tre": 374, "print_node_label": 375, "ui": 376, "splitgraph": 377, "draw_ellips": 378, "draw_side_and_boundari": 379, "draw_stacked_circl": 380, "xypick": 381, "show": 382, "updat": 383, "plot_annot": 384, "wrap_annotation_func_ax": 385, "refer": 386, "mindset": 387, "prepar": 387, "clean": 387, "select": 387, "data": 387, "A": 387, "simpl": 387, "summari": 387, "tutori": 388}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Tangle Software Documentation": [[0, "tangle-software-documentation"]], "tangles": [[1, "module-tangles"]], "FTreeNode": [[2, "ftreenode"]], "children": [[3, "children"], [18, "children"], [358, "children"]], "Returns": [[3, "returns"], [5, "returns"], [8, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [16, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [23, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [57, "returns"], [58, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [84, "returns"], [88, "returns"], [97, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [107, "returns"], [108, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [118, "returns"], [121, "returns"], [123, "returns"], [124, "returns"], [129, "returns"], [130, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [142, "returns"], [143, "returns"], [145, "returns"], [146, "returns"], [150, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [171, "returns"], [172, "returns"], [175, "returns"], [180, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [190, "returns"], [191, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [287, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [294, "returns"], [295, "returns"], [297, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [330, "returns"], [331, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [352, "returns"], [353, "returns"], [354, "returns"], [356, "returns"], [358, "returns"], [360, "returns"], [363, "returns"], [365, "returns"], [366, "returns"], [367, "returns"], [368, "returns"], [371, "returns"], [380, "returns"], [385, "returns"]], "copy": [[4, "copy"], [19, "copy"], [116, "copy"], [359, "copy"]], "copy_subtree": [[5, "copy-subtree"], [20, "copy-subtree"], [360, "copy-subtree"]], "copy_subtree_into_children": [[6, "copy-subtree-into-children"], [21, "copy-subtree-into-children"], [361, "copy-subtree-into-children"]], "detach": [[7, "detach"], [22, "detach"], [362, "detach"]], "from_indicator_matrix": [[8, "from-indicator-matrix"], [24, "from-indicator-matrix"], [363, "from-indicator-matrix"]], "Parameters": [[8, "parameters"], [10, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [24, "parameters"], [26, "parameters"], [28, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [39, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [55, "parameters"], [60, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [83, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [96, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [104, "parameters"], [105, "parameters"], [107, "parameters"], [108, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [125, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [149, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [174, "parameters"], [176, "parameters"], [177, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [185, "parameters"], [187, "parameters"], [190, "parameters"], [191, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [206, "parameters"], [207, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [251, "parameters"], [252, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [287, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [330, "parameters"], [331, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [350, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [363, "parameters"], [365, "parameters"], [367, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [374, "parameters"], [375, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [384, "parameters"], [385, "parameters"]], "is_leaf": [[9, "is-leaf"], [25, "is-leaf"], [58, "is-leaf"], [364, "is-leaf"]], "leaves_in_subtree": [[10, "leaves-in-subtree"], [26, "leaves-in-subtree"], [365, "leaves-in-subtree"]], "level": [[11, "level"], [27, "level"], [366, "level"]], "level_in_subtree": [[12, "level-in-subtree"], [28, "level-in-subtree"], [367, "level-in-subtree"]], "path_from_root_indicator": [[13, "path-from-root-indicator"], [30, "path-from-root-indicator"], [368, "path-from-root-indicator"]], "set_left_child": [[14, "set-left-child"], [31, "set-left-child"], [369, "set-left-child"]], "set_right_child": [[15, "set-right-child"], [32, "set-right-child"], [370, "set-right-child"]], "to_indicator_matrix": [[16, "to-indicator-matrix"], [33, "to-indicator-matrix"], [371, "to-indicator-matrix"]], "Tangle": [[17, "tangle"]], "Attributes": [[17, "attributes"], [100, "attributes"], [141, "attributes"], [148, "attributes"], [178, "attributes"], [357, "attributes"], [381, "attributes"]], "equal_data": [[23, "equal-data"]], "open": [[29, "open"]], "TangleSearchTree": [[34, "tanglesearchtree"]], "get_efficient_distinguishers": [[35, "get-efficient-distinguishers"]], "k_tangles": [[36, "k-tangles"]], "limit": [[37, "limit"]], "load": [[38, "load"], [122, "load"]], "maximal_tangles": [[39, "maximal-tangles"]], "number_of_separations": [[40, "number-of-separations"]], "root": [[41, "root"]], "save": [[42, "save"], [128, "save"]], "search_tree": [[43, "search-tree"]], "sep_ids": [[44, "sep-ids"]], "tangle_matrix": [[45, "tangle-matrix"], [67, "tangle-matrix"], [155, "tangle-matrix"], [187, "tangle-matrix"]], "tree_height_for_agreement": [[46, "tree-height-for-agreement"]], "TangleSweep": [[47, "tanglesweep"]], "append_separation": [[48, "append-separation"], [180, "append-separation"]], "greedy_search": [[49, "greedy-search"], [181, "greedy-search"]], "insert_separation": [[50, "insert-separation"], [182, "insert-separation"]], "sweep_below": [[51, "sweep-below"], [65, "sweep-below"], [185, "sweep-below"]], "sweep_one": [[52, "sweep-one"], [66, "sweep-one"], [186, "sweep-one"]], "tree": [[53, "tree"], [68, "tree"], [188, "tree"]], "ToTEdge": [[54, "totedge"]], "other_end": [[55, "other-end"]], "ToTNode": [[56, "totnode"]], "degree": [[57, "degree"]], "neighbours": [[59, "neighbours"]], "set_label": [[60, "set-label"]], "TreeOfTangles": [[61, "treeoftangles"]], "any_node": [[62, "any-node"]], "UncrossingSweep": [[63, "uncrossingsweep"]], "create_tot": [[64, "create-tot"]], "tangles.agreement": [[69, "module-tangles.agreement"]], "AgreementFunc": [[70, "agreementfunc"]], "AgreementFuncBitarray": [[71, "agreementfuncbitarray"]], "AgreementFuncBitarrayBips": [[72, "agreementfuncbitarraybips"]], "CalculateAgreement": [[73, "calculateagreement"]], "agreement_func": [[74, "agreement-func"]], "tangles.analysis": [[75, "module-tangles.analysis"]], "coherence_levels": [[76, "coherence-levels"]], "complexity_levels": [[77, "complexity-levels"]], "hard_clustering_tuebingen": [[78, "hard-clustering-tuebingen"]], "soft_clustering_tuebingen": [[79, "soft-clustering-tuebingen"]], "tangle_score": [[80, "tangle-score"]], "visibility": [[81, "visibility"]], "tangles.convenience": [[82, "module-tangles.convenience"]], "NominalVariableValues": [[83, "nominalvariablevalues"]], "invert_op": [[84, "invert-op"], [88, "invert-op"], [97, "invert-op"], [175, "invert-op"]], "Parameter": [[84, "parameter"], [88, "parameter"], [97, "parameter"], [126, "parameter"], [175, "parameter"], [183, "parameter"]], "possible_values_representation": [[85, "possible-values-representation"], [89, "possible-values-representation"], [98, "possible-values-representation"], [176, "possible-values-representation"]], "update_values_for_specification": [[86, "update-values-for-specification"], [90, "update-values-for-specification"], [99, "update-values-for-specification"], [177, "update-values-for-specification"]], "NumericalVariableValues": [[87, "numericalvariablevalues"]], "OrderFunctionO1": [[91, "orderfunctiono1"]], "OrderFunctionO1biased": [[92, "orderfunctiono1biased"]], "OrderFunctionO2": [[93, "orderfunctiono2"]], "OrderFunctionO3": [[94, "orderfunctiono3"]], "OrderFunctionO4": [[95, "orderfunctiono4"]], "OrdinalVariableValues": [[96, "ordinalvariablevalues"]], "SimpleSurveyFeatureFactory": [[100, "simplesurveyfeaturefactory"]], "create_features": [[101, "create-features"], [104, "create-features"], [107, "create-features"], [110, "create-features"], [139, "create-features"], [142, "create-features"], [145, "create-features"]], "create_features_for_single_col": [[102, "create-features-for-single-col"], [105, "create-features-for-single-col"], [108, "create-features-for-single-col"], [111, "create-features-for-single-col"], [140, "create-features-for-single-col"], [143, "create-features-for-single-col"], [146, "create-features-for-single-col"]], "SimpleSurveyFeatureFactory_MissingValuesBothSides": [[103, "simplesurveyfeaturefactory-missingvaluesbothsides"]], "SimpleSurveyFeatureFactory_MissingValuesImplicit": [[106, "simplesurveyfeaturefactory-missingvaluesimplicit"]], "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures": [[109, "simplesurveyfeaturefactory-missingvaluesownfeatures"]], "Survey": [[112, "survey"]], "__getitem__": [[113, "getitem"], [212, "getitem"], [235, "getitem"], [251, "getitem"]], "check_variables": [[114, "check-variables"]], "complete_rows": [[115, "complete-rows"]], "count_number_of_unique_answers": [[117, "count-number-of-unique-answers"]], "count_valid_answers_per_respondent": [[118, "count-valid-answers-per-respondent"]], "guess_missing_variable_ranges": [[119, "guess-missing-variable-ranges"]], "guess_missing_variable_types": [[120, "guess-missing-variable-types"]], "interpret_column_selection": [[121, "interpret-column-selection"]], "num_questions": [[123, "num-questions"]], "num_respondents": [[124, "num-respondents"]], "replace_variable_names": [[125, "replace-variable-names"]], "replace_variable_value_labels": [[126, "replace-variable-value-labels"]], "replace_variable_values": [[127, "replace-variable-values"]], "select_questions": [[129, "select-questions"]], "select_respondents": [[130, "select-respondents"]], "set_pyreadstat_meta_data": [[131, "set-pyreadstat-meta-data"]], "set_variable_labels": [[132, "set-variable-labels"]], "set_variable_types": [[133, "set-variable-types"]], "set_variable_value_lists": [[134, "set-variable-value-lists"]], "shape": [[135, "shape"]], "summarize": [[136, "summarize"]], "variable_info": [[137, "variable-info"]], "SurveyFeatureFactory": [[138, "surveyfeaturefactory"]], "SurveyFeatureFactoryDecorator": [[141, "surveyfeaturefactorydecorator"]], "SurveyFeatureFactory_CherryPicker": [[144, "surveyfeaturefactory-cherrypicker"]], "set_factoryfunc": [[147, "set-factoryfunc"]], "SurveyTangles": [[148, "surveytangles"]], "change_agreement": [[149, "change-agreement"]], "feature_system": [[150, "feature-system"]], "initialize_search": [[151, "initialize-search"]], "ordered_metadata": [[152, "ordered-metadata"]], "search": [[153, "search"]], "sepcified_features": [[154, "sepcified-features"]], "typical_answers": [[156, "typical-answers"]], "valid_agreement_lower_bound": [[157, "valid-agreement-lower-bound"]], "SurveyVariable": [[158, "surveyvariable"]], "add_values": [[159, "add-values"]], "all_values_as_list": [[160, "all-values-as-list"]], "create_values": [[161, "create-values"]], "invalid_values_as_list": [[162, "invalid-values-as-list"]], "is_nominal_type": [[163, "is-nominal-type"]], "is_numeric_type": [[164, "is-numeric-type"]], "is_ordinal_type": [[165, "is-ordinal-type"]], "is_valid_type": [[166, "is-valid-type"]], "is_valid_type_name": [[167, "is-valid-type-name"]], "replace_values": [[168, "replace-values"]], "set_value_labels": [[169, "set-value-labels"]], "set_values": [[170, "set-values"]], "to_row": [[171, "to-row"]], "valid_values_as_list": [[172, "valid-values-as-list"]], "value_class": [[173, "value-class"]], "SurveyVariableValues": [[174, "surveyvariablevalues"]], "TangleSweepFeatureSys": [[178, "tanglesweepfeaturesys"]], "all_oriented_sep_ids": [[179, "all-oriented-sep-ids"]], "lower_agreement": [[183, "lower-agreement"]], "original_sep_ids": [[184, "original-sep-ids"]], "UnionOfIntervals": [[189, "unionofintervals"]], "binary_unique_value_features": [[190, "binary-unique-value-features"]], "extensive_numericvar_features": [[191, "extensive-numericvar-features"]], "feats2seps_invalids_to_both_sides": [[192, "feats2seps-invalids-to-both-sides"]], "nominalvar_features_all_cats": [[193, "nominalvar-features-all-cats"]], "numericvar_features_inside_regular_bins": [[194, "numericvar-features-inside-regular-bins"]], "numericvar_features_split_regular_ge": [[195, "numericvar-features-split-regular-ge"]], "ordinalvar_features_ge_all_splits": [[196, "ordinalvar-features-ge-all-splits"]], "search_tangles": [[197, "search-tangles"]], "search_tangles_uncrossed": [[198, "search-tangles-uncrossed"]], "simple_unique_value_features": [[199, "simple-unique-value-features"]], "tangles.guiding": [[200, "module-tangles.guiding"]], "get_tangle_by_path": [[201, "get-tangle-by-path"]], "guided_tangle": [[202, "guided-tangle"]], "is_guiding": [[203, "is-guiding"]], "tangles.search": [[204, "module-tangles.search"]], "tangles.search.extending_tangles": [[205, "module-tangles.search.extending_tangles"]], "ExtendingTangles": [[206, "extendingtangles"]], "extend_tangles": [[207, "extend-tangles"]], "tangles.search.progress": [[208, "module-tangles.search.progress"]], "DefaultProgressCallback": [[209, "defaultprogresscallback"]], "tangles.separations": [[210, "module-tangles.separations"]], "FeatureSystem": [[211, "featuresystem"]], "add_features": [[213, "add-features"]], "add_seps": [[214, "add-seps"], [236, "add-seps"], [252, "add-seps"]], "all_feature_ids": [[215, "all-feature-ids"]], "all_sep_ids": [[216, "all-sep-ids"], [237, "all-sep-ids"], [253, "all-sep-ids"]], "assemble_meta_info": [[217, "assemble-meta-info"], [238, "assemble-meta-info"], [254, "assemble-meta-info"]], "compute_infimum": [[218, "compute-infimum"], [239, "compute-infimum"], [255, "compute-infimum"]], "crossing_seps": [[219, "crossing-seps"], [240, "crossing-seps"], [256, "crossing-seps"]], "feature_metadata": [[220, "feature-metadata"]], "get_corners": [[221, "get-corners"], [241, "get-corners"], [257, "get-corners"]], "get_feature_ids": [[222, "get-feature-ids"]], "get_sep_ids": [[223, "get-sep-ids"], [242, "get-sep-ids"], [258, "get-sep-ids"]], "infimum_of_two": [[224, "infimum-of-two"], [243, "infimum-of-two"], [259, "infimum-of-two"]], "is_le": [[225, "is-le"], [244, "is-le"], [260, "is-le"]], "is_nested": [[226, "is-nested"], [245, "is-nested"], [261, "is-nested"]], "is_subset": [[227, "is-subset"]], "metadata_matrix": [[228, "metadata-matrix"], [246, "metadata-matrix"], [262, "metadata-matrix"]], "separation_metadata": [[229, "separation-metadata"], [247, "separation-metadata"], [263, "separation-metadata"]], "with_array": [[230, "with-array"], [248, "with-array"], [264, "with-array"]], "with_sparse_array": [[231, "with-sparse-array"], [249, "with-sparse-array"], [265, "with-sparse-array"]], "MetaData": [[232, "metadata"]], "append": [[233, "append"], [330, "append"]], "SetSeparationSystem": [[234, "setseparationsystem"]], "SetSeparationSystemBase": [[250, "setseparationsystembase"]], "SetSeparationSystemOrderFunc": [[266, "setseparationsystemorderfunc"]], "tangles.separations.atomic_sets": [[267, "module-tangles.separations.atomic_sets"]], "atomic_set_indicators": [[268, "atomic-set-indicators"]], "atomic_sets": [[269, "atomic-sets"]], "atomic_to_seps": [[270, "atomic-to-seps"]], "seps_to_atomic": [[271, "seps-to-atomic"]], "tangles.separations.finding": [[272, "module-tangles.separations.finding"]], "OrderFuncDerivative": [[273, "orderfuncderivative"]], "change_discrete_derivative": [[274, "change-discrete-derivative"], [300, "change-discrete-derivative"], [303, "change-discrete-derivative"], [306, "change-discrete-derivative"]], "discrete_derivative": [[275, "discrete-derivative"], [301, "discrete-derivative"], [304, "discrete-derivative"], [307, "discrete-derivative"]], "add_all_corners_of_features": [[276, "add-all-corners-of-features"]], "min_S_T_cut": [[277, "min-s-t-cut"]], "minimize_cut": [[278, "minimize-cut"]], "nodal_domains": [[279, "nodal-domains"]], "pca_features": [[280, "pca-features"]], "random_features": [[281, "random-features"]], "spectral_features": [[282, "spectral-features"]], "spectral_features_splitted": [[283, "spectral-features-splitted"]], "tangles.separations.util": [[284, "module-tangles.separations.util"]], "order_func_balance": [[285, "order-func-balance"]], "order_func_min_side_size": [[286, "order-func-min-side-size"]], "uncross_distinguishers": [[287, "uncross-distinguishers"]], "tangles.util": [[288, "module-tangles.util"]], "tangles.util.entropy": [[289, "module-tangles.util.entropy"]], "colsplit_mutual_information": [[290, "colsplit-mutual-information"]], "datapointwise_information_gains": [[291, "datapointwise-information-gains"]], "entropy": [[292, "entropy"]], "information_gain": [[293, "information-gain"]], "joint_entropy": [[294, "joint-entropy"]], "pairwise_mutual_information": [[295, "pairwise-mutual-information"]], "tangles.util.graph": [[296, "module-tangles.util.graph"]], "connected_component_indicators": [[297, "connected-component-indicators"]], "tangles.util.graph.cut_weight": [[298, "module-tangles.util.graph.cut_weight"]], "CutWeightOrder": [[299, "cutweightorder"]], "NCutOrder": [[302, "ncutorder"]], "RatioCutOrder": [[305, "ratiocutorder"]], "cut_weight_order": [[308, "cut-weight-order"]], "ncut_order": [[309, "ncut-order"]], "ratiocut_order": [[310, "ratiocut-order"]], "greedy_neighborhood": [[311, "greedy-neighborhood"]], "greedy_neighborhood_old": [[312, "greedy-neighborhood-old"]], "laplacian": [[313, "laplacian"]], "tangles.util.graph.minor": [[314, "module-tangles.util.graph.minor"]], "contract_graph": [[315, "contract-graph"]], "modularity_matrix": [[316, "modularity-matrix"]], "normalized_laplacian": [[317, "normalized-laplacian"]], "tangles.util.graph.similarity": [[318, "module-tangles.util.graph.similarity"]], "cosine_similarity": [[319, "cosine-similarity"]], "cosine_similarity_graph_csr_data": [[320, "cosine-similarity-graph-csr-data"]], "epsilon_neighborhood_graph": [[321, "epsilon-neighborhood-graph"]], "grid_distance_graph": [[322, "grid-distance-graph"]], "image_to_similarity_graph": [[323, "image-to-similarity-graph"]], "k_nearest_neighbors": [[324, "k-nearest-neighbors"]], "tangles.util.logic": [[325, "module-tangles.util.logic"]], "ConjunctiveNormalForm": [[326, "conjunctivenormalform"]], "DisjunctiveNormalForm": [[327, "disjunctivenormalform"]], "LogicTerm": [[328, "logicterm"]], "TextTerm": [[329, "textterm"]], "distribute": [[331, "distribute"]], "tangles.util.logic.sep_to_term": [[332, "module-tangles.util.logic.sep_to_term"]], "RecursionLogic": [[333, "recursionlogic"]], "simplify": [[334, "simplify"]], "tangles.util.logic.term": [[335, "module-tangles.util.logic.term"]], "SemanticTextTerm": [[336, "semantictextterm"]], "tangles.util.matrix_order": [[337, "module-tangles.util.matrix_order"]], "MatrixOrderSVD": [[338, "matrixordersvd"]], "Members": [[338, "members"]], "covariance_order": [[339, "covariance-order"]], "logdet_order": [[340, "logdet-order"]], "margin_order_matrix": [[341, "margin-order-matrix"]], "matrix_order": [[342, "matrix-order"]], "o_five": [[343, "o-five"]], "o_seven": [[344, "o-seven"]], "tangles.util.preprocessing": [[345, "module-tangles.util.preprocessing"]], "balance": [[346, "balance"]], "normalize_length": [[347, "normalize-length"]], "standardize": [[348, "standardize"]], "tangles.util.tree": [[349, "module-tangles.util.tree"]], "BinTreeNetworkX": [[350, "bintreenetworkx"]], "draw": [[351, "draw"]], "get_ids_from_label": [[352, "get-ids-from-label"]], "get_label": [[353, "get-label"]], "graph": [[354, "graph"]], "relabel": [[355, "relabel"]], "tst_layout": [[356, "tst-layout"]], "BinTreeNode": [[357, "bintreenode"]], "GraphNode": [[372, "graphnode"]], "TreeNode": [[373, "treenode"]], "plot_tree": [[374, "plot-tree"]], "print_node_label": [[375, "print-node-label"]], "tangles.util.ui": [[376, "module-tangles.util.ui"]], "SplitGraph": [[377, "splitgraph"]], "draw_ellipses": [[378, "draw-ellipses"]], "draw_side_and_boundary": [[379, "draw-side-and-boundary"]], "draw_stacked_circles": [[380, "draw-stacked-circles"]], "XYPicker": [[381, "xypicker"]], "show": [[382, "show"]], "update": [[383, "update"]], "plot_annotated": [[384, "plot-annotated"]], "wrap_annotation_func_ax": [[385, "wrap-annotation-func-ax"]], "Reference": [[386, "reference"]], "Mindsets - Survey Tangles": [[387, "mindsets-survey-tangles"]], "Preparing, Cleaning and Selecting Data": [[387, "preparing-cleaning-and-selecting-data"]], "A simple tangle analysis": [[387, "a-simple-tangle-analysis"]], "Summary": [[387, "summary"]], "Tutorials": [[388, "tutorials"]]}, "indexentries": {"module": [[1, "module-tangles"], [69, "module-tangles.agreement"], [75, "module-tangles.analysis"], [82, "module-tangles.convenience"], [200, "module-tangles.guiding"], [204, "module-tangles.search"], [205, "module-tangles.search.extending_tangles"], [208, "module-tangles.search.progress"], [210, "module-tangles.separations"], [267, "module-tangles.separations.atomic_sets"], [272, "module-tangles.separations.finding"], [284, "module-tangles.separations.util"], [288, "module-tangles.util"], [289, "module-tangles.util.entropy"], [296, "module-tangles.util.graph"], [298, "module-tangles.util.graph.cut_weight"], [314, "module-tangles.util.graph.minor"], [318, "module-tangles.util.graph.similarity"], [325, "module-tangles.util.logic"], [332, "module-tangles.util.logic.sep_to_term"], [335, "module-tangles.util.logic.term"], [337, "module-tangles.util.matrix_order"], [345, "module-tangles.util.preprocessing"], [349, "module-tangles.util.tree"], [376, "module-tangles.util.ui"]], "tangles": [[1, "module-tangles"]], "ftreenode (class in tangles)": [[2, "tangles.FTreeNode"]], "children() (tangles.ftreenode method)": [[3, "tangles.FTreeNode.children"]], "copy() (tangles.ftreenode method)": [[4, "tangles.FTreeNode.copy"]], "copy_subtree() (tangles.ftreenode method)": [[5, "tangles.FTreeNode.copy_subtree"]], "copy_subtree_into_children() (tangles.ftreenode method)": [[6, "tangles.FTreeNode.copy_subtree_into_children"]], "detach() (tangles.ftreenode method)": [[7, "tangles.FTreeNode.detach"]], "from_indicator_matrix() (tangles.ftreenode class method)": [[8, "tangles.FTreeNode.from_indicator_matrix"]], "is_leaf() (tangles.ftreenode method)": [[9, "tangles.FTreeNode.is_leaf"]], "leaves_in_subtree() (tangles.ftreenode method)": [[10, "tangles.FTreeNode.leaves_in_subtree"]], "level() (tangles.ftreenode method)": [[11, "tangles.FTreeNode.level"]], "level_in_subtree() (tangles.ftreenode method)": [[12, "tangles.FTreeNode.level_in_subtree"]], "path_from_root_indicator() (tangles.ftreenode method)": [[13, "tangles.FTreeNode.path_from_root_indicator"]], "set_left_child() (tangles.ftreenode method)": [[14, "tangles.FTreeNode.set_left_child"]], "set_right_child() (tangles.ftreenode method)": [[15, "tangles.FTreeNode.set_right_child"]], "to_indicator_matrix() (tangles.ftreenode static method)": [[16, "tangles.FTreeNode.to_indicator_matrix"]], "tangle (class in tangles)": [[17, "tangles.Tangle"]], "children() (tangles.tangle method)": [[18, "tangles.Tangle.children"]], "copy() (tangles.tangle method)": [[19, "tangles.Tangle.copy"]], "copy_subtree() (tangles.tangle method)": [[20, "tangles.Tangle.copy_subtree"]], "copy_subtree_into_children() (tangles.tangle method)": [[21, "tangles.Tangle.copy_subtree_into_children"]], "detach() (tangles.tangle method)": [[22, "tangles.Tangle.detach"]], "equal_data() (tangles.tangle method)": [[23, "tangles.Tangle.equal_data"]], "from_indicator_matrix() (tangles.tangle class method)": [[24, "tangles.Tangle.from_indicator_matrix"]], "is_leaf() (tangles.tangle method)": [[25, "tangles.Tangle.is_leaf"]], "leaves_in_subtree() (tangles.tangle method)": [[26, "tangles.Tangle.leaves_in_subtree"]], "level() (tangles.tangle method)": [[27, "tangles.Tangle.level"]], "level_in_subtree() (tangles.tangle method)": [[28, "tangles.Tangle.level_in_subtree"]], "open() (tangles.tangle method)": [[29, "tangles.Tangle.open"]], "path_from_root_indicator() (tangles.tangle method)": [[30, "tangles.Tangle.path_from_root_indicator"]], "set_left_child() (tangles.tangle method)": [[31, "tangles.Tangle.set_left_child"]], "set_right_child() (tangles.tangle method)": [[32, "tangles.Tangle.set_right_child"]], "to_indicator_matrix() (tangles.tangle static method)": [[33, "tangles.Tangle.to_indicator_matrix"]], "tanglesearchtree (class in tangles)": [[34, "tangles.TangleSearchTree"]], "get_efficient_distinguishers() (tangles.tanglesearchtree method)": [[35, "tangles.TangleSearchTree.get_efficient_distinguishers"]], "k_tangles() (tangles.tanglesearchtree method)": [[36, "tangles.TangleSearchTree.k_tangles"]], "limit (tangles.tanglesearchtree property)": [[37, "tangles.TangleSearchTree.limit"]], "load() (tangles.tanglesearchtree static method)": [[38, "tangles.TangleSearchTree.load"]], "maximal_tangles() (tangles.tanglesearchtree method)": [[39, "tangles.TangleSearchTree.maximal_tangles"]], "number_of_separations (tangles.tanglesearchtree property)": [[40, "tangles.TangleSearchTree.number_of_separations"]], "root (tangles.tanglesearchtree property)": [[41, "tangles.TangleSearchTree.root"]], "save() (tangles.tanglesearchtree method)": [[42, "tangles.TangleSearchTree.save"]], "search_tree() (tangles.tanglesearchtree method)": [[43, "tangles.TangleSearchTree.search_tree"]], "sep_ids (tangles.tanglesearchtree property)": [[44, "tangles.TangleSearchTree.sep_ids"]], "tangle_matrix() (tangles.tanglesearchtree method)": [[45, "tangles.TangleSearchTree.tangle_matrix"]], "tree_height_for_agreement() (tangles.tanglesearchtree method)": [[46, "tangles.TangleSearchTree.tree_height_for_agreement"]], "tanglesweep (class in tangles)": [[47, "tangles.TangleSweep"]], "append_separation() (tangles.tanglesweep method)": [[48, "tangles.TangleSweep.append_separation"]], "greedy_search() (tangles.tanglesweep method)": [[49, "tangles.TangleSweep.greedy_search"]], "insert_separation() (tangles.tanglesweep method)": [[50, "tangles.TangleSweep.insert_separation"]], "sweep_below() (tangles.tanglesweep method)": [[51, "tangles.TangleSweep.sweep_below"]], "sweep_one() (tangles.tanglesweep method)": [[52, "tangles.TangleSweep.sweep_one"]], "tree (tangles.tanglesweep property)": [[53, "tangles.TangleSweep.tree"]], "totedge (class in tangles)": [[54, "tangles.ToTEdge"]], "other_end() (tangles.totedge method)": [[55, "tangles.ToTEdge.other_end"]], "totnode (class in tangles)": [[56, "tangles.ToTNode"]], "degree() (tangles.totnode method)": [[57, "tangles.ToTNode.degree"]], "is_leaf() (tangles.totnode method)": [[58, "tangles.ToTNode.is_leaf"]], "neighbours (tangles.totnode property)": [[59, "tangles.ToTNode.neighbours"]], "set_label() (tangles.totnode method)": [[60, "tangles.ToTNode.set_label"]], "treeoftangles (class in tangles)": [[61, "tangles.TreeOfTangles"]], "any_node() (tangles.treeoftangles method)": [[62, "tangles.TreeOfTangles.any_node"]], "uncrossingsweep (class in tangles)": [[63, "tangles.UncrossingSweep"]], "create_tot() (tangles.uncrossingsweep method)": [[64, "tangles.UncrossingSweep.create_tot"]], "sweep_below() (tangles.uncrossingsweep method)": [[65, "tangles.UncrossingSweep.sweep_below"]], "sweep_one() (tangles.uncrossingsweep method)": [[66, "tangles.UncrossingSweep.sweep_one"]], "tangle_matrix() (tangles.uncrossingsweep method)": [[67, "tangles.UncrossingSweep.tangle_matrix"]], "tree (tangles.uncrossingsweep property)": [[68, "tangles.UncrossingSweep.tree"]], "tangles.agreement": [[69, "module-tangles.agreement"]], "agreementfunc (class in tangles.agreement)": [[70, "tangles.agreement.AgreementFunc"]], "agreementfuncbitarray (class in tangles.agreement)": [[71, "tangles.agreement.AgreementFuncBitarray"]], "agreementfuncbitarraybips (class in tangles.agreement)": [[72, "tangles.agreement.AgreementFuncBitarrayBips"]], "calculateagreement (class in tangles.agreement)": [[73, "tangles.agreement.CalculateAgreement"]], "agreement_func() (in module tangles)": [[74, "tangles.agreement_func"]], "tangles.analysis": [[75, "module-tangles.analysis"]], "coherence_levels() (in module tangles.analysis)": [[76, "tangles.analysis.coherence_levels"]], "complexity_levels() (in module tangles.analysis)": [[77, "tangles.analysis.complexity_levels"]], "hard_clustering_tuebingen() (in module tangles.analysis)": [[78, "tangles.analysis.hard_clustering_tuebingen"]], "soft_clustering_tuebingen() (in module tangles.analysis)": [[79, "tangles.analysis.soft_clustering_tuebingen"]], "tangle_score() (in module tangles.analysis)": [[80, "tangles.analysis.tangle_score"]], "visibility() (in module tangles.analysis)": [[81, "tangles.analysis.visibility"]], "tangles.convenience": [[82, "module-tangles.convenience"]], "nominalvariablevalues (class in tangles.convenience)": [[83, "tangles.convenience.NominalVariableValues"]], "invert_op() (tangles.convenience.nominalvariablevalues static method)": [[84, "tangles.convenience.NominalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.nominalvariablevalues method)": [[85, "tangles.convenience.NominalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.nominalvariablevalues method)": [[86, "tangles.convenience.NominalVariableValues.update_values_for_specification"]], "numericalvariablevalues (class in tangles.convenience)": [[87, "tangles.convenience.NumericalVariableValues"]], "invert_op() (tangles.convenience.numericalvariablevalues static method)": [[88, "tangles.convenience.NumericalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.numericalvariablevalues method)": [[89, "tangles.convenience.NumericalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.numericalvariablevalues method)": [[90, "tangles.convenience.NumericalVariableValues.update_values_for_specification"]], "orderfunctiono1 (class in tangles.convenience)": [[91, "tangles.convenience.OrderFunctionO1"]], "orderfunctiono1biased (class in tangles.convenience)": [[92, "tangles.convenience.OrderFunctionO1biased"]], "orderfunctiono2 (class in tangles.convenience)": [[93, "tangles.convenience.OrderFunctionO2"]], "orderfunctiono3 (class in tangles.convenience)": [[94, "tangles.convenience.OrderFunctionO3"]], "orderfunctiono4 (class in tangles.convenience)": [[95, "tangles.convenience.OrderFunctionO4"]], "ordinalvariablevalues (class in tangles.convenience)": [[96, "tangles.convenience.OrdinalVariableValues"]], "invert_op() (tangles.convenience.ordinalvariablevalues static method)": [[97, "tangles.convenience.OrdinalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.ordinalvariablevalues method)": [[98, "tangles.convenience.OrdinalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.ordinalvariablevalues method)": [[99, "tangles.convenience.OrdinalVariableValues.update_values_for_specification"]], "simplesurveyfeaturefactory (class in tangles.convenience)": [[100, "tangles.convenience.SimpleSurveyFeatureFactory"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory method)": [[101, "tangles.convenience.SimpleSurveyFeatureFactory.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory method)": [[102, "tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesbothsides (class in tangles.convenience)": [[103, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesbothsides method)": [[104, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesbothsides method)": [[105, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesimplicit (class in tangles.convenience)": [[106, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesimplicit method)": [[107, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesimplicit method)": [[108, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesownfeatures (class in tangles.convenience)": [[109, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesownfeatures method)": [[110, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesownfeatures method)": [[111, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col"]], "survey (class in tangles.convenience)": [[112, "tangles.convenience.Survey"]], "__getitem__() (tangles.convenience.survey method)": [[113, "tangles.convenience.Survey.__getitem__"]], "check_variables() (tangles.convenience.survey method)": [[114, "tangles.convenience.Survey.check_variables"]], "complete_rows() (tangles.convenience.survey method)": [[115, "tangles.convenience.Survey.complete_rows"]], "copy() (tangles.convenience.survey method)": [[116, "tangles.convenience.Survey.copy"]], "count_number_of_unique_answers() (tangles.convenience.survey method)": [[117, "tangles.convenience.Survey.count_number_of_unique_answers"]], "count_valid_answers_per_respondent() (tangles.convenience.survey method)": [[118, "tangles.convenience.Survey.count_valid_answers_per_respondent"]], "guess_missing_variable_ranges() (tangles.convenience.survey method)": [[119, "tangles.convenience.Survey.guess_missing_variable_ranges"]], "guess_missing_variable_types() (tangles.convenience.survey method)": [[120, "tangles.convenience.Survey.guess_missing_variable_types"]], "interpret_column_selection() (tangles.convenience.survey method)": [[121, "tangles.convenience.Survey.interpret_column_selection"]], "load() (tangles.convenience.survey static method)": [[122, "tangles.convenience.Survey.load"]], "num_questions (tangles.convenience.survey property)": [[123, "tangles.convenience.Survey.num_questions"]], "num_respondents (tangles.convenience.survey property)": [[124, "tangles.convenience.Survey.num_respondents"]], "replace_variable_names() (tangles.convenience.survey method)": [[125, "tangles.convenience.Survey.replace_variable_names"]], "replace_variable_value_labels() (tangles.convenience.survey method)": [[126, "tangles.convenience.Survey.replace_variable_value_labels"]], "replace_variable_values() (tangles.convenience.survey method)": [[127, "tangles.convenience.Survey.replace_variable_values"]], "save() (tangles.convenience.survey method)": [[128, "tangles.convenience.Survey.save"]], "select_questions() (tangles.convenience.survey method)": [[129, "tangles.convenience.Survey.select_questions"]], "select_respondents() (tangles.convenience.survey method)": [[130, "tangles.convenience.Survey.select_respondents"]], "set_pyreadstat_meta_data() (tangles.convenience.survey method)": [[131, "tangles.convenience.Survey.set_pyreadstat_meta_data"]], "set_variable_labels() (tangles.convenience.survey method)": [[132, "tangles.convenience.Survey.set_variable_labels"]], "set_variable_types() (tangles.convenience.survey method)": [[133, "tangles.convenience.Survey.set_variable_types"]], "set_variable_value_lists() (tangles.convenience.survey method)": [[134, "tangles.convenience.Survey.set_variable_value_lists"]], "shape (tangles.convenience.survey property)": [[135, "tangles.convenience.Survey.shape"]], "summarize() (tangles.convenience.survey method)": [[136, "tangles.convenience.Survey.summarize"]], "variable_info() (tangles.convenience.survey method)": [[137, "tangles.convenience.Survey.variable_info"]], "surveyfeaturefactory (class in tangles.convenience)": [[138, "tangles.convenience.SurveyFeatureFactory"]], "create_features() (tangles.convenience.surveyfeaturefactory method)": [[139, "tangles.convenience.SurveyFeatureFactory.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactory method)": [[140, "tangles.convenience.SurveyFeatureFactory.create_features_for_single_col"]], "surveyfeaturefactorydecorator (class in tangles.convenience)": [[141, "tangles.convenience.SurveyFeatureFactoryDecorator"]], "create_features() (tangles.convenience.surveyfeaturefactorydecorator method)": [[142, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactorydecorator method)": [[143, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col"]], "surveyfeaturefactory_cherrypicker (class in tangles.convenience)": [[144, "tangles.convenience.SurveyFeatureFactory_CherryPicker"]], "create_features() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[145, "tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[146, "tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col"]], "set_factoryfunc() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[147, "tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc"]], "surveytangles (class in tangles.convenience)": [[148, "tangles.convenience.SurveyTangles"]], "change_agreement() (tangles.convenience.surveytangles method)": [[149, "tangles.convenience.SurveyTangles.change_agreement"]], "feature_system (tangles.convenience.surveytangles property)": [[150, "tangles.convenience.SurveyTangles.feature_system"]], "initialize_search() (tangles.convenience.surveytangles method)": [[151, "tangles.convenience.SurveyTangles.initialize_search"]], "ordered_metadata() (tangles.convenience.surveytangles method)": [[152, "tangles.convenience.SurveyTangles.ordered_metadata"]], "search() (tangles.convenience.surveytangles class method)": [[153, "tangles.convenience.SurveyTangles.search"]], "sepcified_features() (tangles.convenience.surveytangles method)": [[154, "tangles.convenience.SurveyTangles.sepcified_features"]], "tangle_matrix() (tangles.convenience.surveytangles method)": [[155, "tangles.convenience.SurveyTangles.tangle_matrix"]], "typical_answers() (tangles.convenience.surveytangles method)": [[156, "tangles.convenience.SurveyTangles.typical_answers"]], "valid_agreement_lower_bound (tangles.convenience.surveytangles property)": [[157, "tangles.convenience.SurveyTangles.valid_agreement_lower_bound"]], "surveyvariable (class in tangles.convenience)": [[158, "tangles.convenience.SurveyVariable"]], "add_values() (tangles.convenience.surveyvariable method)": [[159, "tangles.convenience.SurveyVariable.add_values"]], "all_values_as_list() (tangles.convenience.surveyvariable method)": [[160, "tangles.convenience.SurveyVariable.all_values_as_list"]], "create_values() (tangles.convenience.surveyvariable method)": [[161, "tangles.convenience.SurveyVariable.create_values"]], "invalid_values_as_list() (tangles.convenience.surveyvariable method)": [[162, "tangles.convenience.SurveyVariable.invalid_values_as_list"]], "is_nominal_type() (tangles.convenience.surveyvariable method)": [[163, "tangles.convenience.SurveyVariable.is_nominal_type"]], "is_numeric_type() (tangles.convenience.surveyvariable method)": [[164, "tangles.convenience.SurveyVariable.is_numeric_type"]], "is_ordinal_type() (tangles.convenience.surveyvariable method)": [[165, "tangles.convenience.SurveyVariable.is_ordinal_type"]], "is_valid_type() (tangles.convenience.surveyvariable method)": [[166, "tangles.convenience.SurveyVariable.is_valid_type"]], "is_valid_type_name() (tangles.convenience.surveyvariable static method)": [[167, "tangles.convenience.SurveyVariable.is_valid_type_name"]], "replace_values() (tangles.convenience.surveyvariable method)": [[168, "tangles.convenience.SurveyVariable.replace_values"]], "set_value_labels() (tangles.convenience.surveyvariable method)": [[169, "tangles.convenience.SurveyVariable.set_value_labels"]], "set_values() (tangles.convenience.surveyvariable method)": [[170, "tangles.convenience.SurveyVariable.set_values"]], "to_row() (tangles.convenience.surveyvariable method)": [[171, "tangles.convenience.SurveyVariable.to_row"]], "valid_values_as_list() (tangles.convenience.surveyvariable method)": [[172, "tangles.convenience.SurveyVariable.valid_values_as_list"]], "value_class() (tangles.convenience.surveyvariable method)": [[173, "tangles.convenience.SurveyVariable.value_class"]], "surveyvariablevalues (class in tangles.convenience)": [[174, "tangles.convenience.SurveyVariableValues"]], "invert_op() (tangles.convenience.surveyvariablevalues static method)": [[175, "tangles.convenience.SurveyVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.surveyvariablevalues method)": [[176, "tangles.convenience.SurveyVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.surveyvariablevalues method)": [[177, "tangles.convenience.SurveyVariableValues.update_values_for_specification"]], "tanglesweepfeaturesys (class in tangles.convenience)": [[178, "tangles.convenience.TangleSweepFeatureSys"]], "all_oriented_sep_ids (tangles.convenience.tanglesweepfeaturesys property)": [[179, "tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids"]], "append_separation() (tangles.convenience.tanglesweepfeaturesys method)": [[180, "tangles.convenience.TangleSweepFeatureSys.append_separation"]], "greedy_search() (tangles.convenience.tanglesweepfeaturesys method)": [[181, "tangles.convenience.TangleSweepFeatureSys.greedy_search"]], "insert_separation() (tangles.convenience.tanglesweepfeaturesys method)": [[182, "tangles.convenience.TangleSweepFeatureSys.insert_separation"]], "lower_agreement() (tangles.convenience.tanglesweepfeaturesys method)": [[183, "tangles.convenience.TangleSweepFeatureSys.lower_agreement"]], "original_sep_ids (tangles.convenience.tanglesweepfeaturesys property)": [[184, "tangles.convenience.TangleSweepFeatureSys.original_sep_ids"]], "sweep_below() (tangles.convenience.tanglesweepfeaturesys method)": [[185, "tangles.convenience.TangleSweepFeatureSys.sweep_below"]], "sweep_one() (tangles.convenience.tanglesweepfeaturesys method)": [[186, "tangles.convenience.TangleSweepFeatureSys.sweep_one"]], "tangle_matrix() (tangles.convenience.tanglesweepfeaturesys method)": [[187, "tangles.convenience.TangleSweepFeatureSys.tangle_matrix"]], "tree (tangles.convenience.tanglesweepfeaturesys property)": [[188, "tangles.convenience.TangleSweepFeatureSys.tree"]], "unionofintervals (class in tangles.convenience)": [[189, "tangles.convenience.UnionOfIntervals"]], "binary_unique_value_features() (in module tangles.convenience)": [[190, "tangles.convenience.binary_unique_value_features"]], "extensive_numericvar_features() (in module tangles.convenience)": [[191, "tangles.convenience.extensive_numericvar_features"]], "feats2seps_invalids_to_both_sides() (in module tangles.convenience)": [[192, "tangles.convenience.feats2seps_invalids_to_both_sides"]], "nominalvar_features_all_cats() (in module tangles.convenience)": [[193, "tangles.convenience.nominalvar_features_all_cats"]], "numericvar_features_inside_regular_bins() (in module tangles.convenience)": [[194, "tangles.convenience.numericvar_features_inside_regular_bins"]], "numericvar_features_split_regular_ge() (in module tangles.convenience)": [[195, "tangles.convenience.numericvar_features_split_regular_ge"]], "ordinalvar_features_ge_all_splits() (in module tangles.convenience)": [[196, "tangles.convenience.ordinalvar_features_ge_all_splits"]], "search_tangles() (in module tangles.convenience)": [[197, "tangles.convenience.search_tangles"]], "search_tangles_uncrossed() (in module tangles.convenience)": [[198, "tangles.convenience.search_tangles_uncrossed"]], "simple_unique_value_features() (in module tangles.convenience)": [[199, "tangles.convenience.simple_unique_value_features"]], "tangles.guiding": [[200, "module-tangles.guiding"]], "get_tangle_by_path() (in module tangles.guiding)": [[201, "tangles.guiding.get_tangle_by_path"]], "guided_tangle() (in module tangles.guiding)": [[202, "tangles.guiding.guided_tangle"]], "is_guiding() (in module tangles.guiding)": [[203, "tangles.guiding.is_guiding"]], "tangles.search": [[204, "module-tangles.search"]], "tangles.search.extending_tangles": [[205, "module-tangles.search.extending_tangles"]], "extendingtangles (class in tangles.search.extending_tangles)": [[206, "tangles.search.extending_tangles.ExtendingTangles"]], "extend_tangles() (tangles.search.extending_tangles.extendingtangles method)": [[207, "tangles.search.extending_tangles.ExtendingTangles.extend_tangles"]], "tangles.search.progress": [[208, "module-tangles.search.progress"]], "defaultprogresscallback (class in tangles.search.progress)": [[209, "tangles.search.progress.DefaultProgressCallback"]], "tangles.separations": [[210, "module-tangles.separations"]], "featuresystem (class in tangles.separations)": [[211, "tangles.separations.FeatureSystem"]], "__getitem__() (tangles.separations.featuresystem method)": [[212, "tangles.separations.FeatureSystem.__getitem__"]], "add_features() (tangles.separations.featuresystem method)": [[213, "tangles.separations.FeatureSystem.add_features"]], "add_seps() (tangles.separations.featuresystem method)": [[214, "tangles.separations.FeatureSystem.add_seps"]], "all_feature_ids() (tangles.separations.featuresystem method)": [[215, "tangles.separations.FeatureSystem.all_feature_ids"]], "all_sep_ids() (tangles.separations.featuresystem method)": [[216, "tangles.separations.FeatureSystem.all_sep_ids"]], "assemble_meta_info() (tangles.separations.featuresystem method)": [[217, "tangles.separations.FeatureSystem.assemble_meta_info"]], "compute_infimum() (tangles.separations.featuresystem method)": [[218, "tangles.separations.FeatureSystem.compute_infimum"]], "crossing_seps() (tangles.separations.featuresystem method)": [[219, "tangles.separations.FeatureSystem.crossing_seps"]], "feature_metadata() (tangles.separations.featuresystem method)": [[220, "tangles.separations.FeatureSystem.feature_metadata"]], "get_corners() (tangles.separations.featuresystem method)": [[221, "tangles.separations.FeatureSystem.get_corners"]], "get_feature_ids() (tangles.separations.featuresystem method)": [[222, "tangles.separations.FeatureSystem.get_feature_ids"]], "get_sep_ids() (tangles.separations.featuresystem method)": [[223, "tangles.separations.FeatureSystem.get_sep_ids"]], "infimum_of_two() (tangles.separations.featuresystem method)": [[224, "tangles.separations.FeatureSystem.infimum_of_two"]], "is_le() (tangles.separations.featuresystem method)": [[225, "tangles.separations.FeatureSystem.is_le"]], "is_nested() (tangles.separations.featuresystem method)": [[226, "tangles.separations.FeatureSystem.is_nested"]], "is_subset() (tangles.separations.featuresystem method)": [[227, "tangles.separations.FeatureSystem.is_subset"]], "metadata_matrix() (tangles.separations.featuresystem method)": [[228, "tangles.separations.FeatureSystem.metadata_matrix"]], "separation_metadata() (tangles.separations.featuresystem method)": [[229, "tangles.separations.FeatureSystem.separation_metadata"]], "with_array() (tangles.separations.featuresystem class method)": [[230, "tangles.separations.FeatureSystem.with_array"]], "with_sparse_array() (tangles.separations.featuresystem class method)": [[231, "tangles.separations.FeatureSystem.with_sparse_array"]], "metadata (class in tangles.separations)": [[232, "tangles.separations.MetaData"]], "append() (tangles.separations.metadata method)": [[233, "tangles.separations.MetaData.append"]], "setseparationsystem (class in tangles.separations)": [[234, "tangles.separations.SetSeparationSystem"]], "__getitem__() (tangles.separations.setseparationsystem method)": [[235, "tangles.separations.SetSeparationSystem.__getitem__"]], "add_seps() (tangles.separations.setseparationsystem method)": [[236, "tangles.separations.SetSeparationSystem.add_seps"]], "all_sep_ids() (tangles.separations.setseparationsystem method)": [[237, "tangles.separations.SetSeparationSystem.all_sep_ids"]], "assemble_meta_info() (tangles.separations.setseparationsystem method)": [[238, "tangles.separations.SetSeparationSystem.assemble_meta_info"]], "compute_infimum() (tangles.separations.setseparationsystem method)": [[239, "tangles.separations.SetSeparationSystem.compute_infimum"]], "crossing_seps() (tangles.separations.setseparationsystem method)": [[240, "tangles.separations.SetSeparationSystem.crossing_seps"]], "get_corners() (tangles.separations.setseparationsystem method)": [[241, "tangles.separations.SetSeparationSystem.get_corners"]], "get_sep_ids() (tangles.separations.setseparationsystem method)": [[242, "tangles.separations.SetSeparationSystem.get_sep_ids"]], "infimum_of_two() (tangles.separations.setseparationsystem method)": [[243, "tangles.separations.SetSeparationSystem.infimum_of_two"]], "is_le() (tangles.separations.setseparationsystem method)": [[244, "tangles.separations.SetSeparationSystem.is_le"]], "is_nested() (tangles.separations.setseparationsystem method)": [[245, "tangles.separations.SetSeparationSystem.is_nested"]], "metadata_matrix() (tangles.separations.setseparationsystem method)": [[246, "tangles.separations.SetSeparationSystem.metadata_matrix"]], "separation_metadata() (tangles.separations.setseparationsystem method)": [[247, "tangles.separations.SetSeparationSystem.separation_metadata"]], "with_array() (tangles.separations.setseparationsystem class method)": [[248, "tangles.separations.SetSeparationSystem.with_array"]], "with_sparse_array() (tangles.separations.setseparationsystem class method)": [[249, "tangles.separations.SetSeparationSystem.with_sparse_array"]], "setseparationsystembase (class in tangles.separations)": [[250, "tangles.separations.SetSeparationSystemBase"]], "__getitem__() (tangles.separations.setseparationsystembase method)": [[251, "tangles.separations.SetSeparationSystemBase.__getitem__"]], "add_seps() (tangles.separations.setseparationsystembase method)": [[252, "tangles.separations.SetSeparationSystemBase.add_seps"]], "all_sep_ids() (tangles.separations.setseparationsystembase method)": [[253, "tangles.separations.SetSeparationSystemBase.all_sep_ids"]], "assemble_meta_info() (tangles.separations.setseparationsystembase method)": [[254, "tangles.separations.SetSeparationSystemBase.assemble_meta_info"]], "compute_infimum() (tangles.separations.setseparationsystembase method)": [[255, "tangles.separations.SetSeparationSystemBase.compute_infimum"]], "crossing_seps() (tangles.separations.setseparationsystembase method)": [[256, "tangles.separations.SetSeparationSystemBase.crossing_seps"]], "get_corners() (tangles.separations.setseparationsystembase method)": [[257, "tangles.separations.SetSeparationSystemBase.get_corners"]], "get_sep_ids() (tangles.separations.setseparationsystembase method)": [[258, "tangles.separations.SetSeparationSystemBase.get_sep_ids"]], "infimum_of_two() (tangles.separations.setseparationsystembase method)": [[259, "tangles.separations.SetSeparationSystemBase.infimum_of_two"]], "is_le() (tangles.separations.setseparationsystembase method)": [[260, "tangles.separations.SetSeparationSystemBase.is_le"]], "is_nested() (tangles.separations.setseparationsystembase method)": [[261, "tangles.separations.SetSeparationSystemBase.is_nested"]], "metadata_matrix() (tangles.separations.setseparationsystembase method)": [[262, "tangles.separations.SetSeparationSystemBase.metadata_matrix"]], "separation_metadata() (tangles.separations.setseparationsystembase method)": [[263, "tangles.separations.SetSeparationSystemBase.separation_metadata"]], "with_array() (tangles.separations.setseparationsystembase class method)": [[264, "tangles.separations.SetSeparationSystemBase.with_array"]], "with_sparse_array() (tangles.separations.setseparationsystembase class method)": [[265, "tangles.separations.SetSeparationSystemBase.with_sparse_array"]], "setseparationsystemorderfunc (class in tangles.separations)": [[266, "tangles.separations.SetSeparationSystemOrderFunc"]], "tangles.separations.atomic_sets": [[267, "module-tangles.separations.atomic_sets"]], "atomic_set_indicators() (in module tangles.separations.atomic_sets)": [[268, "tangles.separations.atomic_sets.atomic_set_indicators"]], "atomic_sets() (in module tangles.separations.atomic_sets)": [[269, "tangles.separations.atomic_sets.atomic_sets"]], "atomic_to_seps() (in module tangles.separations.atomic_sets)": [[270, "tangles.separations.atomic_sets.atomic_to_seps"]], "seps_to_atomic() (in module tangles.separations.atomic_sets)": [[271, "tangles.separations.atomic_sets.seps_to_atomic"]], "tangles.separations.finding": [[272, "module-tangles.separations.finding"]], "orderfuncderivative (class in tangles.separations.finding)": [[273, "tangles.separations.finding.OrderFuncDerivative"]], "change_discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[274, "tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative"]], "discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[275, "tangles.separations.finding.OrderFuncDerivative.discrete_derivative"]], "add_all_corners_of_features() (in module tangles.separations.finding)": [[276, "tangles.separations.finding.add_all_corners_of_features"]], "min_s_t_cut() (in module tangles.separations.finding)": [[277, "tangles.separations.finding.min_S_T_cut"]], "minimize_cut() (in module tangles.separations.finding)": [[278, "tangles.separations.finding.minimize_cut"]], "nodal_domains() (in module tangles.separations.finding)": [[279, "tangles.separations.finding.nodal_domains"]], "pca_features() (in module tangles.separations.finding)": [[280, "tangles.separations.finding.pca_features"]], "random_features() (in module tangles.separations.finding)": [[281, "tangles.separations.finding.random_features"]], "spectral_features() (in module tangles.separations.finding)": [[282, "tangles.separations.finding.spectral_features"]], "spectral_features_splitted() (in module tangles.separations.finding)": [[283, "tangles.separations.finding.spectral_features_splitted"]], "tangles.separations.util": [[284, "module-tangles.separations.util"]], "order_func_balance() (in module tangles.separations.util)": [[285, "tangles.separations.util.order_func_balance"]], "order_func_min_side_size() (in module tangles.separations.util)": [[286, "tangles.separations.util.order_func_min_side_size"]], "uncross_distinguishers() (in module tangles)": [[287, "tangles.uncross_distinguishers"]], "tangles.util": [[288, "module-tangles.util"]], "tangles.util.entropy": [[289, "module-tangles.util.entropy"]], "colsplit_mutual_information() (in module tangles.util.entropy)": [[290, "tangles.util.entropy.colsplit_mutual_information"]], "datapointwise_information_gains() (in module tangles.util.entropy)": [[291, "tangles.util.entropy.datapointwise_information_gains"]], "entropy() (in module tangles.util.entropy)": [[292, "tangles.util.entropy.entropy"]], "information_gain() (in module tangles.util.entropy)": [[293, "tangles.util.entropy.information_gain"]], "joint_entropy() (in module tangles.util.entropy)": [[294, "tangles.util.entropy.joint_entropy"]], "pairwise_mutual_information() (in module tangles.util.entropy)": [[295, "tangles.util.entropy.pairwise_mutual_information"]], "tangles.util.graph": [[296, "module-tangles.util.graph"]], "connected_component_indicators() (in module tangles.util.graph)": [[297, "tangles.util.graph.connected_component_indicators"]], "tangles.util.graph.cut_weight": [[298, "module-tangles.util.graph.cut_weight"]], "cutweightorder (class in tangles.util.graph.cut_weight)": [[299, "tangles.util.graph.cut_weight.CutWeightOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[300, "tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[301, "tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative"]], "ncutorder (class in tangles.util.graph.cut_weight)": [[302, "tangles.util.graph.cut_weight.NCutOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[303, "tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[304, "tangles.util.graph.cut_weight.NCutOrder.discrete_derivative"]], "ratiocutorder (class in tangles.util.graph.cut_weight)": [[305, "tangles.util.graph.cut_weight.RatioCutOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[306, "tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[307, "tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative"]], "cut_weight_order() (in module tangles.util.graph.cut_weight)": [[308, "tangles.util.graph.cut_weight.cut_weight_order"]], "ncut_order() (in module tangles.util.graph.cut_weight)": [[309, "tangles.util.graph.cut_weight.ncut_order"]], "ratiocut_order() (in module tangles.util.graph.cut_weight)": [[310, "tangles.util.graph.cut_weight.ratiocut_order"]], "greedy_neighborhood() (in module tangles.util.graph)": [[311, "tangles.util.graph.greedy_neighborhood"]], "greedy_neighborhood_old() (in module tangles.util.graph)": [[312, "tangles.util.graph.greedy_neighborhood_old"]], "laplacian() (in module tangles.util.graph)": [[313, "tangles.util.graph.laplacian"]], "tangles.util.graph.minor": [[314, "module-tangles.util.graph.minor"]], "contract_graph() (in module tangles.util.graph.minor)": [[315, "tangles.util.graph.minor.contract_graph"]], "modularity_matrix() (in module tangles.util.graph)": [[316, "tangles.util.graph.modularity_matrix"]], "normalized_laplacian() (in module tangles.util.graph)": [[317, "tangles.util.graph.normalized_laplacian"]], "tangles.util.graph.similarity": [[318, "module-tangles.util.graph.similarity"]], "cosine_similarity() (in module tangles.util.graph.similarity)": [[319, "tangles.util.graph.similarity.cosine_similarity"]], "cosine_similarity_graph_csr_data() (in module tangles.util.graph.similarity)": [[320, "tangles.util.graph.similarity.cosine_similarity_graph_csr_data"]], "epsilon_neighborhood_graph() (in module tangles.util.graph.similarity)": [[321, "tangles.util.graph.similarity.epsilon_neighborhood_graph"]], "grid_distance_graph() (in module tangles.util.graph.similarity)": [[322, "tangles.util.graph.similarity.grid_distance_graph"]], "image_to_similarity_graph() (in module tangles.util.graph.similarity)": [[323, "tangles.util.graph.similarity.image_to_similarity_graph"]], "k_nearest_neighbors() (in module tangles.util.graph.similarity)": [[324, "tangles.util.graph.similarity.k_nearest_neighbors"]], "tangles.util.logic": [[325, "module-tangles.util.logic"]], "conjunctivenormalform (class in tangles.util.logic)": [[326, "tangles.util.logic.ConjunctiveNormalForm"]], "disjunctivenormalform (class in tangles.util.logic)": [[327, "tangles.util.logic.DisjunctiveNormalForm"]], "logicterm (class in tangles.util.logic)": [[328, "tangles.util.logic.LogicTerm"]], "textterm (class in tangles.util.logic)": [[329, "tangles.util.logic.TextTerm"]], "append() (in module tangles.util.logic)": [[330, "tangles.util.logic.append"]], "distribute() (in module tangles.util.logic)": [[331, "tangles.util.logic.distribute"]], "tangles.util.logic.sep_to_term": [[332, "module-tangles.util.logic.sep_to_term"]], "recursionlogic (class in tangles.util.logic.sep_to_term)": [[333, "tangles.util.logic.sep_to_term.RecursionLogic"]], "simplify() (in module tangles.util.logic)": [[334, "tangles.util.logic.simplify"]], "tangles.util.logic.term": [[335, "module-tangles.util.logic.term"]], "semantictextterm (class in tangles.util.logic.term)": [[336, "tangles.util.logic.term.SemanticTextTerm"]], "tangles.util.matrix_order": [[337, "module-tangles.util.matrix_order"]], "matrixordersvd (class in tangles.util.matrix_order)": [[338, "tangles.util.matrix_order.MatrixOrderSVD"]], "covariance_order() (in module tangles.util.matrix_order)": [[339, "tangles.util.matrix_order.covariance_order"]], "logdet_order() (in module tangles.util.matrix_order)": [[340, "tangles.util.matrix_order.logdet_order"]], "margin_order_matrix() (in module tangles.util.matrix_order)": [[341, "tangles.util.matrix_order.margin_order_matrix"]], "matrix_order() (in module tangles.util.matrix_order)": [[342, "tangles.util.matrix_order.matrix_order"]], "o_five() (in module tangles.util.matrix_order)": [[343, "tangles.util.matrix_order.o_five"]], "o_seven() (in module tangles.util.matrix_order)": [[344, "tangles.util.matrix_order.o_seven"]], "tangles.util.preprocessing": [[345, "module-tangles.util.preprocessing"]], "balance() (in module tangles.util.preprocessing)": [[346, "tangles.util.preprocessing.balance"]], "normalize_length() (in module tangles.util.preprocessing)": [[347, "tangles.util.preprocessing.normalize_length"]], "standardize() (in module tangles.util.preprocessing)": [[348, "tangles.util.preprocessing.standardize"]], "tangles.util.tree": [[349, "module-tangles.util.tree"]], "bintreenetworkx (class in tangles.util.tree)": [[350, "tangles.util.tree.BinTreeNetworkX"]], "draw() (tangles.util.tree.bintreenetworkx method)": [[351, "tangles.util.tree.BinTreeNetworkX.draw"]], "get_ids_from_label() (tangles.util.tree.bintreenetworkx method)": [[352, "tangles.util.tree.BinTreeNetworkX.get_ids_from_label"]], "get_label() (tangles.util.tree.bintreenetworkx method)": [[353, "tangles.util.tree.BinTreeNetworkX.get_label"]], "graph (tangles.util.tree.bintreenetworkx property)": [[354, "tangles.util.tree.BinTreeNetworkX.graph"]], "relabel() (tangles.util.tree.bintreenetworkx method)": [[355, "tangles.util.tree.BinTreeNetworkX.relabel"]], "tst_layout() (tangles.util.tree.bintreenetworkx method)": [[356, "tangles.util.tree.BinTreeNetworkX.tst_layout"]], "bintreenode (class in tangles.util.tree)": [[357, "tangles.util.tree.BinTreeNode"]], "children() (tangles.util.tree.bintreenode method)": [[358, "tangles.util.tree.BinTreeNode.children"]], "copy() (tangles.util.tree.bintreenode method)": [[359, "tangles.util.tree.BinTreeNode.copy"]], "copy_subtree() (tangles.util.tree.bintreenode method)": [[360, "tangles.util.tree.BinTreeNode.copy_subtree"]], "copy_subtree_into_children() (tangles.util.tree.bintreenode method)": [[361, "tangles.util.tree.BinTreeNode.copy_subtree_into_children"]], "detach() (tangles.util.tree.bintreenode method)": [[362, "tangles.util.tree.BinTreeNode.detach"]], "from_indicator_matrix() (tangles.util.tree.bintreenode class method)": [[363, "tangles.util.tree.BinTreeNode.from_indicator_matrix"]], "is_leaf() (tangles.util.tree.bintreenode method)": [[364, "tangles.util.tree.BinTreeNode.is_leaf"]], "leaves_in_subtree() (tangles.util.tree.bintreenode method)": [[365, "tangles.util.tree.BinTreeNode.leaves_in_subtree"]], "level() (tangles.util.tree.bintreenode method)": [[366, "tangles.util.tree.BinTreeNode.level"]], "level_in_subtree() (tangles.util.tree.bintreenode method)": [[367, "tangles.util.tree.BinTreeNode.level_in_subtree"]], "path_from_root_indicator() (tangles.util.tree.bintreenode method)": [[368, "tangles.util.tree.BinTreeNode.path_from_root_indicator"]], "set_left_child() (tangles.util.tree.bintreenode method)": [[369, "tangles.util.tree.BinTreeNode.set_left_child"]], "set_right_child() (tangles.util.tree.bintreenode method)": [[370, "tangles.util.tree.BinTreeNode.set_right_child"]], "to_indicator_matrix() (tangles.util.tree.bintreenode static method)": [[371, "tangles.util.tree.BinTreeNode.to_indicator_matrix"]], "graphnode (class in tangles.util.tree)": [[372, "tangles.util.tree.GraphNode"]], "treenode (class in tangles.util.tree)": [[373, "tangles.util.tree.TreeNode"]], "plot_tree() (in module tangles.util.tree)": [[374, "tangles.util.tree.plot_tree"]], "print_node_label() (in module tangles.util.tree)": [[375, "tangles.util.tree.print_node_label"]], "tangles.util.ui": [[376, "module-tangles.util.ui"]], "splitgraph (class in tangles.util.ui)": [[377, "tangles.util.ui.SplitGraph"]], "draw_ellipses() (tangles.util.ui.splitgraph method)": [[378, "tangles.util.ui.SplitGraph.draw_ellipses"]], "draw_side_and_boundary() (tangles.util.ui.splitgraph method)": [[379, "tangles.util.ui.SplitGraph.draw_side_and_boundary"]], "draw_stacked_circles() (tangles.util.ui.splitgraph method)": [[380, "tangles.util.ui.SplitGraph.draw_stacked_circles"]], "xypicker (class in tangles.util.ui)": [[381, "tangles.util.ui.XYPicker"]], "show() (tangles.util.ui.xypicker method)": [[382, "tangles.util.ui.XYPicker.show"]], "update() (tangles.util.ui.xypicker method)": [[383, "tangles.util.ui.XYPicker.update"]], "plot_annotated() (in module tangles.util.ui)": [[384, "tangles.util.ui.plot_annotated"]], "wrap_annotation_func_ax() (in module tangles.util.ui)": [[385, "tangles.util.ui.wrap_annotation_func_ax"]]}})