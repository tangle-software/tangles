Search.setIndex({"alltitles": {"1. Clustering and Tangles": [[448, "clustering-and-tangles"]], "1. Preparing, Cleaning and Selecting Data": [[449, "preparing-cleaning-and-selecting-data"]], "1. The Data": [[452, "the-data"]], "1. The Input Image": [[451, "the-input-image"]], "1.1 Clustering - let\u2019s divide": [[448, "clustering-let-s-divide"]], "1.2 Tangles - let\u2019s work together": [[448, "tangles-let-s-work-together"]], "1.3. Features - choose your side": [[448, "features-choose-your-side"]], "1.4. Order functions - not all features are created equal": [[448, "order-functions-not-all-features-are-created-equal"]], "1.5. Consistency - let\u2019s agree on one point, at least": [[448, "consistency-let-s-agree-on-one-point-at-least"]], "1.6. Tangles - sweep the world": [[448, "tangles-sweep-the-world"]], "1.7 Scores - Back to fuzzy clusters": [[448, "scores-back-to-fuzzy-clusters"]], "2. A simple tangle analysis": [[449, "a-simple-tangle-analysis"]], "2. An Order Function Based on Point Similarity": [[451, "an-order-function-based-on-point-similarity"]], "2. Surveys and Features": [[452, "surveys-and-features"]], "2. Tangle soft clustering in \\mathbb{R}^2": [[448, "tangle-soft-clustering-in-mathbb-r-2"]], "2.1. Sampling Data": [[448, "sampling-data"]], "2.2. An order function based on point similarity": [[448, "an-order-function-based-on-point-similarity"]], "2.3. Tangles of a simple feature system": [[448, "tangles-of-a-simple-feature-system"]], "3. Summary": [[448, "summary"], [449, "summary"]], "3. The Features": [[451, "the-features"]], "3. Verifying the Coherence of the Factors": [[452, "verifying-the-coherence-of-the-factors"]], "3.1 The coherence of factor E (extraversion)": [[452, "the-coherence-of-factor-e-extraversion"]], "3.2 The coherence of all factors": [[452, "the-coherence-of-all-factors"]], "4. The Tangles": [[451, "the-tangles"]], "4. Typical Mindsets <a id='typical_mindsets'></a>": [[452, "typical-mindsets"]], "5. A Tree Structure on Mindsets": [[452, "a-tree-structure-on-mindsets"]], "5.1 Define an order function": [[452, "define-an-order-function"]], "5.2 Search tangles": [[452, "search-tangles"]], "5.3 Plot a tree of tangles": [[452, "plot-a-tree-of-tangles"]], "6. Typical Ranges of Ratings": [[452, "typical-ranges-of-ratings"]], "6.1 Features at thresholds": [[452, "features-at-thresholds"]], "6.2 Feature Order: Prefer Balanced Features": [[452, "feature-order-prefer-balanced-features"]], "6.3 Interval tangles": [[452, "interval-tangles"]], "API reference": [[447, "api-reference"]], "AdvancedAgreementFunc": [[87, "advancedagreementfunc"]], "AdvancedFeatureSystem": [[236, "advancedfeaturesystem"]], "AgreementFunc": [[88, "agreementfunc"]], "AgreementFuncBitarray": [[89, "agreementfuncbitarray"]], "AgreementFuncBitarrayBips": [[90, "agreementfuncbitarraybips"]], "Attributes": [[17, "attributes"], [118, "attributes"], [163, "attributes"], [166, "attributes"], [198, "attributes"], [418, "attributes"], [442, "attributes"]], "BinTreeNetworkX": [[411, "bintreenetworkx"]], "BinTreeNode": [[418, "bintreenode"]], "CalculateAgreement": [[91, "calculateagreement"]], "Conclusion": [[452, "conclusion"]], "ConjunctiveNormalForm": [[386, "conjunctivenormalform"]], "CutWeightOrder": [[358, "cutweightorder"]], "DefaultProgressCallback": [[233, "defaultprogresscallback"]], "DisjunctiveNormalForm": [[387, "disjunctivenormalform"]], "ExtendingTangles": [[230, "extendingtangles"]], "FTreeNode": [[2, "ftreenode"]], "FeatureSystem": [[262, "featuresystem"]], "GraphNode": [[433, "graphnode"]], "LogicTerm": [[388, "logicterm"]], "MatrixOrderSVD": [[398, "matrixordersvd"]], "Members": [[398, "members"]], "MetaData": [[287, "metadata"]], "NCutOrder": [[361, "ncutorder"]], "NominalVariableValues": [[101, "nominalvariablevalues"]], "NumericalVariableValues": [[105, "numericalvariablevalues"]], "OrderFuncDerivative": [[332, "orderfuncderivative"]], "OrderFunctionO1": [[109, "orderfunctiono1"]], "OrderFunctionO1biased": [[110, "orderfunctiono1biased"]], "OrderFunctionO2": [[111, "orderfunctiono2"]], "OrderFunctionO3": [[112, "orderfunctiono3"]], "OrderFunctionO4": [[113, "orderfunctiono4"]], "OrdinalVariableValues": [[114, "ordinalvariablevalues"]], "Parameter": [[49, "parameter"], [55, "parameter"], [76, "parameter"], [84, "parameter"], [102, "parameter"], [106, "parameter"], [115, "parameter"], [143, "parameter"], [195, "parameter"], [200, "parameter"], [206, "parameter"]], "Parameters": [[8, "parameters"], [10, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [24, "parameters"], [26, "parameters"], [28, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [39, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [54, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [65, "parameters"], [70, "parameters"], [73, "parameters"], [75, "parameters"], [81, "parameters"], [83, "parameters"], [92, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [107, "parameters"], [108, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [135, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [167, "parameters"], [168, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [178, "parameters"], [179, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [194, "parameters"], [196, "parameters"], [197, "parameters"], [205, "parameters"], [209, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [230, "parameters"], [231, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [243, "parameters"], [244, "parameters"], [247, "parameters"], [249, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [260, "parameters"], [261, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [269, "parameters"], [270, "parameters"], [272, "parameters"], [274, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [285, "parameters"], [286, "parameters"], [288, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [305, "parameters"], [306, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [312, "parameters"], [313, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [323, "parameters"], [324, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [346, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [353, "parameters"], [354, "parameters"], [356, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [390, "parameters"], [391, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [411, "parameters"], [413, "parameters"], [414, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [424, "parameters"], [426, "parameters"], [428, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [435, "parameters"], [436, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [445, "parameters"], [446, "parameters"]], "Point Cloud Tangles": [[448, "point-cloud-tangles"]], "RatioCutOrder": [[364, "ratiocutorder"]], "RecursionLogic": [[393, "recursionlogic"]], "Returns": [[3, "returns"], [5, "returns"], [8, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [16, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [23, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [54, "returns"], [55, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [72, "returns"], [75, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [92, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [102, "returns"], [106, "returns"], [115, "returns"], [119, "returns"], [120, "returns"], [122, "returns"], [123, "returns"], [125, "returns"], [126, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [136, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [146, "returns"], [147, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [164, "returns"], [165, "returns"], [168, "returns"], [169, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [191, "returns"], [192, "returns"], [195, "returns"], [205, "returns"], [206, "returns"], [209, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [218, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [346, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [353, "returns"], [354, "returns"], [356, "returns"], [367, "returns"], [368, "returns"], [369, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [374, "returns"], [375, "returns"], [376, "returns"], [378, "returns"], [379, "returns"], [380, "returns"], [381, "returns"], [382, "returns"], [383, "returns"], [384, "returns"], [390, "returns"], [391, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [417, "returns"], [419, "returns"], [421, "returns"], [424, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [432, "returns"], [441, "returns"], [446, "returns"]], "SemanticTextTerm": [[396, "semantictextterm"]], "SetSeparationSystem": [[289, "setseparationsystem"]], "SetSeparationSystemBase": [[307, "setseparationsystembase"]], "SetSeparationSystemOrderFunc": [[325, "setseparationsystemorderfunc"]], "SimpleProgressCallback": [[234, "simpleprogresscallback"]], "SimpleSurveyFeatureFactory": [[118, "simplesurveyfeaturefactory"]], "SimpleSurveyFeatureFactoryMissingValuesBothSides": [[121, "simplesurveyfeaturefactorymissingvaluesbothsides"]], "SimpleSurveyFeatureFactoryMissingValuesImplicit": [[124, "simplesurveyfeaturefactorymissingvaluesimplicit"]], "SimpleSurveyFeatureFactoryMissingValuesOwnFeatures": [[127, "simplesurveyfeaturefactorymissingvaluesownfeatures"]], "SplitGraph": [[438, "splitgraph"]], "Survey": [[130, "survey"]], "Survey Tangles": [[449, "survey-tangles"]], "SurveyFeatureFactory": [[156, "surveyfeaturefactory"]], "SurveyFeatureFactoryCherryPicker": [[159, "surveyfeaturefactorycherrypicker"]], "SurveyFeatureFactoryDecorator": [[163, "surveyfeaturefactorydecorator"]], "SurveyTangles": [[166, "surveytangles"]], "SurveyVariable": [[178, "surveyvariable"]], "SurveyVariableValues": [[194, "surveyvariablevalues"]], "Tangle": [[17, "tangle"]], "Tangle Software Documentation": [[0, "tangle-software-documentation"]], "TangleSearchTree": [[34, "tanglesearchtree"]], "TangleSearchWidget": [[47, "tanglesearchwidget"]], "TangleSweep": [[57, "tanglesweep"]], "TangleSweepFeatureSys": [[198, "tanglesweepfeaturesys"]], "Tangles in Images I": [[450, "tangles-in-images-i"]], "Tangles in Images II": [[451, "tangles-in-images-ii"]], "Tangles of Personality Traits": [[452, "tangles-of-personality-traits"]], "TextTerm": [[389, "textterm"]], "ToTEdge": [[64, "totedge"]], "ToTNode": [[66, "totnode"]], "TreeNode": [[434, "treenode"]], "TreeOfTangles": [[71, "treeoftangles"]], "Tutorials": [[453, "tutorials"]], "UncrossingSweep": [[73, "uncrossingsweep"]], "UnionOfIntervals": [[208, "unionofintervals"]], "XYPicker": [[442, "xypicker"]], "__getitem__": [[131, "getitem"], [237, "getitem"], [263, "getitem"], [290, "getitem"], [308, "getitem"]], "add_all_corners_of_features": [[335, "add-all-corners-of-features"]], "add_corner": [[238, "add-corner"], [264, "add-corner"], [291, "add-corner"], [309, "add-corner"]], "add_features": [[239, "add-features"], [265, "add-features"]], "add_seps": [[240, "add-seps"], [266, "add-seps"], [292, "add-seps"], [310, "add-seps"]], "add_values": [[179, "add-values"]], "agreement_func": [[92, "agreement-func"]], "all_feature_ids": [[241, "all-feature-ids"], [267, "all-feature-ids"]], "all_oriented_feature_ids": [[48, "all-oriented-feature-ids"], [74, "all-oriented-feature-ids"], [199, "all-oriented-feature-ids"]], "all_sep_ids": [[242, "all-sep-ids"], [268, "all-sep-ids"], [293, "all-sep-ids"], [311, "all-sep-ids"]], "all_values_as_list": [[180, "all-values-as-list"]], "any_node": [[72, "any-node"]], "append": [[288, "append"], [390, "append"]], "append_corner_features": [[211, "append-corner-features"]], "append_separation": [[58, "append-separation"]], "assemble_meta_info": [[243, "assemble-meta-info"], [269, "assemble-meta-info"], [294, "assemble-meta-info"], [312, "assemble-meta-info"]], "atomic_set_indicators": [[327, "atomic-set-indicators"]], "atomic_sets": [[328, "atomic-sets"]], "atomic_to_seps": [[329, "atomic-to-seps"]], "balance": [[407, "balance"]], "binary_unique_value_features": [[209, "binary-unique-value-features"]], "change_agreement": [[167, "change-agreement"]], "change_discrete_derivative": [[333, "change-discrete-derivative"], [359, "change-discrete-derivative"], [362, "change-discrete-derivative"], [365, "change-discrete-derivative"]], "check_variables": [[132, "check-variables"]], "children": [[3, "children"], [18, "children"], [419, "children"]], "coherence_levels": [[94, "coherence-levels"]], "colsplit_mutual_information": [[349, "colsplit-mutual-information"]], "complete_rows": [[133, "complete-rows"]], "complexity_levels": [[95, "complexity-levels"]], "compute_corner_features": [[212, "compute-corner-features"]], "compute_infimum": [[244, "compute-infimum"], [270, "compute-infimum"], [295, "compute-infimum"], [313, "compute-infimum"]], "connected_component_indicators": [[356, "connected-component-indicators"]], "contract_graph": [[374, "contract-graph"]], "copy": [[4, "copy"], [19, "copy"], [134, "copy"], [245, "copy"], [420, "copy"]], "copy_subtree": [[5, "copy-subtree"], [20, "copy-subtree"], [421, "copy-subtree"]], "copy_subtree_into_children": [[6, "copy-subtree-into-children"], [21, "copy-subtree-into-children"], [422, "copy-subtree-into-children"]], "cosine_similarity": [[378, "cosine-similarity"]], "cosine_similarity_graph_csr_data": [[379, "cosine-similarity-graph-csr-data"]], "count_big_side": [[246, "count-big-side"], [271, "count-big-side"], [296, "count-big-side"], [314, "count-big-side"]], "count_number_of_unique_answers": [[135, "count-number-of-unique-answers"]], "count_valid_answers_per_respondent": [[136, "count-valid-answers-per-respondent"]], "covariance_order": [[399, "covariance-order"]], "create_features": [[119, "create-features"], [122, "create-features"], [125, "create-features"], [128, "create-features"], [157, "create-features"], [160, "create-features"], [164, "create-features"]], "create_features_all_unique_values": [[213, "create-features-all-unique-values"]], "create_features_for_single_col": [[120, "create-features-for-single-col"], [123, "create-features-for-single-col"], [126, "create-features-for-single-col"], [129, "create-features-for-single-col"], [158, "create-features-for-single-col"], [161, "create-features-for-single-col"], [165, "create-features-for-single-col"]], "create_features_split_regular_bins": [[214, "create-features-split-regular-bins"]], "create_features_split_regular_ge": [[215, "create-features-split-regular-ge"]], "create_order_function": [[216, "create-order-function"]], "create_tot": [[75, "create-tot"], [223, "create-tot"]], "create_values": [[181, "create-values"]], "crossing_seps": [[247, "crossing-seps"], [272, "crossing-seps"], [297, "crossing-seps"], [315, "crossing-seps"]], "cut_weight_order": [[367, "cut-weight-order"]], "datapointwise_information_gains": [[350, "datapointwise-information-gains"]], "degree": [[67, "degree"]], "detach": [[7, "detach"], [22, "detach"], [423, "detach"]], "discrete_derivative": [[334, "discrete-derivative"], [360, "discrete-derivative"], [363, "discrete-derivative"], [366, "discrete-derivative"]], "distribute": [[391, "distribute"]], "draw": [[412, "draw"]], "draw_ellipses": [[439, "draw-ellipses"]], "draw_side_and_boundary": [[440, "draw-side-and-boundary"]], "draw_stacked_circles": [[441, "draw-stacked-circles"]], "entropy": [[351, "entropy"]], "epsilon_neighborhood_graph": [[380, "epsilon-neighborhood-graph"]], "equal_data": [[23, "equal-data"]], "explain_feature": [[168, "explain-feature"]], "extend_tangles": [[231, "extend-tangles"]], "feats2seps_invalids_to_both_sides": [[217, "feats2seps-invalids-to-both-sides"]], "feature_and_complement_size": [[248, "feature-and-complement-size"], [273, "feature-and-complement-size"]], "feature_factory_all_splits_ge": [[218, "feature-factory-all-splits-ge"]], "feature_metadata": [[249, "feature-metadata"], [274, "feature-metadata"]], "feature_size": [[250, "feature-size"], [275, "feature-size"]], "feature_system": [[169, "feature-system"]], "from_indicator_matrix": [[8, "from-indicator-matrix"], [24, "from-indicator-matrix"], [424, "from-indicator-matrix"]], "get_corners": [[251, "get-corners"], [276, "get-corners"], [298, "get-corners"], [316, "get-corners"]], "get_efficient_distinguishers": [[35, "get-efficient-distinguishers"]], "get_feature_ids": [[252, "get-feature-ids"], [277, "get-feature-ids"]], "get_ids_from_label": [[413, "get-ids-from-label"]], "get_label": [[414, "get-label"]], "get_sep_ids": [[253, "get-sep-ids"], [278, "get-sep-ids"], [299, "get-sep-ids"], [317, "get-sep-ids"]], "get_tangle_by_path": [[225, "get-tangle-by-path"]], "graph": [[415, "graph"]], "greedy_neighborhood": [[370, "greedy-neighborhood"]], "greedy_neighborhood_old": [[371, "greedy-neighborhood-old"]], "greedy_search": [[59, "greedy-search"]], "grid_distance_graph": [[381, "grid-distance-graph"]], "guess_variable_types": [[137, "guess-variable-types"]], "guess_variable_value_lists": [[138, "guess-variable-value-lists"]], "guided_tangle": [[226, "guided-tangle"]], "hamming_similarity": [[382, "hamming-similarity"]], "hard_clustering_tuebingen": [[96, "hard-clustering-tuebingen"]], "image_to_similarity_graph": [[383, "image-to-similarity-graph"]], "information_gain": [[352, "information-gain"]], "initialize_search": [[170, "initialize-search"]], "insert_separation": [[60, "insert-separation"]], "interpret_column_selection": [[139, "interpret-column-selection"]], "invalid_values_as_list": [[182, "invalid-values-as-list"]], "invert_op": [[102, "invert-op"], [106, "invert-op"], [115, "invert-op"], [195, "invert-op"]], "is_guiding": [[227, "is-guiding"]], "is_le": [[254, "is-le"], [279, "is-le"], [300, "is-le"], [318, "is-le"]], "is_leaf": [[9, "is-leaf"], [25, "is-leaf"], [68, "is-leaf"], [425, "is-leaf"]], "is_nested": [[255, "is-nested"], [280, "is-nested"], [301, "is-nested"], [319, "is-nested"]], "is_nominal_type": [[183, "is-nominal-type"]], "is_numeric_type": [[184, "is-numeric-type"]], "is_ordinal_type": [[185, "is-ordinal-type"]], "is_subset": [[256, "is-subset"], [281, "is-subset"]], "is_valid_type": [[186, "is-valid-type"]], "is_valid_type_name": [[187, "is-valid-type-name"]], "joint_entropy": [[353, "joint-entropy"]], "k_nearest_neighbors": [[384, "k-nearest-neighbors"]], "k_tangles": [[36, "k-tangles"]], "laplacian": [[372, "laplacian"]], "leaves_in_subtree": [[10, "leaves-in-subtree"], [26, "leaves-in-subtree"], [426, "leaves-in-subtree"]], "level": [[11, "level"], [27, "level"], [427, "level"]], "level_in_subtree": [[12, "level-in-subtree"], [28, "level-in-subtree"], [428, "level-in-subtree"]], "limit": [[37, "limit"]], "linear_similarity_from_dist_matrix": [[400, "linear-similarity-from-dist-matrix"]], "linear_similarity_from_distances": [[401, "linear-similarity-from-distances"]], "load": [[38, "load"], [140, "load"], [171, "load"]], "logdet_order": [[402, "logdet-order"]], "lower_agreement": [[49, "lower-agreement"], [76, "lower-agreement"], [200, "lower-agreement"]], "matrix_order": [[403, "matrix-order"]], "maximal_tangles": [[39, "maximal-tangles"]], "metadata_matrix": [[257, "metadata-matrix"], [282, "metadata-matrix"], [302, "metadata-matrix"], [320, "metadata-matrix"]], "min_S_T_cut": [[336, "min-s-t-cut"]], "minimize_cut": [[337, "minimize-cut"]], "modularity_matrix": [[375, "modularity-matrix"]], "ncut_order": [[368, "ncut-order"]], "neighbours": [[69, "neighbours"]], "nodal_domains": [[338, "nodal-domains"]], "nominalvar_features_all_cats": [[219, "nominalvar-features-all-cats"]], "normalize_length": [[408, "normalize-length"]], "normalized_laplacian": [[376, "normalized-laplacian"]], "num_questions": [[141, "num-questions"]], "num_respondents": [[142, "num-respondents"]], "number_of_separations": [[40, "number-of-separations"]], "o_five": [[404, "o-five"]], "o_seven": [[405, "o-seven"]], "open": [[29, "open"]], "order_func_balance": [[344, "order-func-balance"]], "order_func_min_side_size": [[345, "order-func-min-side-size"]], "order_works_on_features": [[220, "order-works-on-features"]], "ordered_metadata": [[172, "ordered-metadata"]], "oriented_feature_ids_for_agreement": [[50, "oriented-feature-ids-for-agreement"], [77, "oriented-feature-ids-for-agreement"], [201, "oriented-feature-ids-for-agreement"]], "original_feature_ids": [[51, "original-feature-ids"], [78, "original-feature-ids"], [202, "original-feature-ids"]], "other_end": [[65, "other-end"]], "pairwise_mutual_information": [[354, "pairwise-mutual-information"]], "path_from_root_indicator": [[13, "path-from-root-indicator"], [30, "path-from-root-indicator"], [429, "path-from-root-indicator"]], "pca_features": [[339, "pca-features"]], "plot_annotated": [[445, "plot-annotated"]], "plot_tree": [[435, "plot-tree"]], "possible_values_representation": [[103, "possible-values-representation"], [107, "possible-values-representation"], [116, "possible-values-representation"], [196, "possible-values-representation"]], "print_node_label": [[436, "print-node-label"]], "random_features": [[340, "random-features"]], "ratiocut_order": [[369, "ratiocut-order"]], "relabel": [[416, "relabel"]], "replace_values": [[188, "replace-values"]], "replace_variable_value_labels": [[143, "replace-variable-value-labels"]], "replace_variable_values": [[144, "replace-variable-values"]], "root": [[41, "root"]], "save": [[42, "save"], [145, "save"]], "search": [[173, "search"]], "search_object": [[52, "search-object"], [79, "search-object"], [203, "search-object"]], "search_tangles": [[221, "search-tangles"]], "search_tangles_uncrossed": [[222, "search-tangles-uncrossed"]], "search_tree": [[43, "search-tree"]], "select_questions": [[146, "select-questions"]], "select_respondents": [[147, "select-respondents"]], "sep_ids": [[44, "sep-ids"]], "sep_sys": [[53, "sep-sys"], [80, "sep-sys"], [204, "sep-sys"]], "separation_metadata": [[258, "separation-metadata"], [283, "separation-metadata"], [303, "separation-metadata"], [321, "separation-metadata"]], "seps_to_atomic": [[330, "seps-to-atomic"]], "set_factoryfunc": [[162, "set-factoryfunc"]], "set_label": [[70, "set-label"]], "set_left_child": [[14, "set-left-child"], [31, "set-left-child"], [430, "set-left-child"]], "set_pyreadstat_meta_data": [[148, "set-pyreadstat-meta-data"]], "set_right_child": [[15, "set-right-child"], [32, "set-right-child"], [431, "set-right-child"]], "set_valid_and_invalid_variable_values": [[149, "set-valid-and-invalid-variable-values"]], "set_value_labels": [[189, "set-value-labels"]], "set_values": [[190, "set-values"]], "set_variable_labels": [[150, "set-variable-labels"]], "set_variable_names": [[151, "set-variable-names"]], "set_variable_types": [[152, "set-variable-types"]], "shape": [[153, "shape"]], "show": [[443, "show"]], "side_counts": [[259, "side-counts"], [284, "side-counts"], [304, "side-counts"], [322, "side-counts"]], "simplify": [[394, "simplify"]], "soft_clustering_tuebingen": [[97, "soft-clustering-tuebingen"]], "specified_features": [[174, "specified-features"]], "spectral_features": [[341, "spectral-features"]], "spectral_features_splitted": [[342, "spectral-features-splitted"]], "standardize": [[409, "standardize"]], "summarize": [[154, "summarize"]], "sweep_below": [[61, "sweep-below"], [81, "sweep-below"]], "sweep_one": [[62, "sweep-one"], [82, "sweep-one"]], "tangle_matrix": [[45, "tangle-matrix"], [54, "tangle-matrix"], [83, "tangle-matrix"], [175, "tangle-matrix"], [205, "tangle-matrix"]], "tangle_score": [[55, "tangle-score"], [84, "tangle-score"], [98, "tangle-score"], [206, "tangle-score"]], "tangles": [[1, "module-tangles"]], "tangles.agreement": [[86, "module-tangles.agreement"]], "tangles.analysis": [[93, "module-tangles.analysis"]], "tangles.convenience": [[100, "module-tangles.convenience"]], "tangles.convenience.convenience_features": [[210, "module-tangles.convenience.convenience_features"]], "tangles.guiding": [[224, "module-tangles.guiding"]], "tangles.search": [[228, "module-tangles.search"]], "tangles.search.extending_tangles": [[229, "module-tangles.search.extending_tangles"]], "tangles.search.progress": [[232, "module-tangles.search.progress"]], "tangles.separations": [[235, "module-tangles.separations"]], "tangles.separations.atomic_sets": [[326, "module-tangles.separations.atomic_sets"]], "tangles.separations.finding": [[331, "module-tangles.separations.finding"]], "tangles.separations.util": [[343, "module-tangles.separations.util"]], "tangles.util": [[347, "module-tangles.util"]], "tangles.util.entropy": [[348, "module-tangles.util.entropy"]], "tangles.util.graph": [[355, "module-tangles.util.graph"]], "tangles.util.graph.cut_weight": [[357, "module-tangles.util.graph.cut_weight"]], "tangles.util.graph.minor": [[373, "module-tangles.util.graph.minor"]], "tangles.util.graph.similarity": [[377, "module-tangles.util.graph.similarity"]], "tangles.util.logic": [[385, "module-tangles.util.logic"]], "tangles.util.logic.sep_to_term": [[392, "module-tangles.util.logic.sep_to_term"]], "tangles.util.logic.term": [[395, "module-tangles.util.logic.term"]], "tangles.util.matrix_order": [[397, "module-tangles.util.matrix_order"]], "tangles.util.preprocessing": [[406, "module-tangles.util.preprocessing"]], "tangles.util.tree": [[410, "module-tangles.util.tree"]], "tangles.util.ui": [[437, "module-tangles.util.ui"]], "to_indicator_matrix": [[16, "to-indicator-matrix"], [33, "to-indicator-matrix"], [432, "to-indicator-matrix"]], "to_row": [[191, "to-row"]], "tree": [[56, "tree"], [63, "tree"], [85, "tree"], [207, "tree"]], "tree_height_for_agreement": [[46, "tree-height-for-agreement"]], "tst_layout": [[417, "tst-layout"]], "typical_answers": [[176, "typical-answers"]], "uncross_distinguishers": [[346, "uncross-distinguishers"]], "update": [[444, "update"]], "update_values_for_specification": [[104, "update-values-for-specification"], [108, "update-values-for-specification"], [117, "update-values-for-specification"], [197, "update-values-for-specification"]], "valid_agreement_lower_bound": [[177, "valid-agreement-lower-bound"]], "valid_values_as_list": [[192, "valid-values-as-list"]], "value_class": [[193, "value-class"]], "variable_info": [[155, "variable-info"]], "visibility": [[99, "visibility"]], "with_array": [[260, "with-array"], [285, "with-array"], [305, "with-array"], [323, "with-array"]], "with_sparse_array": [[261, "with-sparse-array"], [286, "with-sparse-array"], [306, "with-sparse-array"], [324, "with-sparse-array"]], "wrap_annotation_func_ax": [[446, "wrap-annotation-func-ax"]]}, "docnames": ["index", "reference/api/tangles", "reference/api/tangles.FTreeNode", "reference/api/tangles.FTreeNode.children", "reference/api/tangles.FTreeNode.copy", "reference/api/tangles.FTreeNode.copy_subtree", "reference/api/tangles.FTreeNode.copy_subtree_into_children", "reference/api/tangles.FTreeNode.detach", "reference/api/tangles.FTreeNode.from_indicator_matrix", "reference/api/tangles.FTreeNode.is_leaf", "reference/api/tangles.FTreeNode.leaves_in_subtree", "reference/api/tangles.FTreeNode.level", "reference/api/tangles.FTreeNode.level_in_subtree", "reference/api/tangles.FTreeNode.path_from_root_indicator", "reference/api/tangles.FTreeNode.set_left_child", "reference/api/tangles.FTreeNode.set_right_child", "reference/api/tangles.FTreeNode.to_indicator_matrix", "reference/api/tangles.Tangle", "reference/api/tangles.Tangle.children", "reference/api/tangles.Tangle.copy", "reference/api/tangles.Tangle.copy_subtree", "reference/api/tangles.Tangle.copy_subtree_into_children", "reference/api/tangles.Tangle.detach", "reference/api/tangles.Tangle.equal_data", "reference/api/tangles.Tangle.from_indicator_matrix", "reference/api/tangles.Tangle.is_leaf", "reference/api/tangles.Tangle.leaves_in_subtree", "reference/api/tangles.Tangle.level", "reference/api/tangles.Tangle.level_in_subtree", "reference/api/tangles.Tangle.open", "reference/api/tangles.Tangle.path_from_root_indicator", "reference/api/tangles.Tangle.set_left_child", "reference/api/tangles.Tangle.set_right_child", "reference/api/tangles.Tangle.to_indicator_matrix", "reference/api/tangles.TangleSearchTree", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers", "reference/api/tangles.TangleSearchTree.k_tangles", "reference/api/tangles.TangleSearchTree.limit", "reference/api/tangles.TangleSearchTree.load", "reference/api/tangles.TangleSearchTree.maximal_tangles", "reference/api/tangles.TangleSearchTree.number_of_separations", "reference/api/tangles.TangleSearchTree.root", "reference/api/tangles.TangleSearchTree.save", "reference/api/tangles.TangleSearchTree.search_tree", "reference/api/tangles.TangleSearchTree.sep_ids", "reference/api/tangles.TangleSearchTree.tangle_matrix", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement", "reference/api/tangles.TangleSearchWidget", "reference/api/tangles.TangleSearchWidget.all_oriented_feature_ids", "reference/api/tangles.TangleSearchWidget.lower_agreement", "reference/api/tangles.TangleSearchWidget.oriented_feature_ids_for_agreement", "reference/api/tangles.TangleSearchWidget.original_feature_ids", "reference/api/tangles.TangleSearchWidget.search_object", "reference/api/tangles.TangleSearchWidget.sep_sys", "reference/api/tangles.TangleSearchWidget.tangle_matrix", "reference/api/tangles.TangleSearchWidget.tangle_score", "reference/api/tangles.TangleSearchWidget.tree", "reference/api/tangles.TangleSweep", "reference/api/tangles.TangleSweep.append_separation", "reference/api/tangles.TangleSweep.greedy_search", "reference/api/tangles.TangleSweep.insert_separation", "reference/api/tangles.TangleSweep.sweep_below", "reference/api/tangles.TangleSweep.sweep_one", "reference/api/tangles.TangleSweep.tree", "reference/api/tangles.ToTEdge", "reference/api/tangles.ToTEdge.other_end", "reference/api/tangles.ToTNode", "reference/api/tangles.ToTNode.degree", "reference/api/tangles.ToTNode.is_leaf", "reference/api/tangles.ToTNode.neighbours", "reference/api/tangles.ToTNode.set_label", "reference/api/tangles.TreeOfTangles", "reference/api/tangles.TreeOfTangles.any_node", "reference/api/tangles.UncrossingSweep", "reference/api/tangles.UncrossingSweep.all_oriented_feature_ids", "reference/api/tangles.UncrossingSweep.create_tot", "reference/api/tangles.UncrossingSweep.lower_agreement", "reference/api/tangles.UncrossingSweep.oriented_feature_ids_for_agreement", "reference/api/tangles.UncrossingSweep.original_feature_ids", "reference/api/tangles.UncrossingSweep.search_object", "reference/api/tangles.UncrossingSweep.sep_sys", "reference/api/tangles.UncrossingSweep.sweep_below", "reference/api/tangles.UncrossingSweep.sweep_one", "reference/api/tangles.UncrossingSweep.tangle_matrix", "reference/api/tangles.UncrossingSweep.tangle_score", "reference/api/tangles.UncrossingSweep.tree", "reference/api/tangles.agreement", "reference/api/tangles.agreement.AdvancedAgreementFunc", "reference/api/tangles.agreement.AgreementFunc", "reference/api/tangles.agreement.AgreementFuncBitarray", "reference/api/tangles.agreement.AgreementFuncBitarrayBips", "reference/api/tangles.agreement.CalculateAgreement", "reference/api/tangles.agreement_func", "reference/api/tangles.analysis", "reference/api/tangles.analysis.coherence_levels", "reference/api/tangles.analysis.complexity_levels", "reference/api/tangles.analysis.hard_clustering_tuebingen", "reference/api/tangles.analysis.soft_clustering_tuebingen", "reference/api/tangles.analysis.tangle_score", "reference/api/tangles.analysis.visibility", "reference/api/tangles.convenience", "reference/api/tangles.convenience.NominalVariableValues", "reference/api/tangles.convenience.NominalVariableValues.invert_op", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.NumericalVariableValues", "reference/api/tangles.convenience.NumericalVariableValues.invert_op", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.OrderFunctionO1", "reference/api/tangles.convenience.OrderFunctionO1biased", "reference/api/tangles.convenience.OrderFunctionO2", "reference/api/tangles.convenience.OrderFunctionO3", "reference/api/tangles.convenience.OrderFunctionO4", "reference/api/tangles.convenience.OrdinalVariableValues", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features_for_single_col", "reference/api/tangles.convenience.Survey", "reference/api/tangles.convenience.Survey.__getitem__", "reference/api/tangles.convenience.Survey.check_variables", "reference/api/tangles.convenience.Survey.complete_rows", "reference/api/tangles.convenience.Survey.copy", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent", "reference/api/tangles.convenience.Survey.guess_variable_types", "reference/api/tangles.convenience.Survey.guess_variable_value_lists", "reference/api/tangles.convenience.Survey.interpret_column_selection", "reference/api/tangles.convenience.Survey.load", "reference/api/tangles.convenience.Survey.num_questions", "reference/api/tangles.convenience.Survey.num_respondents", "reference/api/tangles.convenience.Survey.replace_variable_value_labels", "reference/api/tangles.convenience.Survey.replace_variable_values", "reference/api/tangles.convenience.Survey.save", "reference/api/tangles.convenience.Survey.select_questions", "reference/api/tangles.convenience.Survey.select_respondents", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data", "reference/api/tangles.convenience.Survey.set_valid_and_invalid_variable_values", "reference/api/tangles.convenience.Survey.set_variable_labels", "reference/api/tangles.convenience.Survey.set_variable_names", "reference/api/tangles.convenience.Survey.set_variable_types", "reference/api/tangles.convenience.Survey.shape", "reference/api/tangles.convenience.Survey.summarize", "reference/api/tangles.convenience.Survey.variable_info", "reference/api/tangles.convenience.SurveyFeatureFactory", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.set_factoryfunc", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col", "reference/api/tangles.convenience.SurveyTangles", "reference/api/tangles.convenience.SurveyTangles.change_agreement", "reference/api/tangles.convenience.SurveyTangles.explain_feature", "reference/api/tangles.convenience.SurveyTangles.feature_system", "reference/api/tangles.convenience.SurveyTangles.initialize_search", "reference/api/tangles.convenience.SurveyTangles.load", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata", "reference/api/tangles.convenience.SurveyTangles.search", "reference/api/tangles.convenience.SurveyTangles.specified_features", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix", "reference/api/tangles.convenience.SurveyTangles.typical_answers", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound", "reference/api/tangles.convenience.SurveyVariable", "reference/api/tangles.convenience.SurveyVariable.add_values", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list", "reference/api/tangles.convenience.SurveyVariable.create_values", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name", "reference/api/tangles.convenience.SurveyVariable.replace_values", "reference/api/tangles.convenience.SurveyVariable.set_value_labels", "reference/api/tangles.convenience.SurveyVariable.set_values", "reference/api/tangles.convenience.SurveyVariable.to_row", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.value_class", "reference/api/tangles.convenience.SurveyVariableValues", "reference/api/tangles.convenience.SurveyVariableValues.invert_op", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification", "reference/api/tangles.convenience.TangleSweepFeatureSys", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_feature_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement", "reference/api/tangles.convenience.TangleSweepFeatureSys.oriented_feature_ids_for_agreement", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_feature_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.search_object", "reference/api/tangles.convenience.TangleSweepFeatureSys.sep_sys", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_score", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree", "reference/api/tangles.convenience.UnionOfIntervals", "reference/api/tangles.convenience.binary_unique_value_features", "reference/api/tangles.convenience.convenience_features", "reference/api/tangles.convenience.convenience_features.append_corner_features", "reference/api/tangles.convenience.convenience_features.compute_corner_features", "reference/api/tangles.convenience.create_features_all_unique_values", "reference/api/tangles.convenience.create_features_split_regular_bins", "reference/api/tangles.convenience.create_features_split_regular_ge", "reference/api/tangles.convenience.create_order_function", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides", "reference/api/tangles.convenience.feature_factory_all_splits_ge", "reference/api/tangles.convenience.nominalvar_features_all_cats", "reference/api/tangles.convenience.order_works_on_features", "reference/api/tangles.convenience.search_tangles", "reference/api/tangles.convenience.search_tangles_uncrossed", "reference/api/tangles.create_tot", "reference/api/tangles.guiding", "reference/api/tangles.guiding.get_tangle_by_path", "reference/api/tangles.guiding.guided_tangle", "reference/api/tangles.guiding.is_guiding", "reference/api/tangles.search", "reference/api/tangles.search.extending_tangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles", "reference/api/tangles.search.progress", "reference/api/tangles.search.progress.DefaultProgressCallback", "reference/api/tangles.search.progress.SimpleProgressCallback", "reference/api/tangles.separations", "reference/api/tangles.separations.AdvancedFeatureSystem", "reference/api/tangles.separations.AdvancedFeatureSystem.__getitem__", "reference/api/tangles.separations.AdvancedFeatureSystem.add_corner", "reference/api/tangles.separations.AdvancedFeatureSystem.add_features", "reference/api/tangles.separations.AdvancedFeatureSystem.add_seps", "reference/api/tangles.separations.AdvancedFeatureSystem.all_feature_ids", "reference/api/tangles.separations.AdvancedFeatureSystem.all_sep_ids", "reference/api/tangles.separations.AdvancedFeatureSystem.assemble_meta_info", "reference/api/tangles.separations.AdvancedFeatureSystem.compute_infimum", "reference/api/tangles.separations.AdvancedFeatureSystem.copy", "reference/api/tangles.separations.AdvancedFeatureSystem.count_big_side", "reference/api/tangles.separations.AdvancedFeatureSystem.crossing_seps", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_and_complement_size", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_metadata", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_size", "reference/api/tangles.separations.AdvancedFeatureSystem.get_corners", "reference/api/tangles.separations.AdvancedFeatureSystem.get_feature_ids", "reference/api/tangles.separations.AdvancedFeatureSystem.get_sep_ids", "reference/api/tangles.separations.AdvancedFeatureSystem.is_le", "reference/api/tangles.separations.AdvancedFeatureSystem.is_nested", "reference/api/tangles.separations.AdvancedFeatureSystem.is_subset", "reference/api/tangles.separations.AdvancedFeatureSystem.metadata_matrix", "reference/api/tangles.separations.AdvancedFeatureSystem.separation_metadata", "reference/api/tangles.separations.AdvancedFeatureSystem.side_counts", "reference/api/tangles.separations.AdvancedFeatureSystem.with_array", "reference/api/tangles.separations.AdvancedFeatureSystem.with_sparse_array", "reference/api/tangles.separations.FeatureSystem", "reference/api/tangles.separations.FeatureSystem.__getitem__", "reference/api/tangles.separations.FeatureSystem.add_corner", "reference/api/tangles.separations.FeatureSystem.add_features", "reference/api/tangles.separations.FeatureSystem.add_seps", "reference/api/tangles.separations.FeatureSystem.all_feature_ids", "reference/api/tangles.separations.FeatureSystem.all_sep_ids", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info", "reference/api/tangles.separations.FeatureSystem.compute_infimum", "reference/api/tangles.separations.FeatureSystem.count_big_side", "reference/api/tangles.separations.FeatureSystem.crossing_seps", "reference/api/tangles.separations.FeatureSystem.feature_and_complement_size", "reference/api/tangles.separations.FeatureSystem.feature_metadata", "reference/api/tangles.separations.FeatureSystem.feature_size", "reference/api/tangles.separations.FeatureSystem.get_corners", "reference/api/tangles.separations.FeatureSystem.get_feature_ids", "reference/api/tangles.separations.FeatureSystem.get_sep_ids", "reference/api/tangles.separations.FeatureSystem.is_le", "reference/api/tangles.separations.FeatureSystem.is_nested", "reference/api/tangles.separations.FeatureSystem.is_subset", "reference/api/tangles.separations.FeatureSystem.metadata_matrix", "reference/api/tangles.separations.FeatureSystem.separation_metadata", "reference/api/tangles.separations.FeatureSystem.side_counts", "reference/api/tangles.separations.FeatureSystem.with_array", "reference/api/tangles.separations.FeatureSystem.with_sparse_array", "reference/api/tangles.separations.MetaData", "reference/api/tangles.separations.MetaData.append", "reference/api/tangles.separations.SetSeparationSystem", "reference/api/tangles.separations.SetSeparationSystem.__getitem__", "reference/api/tangles.separations.SetSeparationSystem.add_corner", "reference/api/tangles.separations.SetSeparationSystem.add_seps", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum", "reference/api/tangles.separations.SetSeparationSystem.count_big_side", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps", "reference/api/tangles.separations.SetSeparationSystem.get_corners", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.is_le", "reference/api/tangles.separations.SetSeparationSystem.is_nested", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata", "reference/api/tangles.separations.SetSeparationSystem.side_counts", "reference/api/tangles.separations.SetSeparationSystem.with_array", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemBase", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__", "reference/api/tangles.separations.SetSeparationSystemBase.add_corner", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum", "reference/api/tangles.separations.SetSeparationSystemBase.count_big_side", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.is_le", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata", "reference/api/tangles.separations.SetSeparationSystemBase.side_counts", "reference/api/tangles.separations.SetSeparationSystemBase.with_array", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemOrderFunc", "reference/api/tangles.separations.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators", "reference/api/tangles.separations.atomic_sets.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_to_seps", "reference/api/tangles.separations.atomic_sets.seps_to_atomic", "reference/api/tangles.separations.finding", "reference/api/tangles.separations.finding.OrderFuncDerivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative", "reference/api/tangles.separations.finding.add_all_corners_of_features", "reference/api/tangles.separations.finding.min_S_T_cut", "reference/api/tangles.separations.finding.minimize_cut", "reference/api/tangles.separations.finding.nodal_domains", "reference/api/tangles.separations.finding.pca_features", "reference/api/tangles.separations.finding.random_features", "reference/api/tangles.separations.finding.spectral_features", "reference/api/tangles.separations.finding.spectral_features_splitted", "reference/api/tangles.separations.util", "reference/api/tangles.separations.util.order_func_balance", "reference/api/tangles.separations.util.order_func_min_side_size", "reference/api/tangles.uncross_distinguishers", "reference/api/tangles.util", "reference/api/tangles.util.entropy", "reference/api/tangles.util.entropy.colsplit_mutual_information", "reference/api/tangles.util.entropy.datapointwise_information_gains", "reference/api/tangles.util.entropy.entropy", "reference/api/tangles.util.entropy.information_gain", "reference/api/tangles.util.entropy.joint_entropy", "reference/api/tangles.util.entropy.pairwise_mutual_information", "reference/api/tangles.util.graph", "reference/api/tangles.util.graph.connected_component_indicators", "reference/api/tangles.util.graph.cut_weight", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.cut_weight_order", "reference/api/tangles.util.graph.cut_weight.ncut_order", "reference/api/tangles.util.graph.cut_weight.ratiocut_order", "reference/api/tangles.util.graph.greedy_neighborhood", "reference/api/tangles.util.graph.greedy_neighborhood_old", "reference/api/tangles.util.graph.laplacian", "reference/api/tangles.util.graph.minor", "reference/api/tangles.util.graph.minor.contract_graph", "reference/api/tangles.util.graph.modularity_matrix", "reference/api/tangles.util.graph.normalized_laplacian", "reference/api/tangles.util.graph.similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph", "reference/api/tangles.util.graph.similarity.grid_distance_graph", "reference/api/tangles.util.graph.similarity.hamming_similarity", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors", "reference/api/tangles.util.logic", "reference/api/tangles.util.logic.ConjunctiveNormalForm", "reference/api/tangles.util.logic.DisjunctiveNormalForm", "reference/api/tangles.util.logic.LogicTerm", "reference/api/tangles.util.logic.TextTerm", "reference/api/tangles.util.logic.append", "reference/api/tangles.util.logic.distribute", "reference/api/tangles.util.logic.sep_to_term", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic", "reference/api/tangles.util.logic.simplify", "reference/api/tangles.util.logic.term", "reference/api/tangles.util.logic.term.SemanticTextTerm", "reference/api/tangles.util.matrix_order", "reference/api/tangles.util.matrix_order.MatrixOrderSVD", "reference/api/tangles.util.matrix_order.covariance_order", "reference/api/tangles.util.matrix_order.linear_similarity_from_dist_matrix", "reference/api/tangles.util.matrix_order.linear_similarity_from_distances", "reference/api/tangles.util.matrix_order.logdet_order", "reference/api/tangles.util.matrix_order.matrix_order", "reference/api/tangles.util.matrix_order.o_five", "reference/api/tangles.util.matrix_order.o_seven", "reference/api/tangles.util.preprocessing", "reference/api/tangles.util.preprocessing.balance", "reference/api/tangles.util.preprocessing.normalize_length", "reference/api/tangles.util.preprocessing.standardize", "reference/api/tangles.util.tree", "reference/api/tangles.util.tree.BinTreeNetworkX", "reference/api/tangles.util.tree.BinTreeNetworkX.draw", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label", "reference/api/tangles.util.tree.BinTreeNetworkX.graph", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout", "reference/api/tangles.util.tree.BinTreeNode", "reference/api/tangles.util.tree.BinTreeNode.children", "reference/api/tangles.util.tree.BinTreeNode.copy", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children", "reference/api/tangles.util.tree.BinTreeNode.detach", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix", "reference/api/tangles.util.tree.BinTreeNode.is_leaf", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.level", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator", "reference/api/tangles.util.tree.BinTreeNode.set_left_child", "reference/api/tangles.util.tree.BinTreeNode.set_right_child", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix", "reference/api/tangles.util.tree.GraphNode", "reference/api/tangles.util.tree.TreeNode", "reference/api/tangles.util.tree.plot_tree", "reference/api/tangles.util.tree.print_node_label", "reference/api/tangles.util.ui", "reference/api/tangles.util.ui.SplitGraph", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles", "reference/api/tangles.util.ui.XYPicker", "reference/api/tangles.util.ui.XYPicker.show", "reference/api/tangles.util.ui.XYPicker.update", "reference/api/tangles.util.ui.plot_annotated", "reference/api/tangles.util.ui.wrap_annotation_func_ax", "reference/index", "tutorials/Point Cloud Tangles", "tutorials/Survey Tangles", "tutorials/Tangles in Images I", "tutorials/Tangles in Images II", "tutorials/Tangles of Personality Traits", "tutorials/index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "reference/api/tangles.rst", "reference/api/tangles.FTreeNode.rst", "reference/api/tangles.FTreeNode.children.rst", "reference/api/tangles.FTreeNode.copy.rst", "reference/api/tangles.FTreeNode.copy_subtree.rst", "reference/api/tangles.FTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.FTreeNode.detach.rst", "reference/api/tangles.FTreeNode.from_indicator_matrix.rst", "reference/api/tangles.FTreeNode.is_leaf.rst", "reference/api/tangles.FTreeNode.leaves_in_subtree.rst", "reference/api/tangles.FTreeNode.level.rst", "reference/api/tangles.FTreeNode.level_in_subtree.rst", "reference/api/tangles.FTreeNode.path_from_root_indicator.rst", "reference/api/tangles.FTreeNode.set_left_child.rst", "reference/api/tangles.FTreeNode.set_right_child.rst", "reference/api/tangles.FTreeNode.to_indicator_matrix.rst", "reference/api/tangles.Tangle.rst", "reference/api/tangles.Tangle.children.rst", "reference/api/tangles.Tangle.copy.rst", "reference/api/tangles.Tangle.copy_subtree.rst", "reference/api/tangles.Tangle.copy_subtree_into_children.rst", "reference/api/tangles.Tangle.detach.rst", "reference/api/tangles.Tangle.equal_data.rst", "reference/api/tangles.Tangle.from_indicator_matrix.rst", "reference/api/tangles.Tangle.is_leaf.rst", "reference/api/tangles.Tangle.leaves_in_subtree.rst", "reference/api/tangles.Tangle.level.rst", "reference/api/tangles.Tangle.level_in_subtree.rst", "reference/api/tangles.Tangle.open.rst", "reference/api/tangles.Tangle.path_from_root_indicator.rst", "reference/api/tangles.Tangle.set_left_child.rst", "reference/api/tangles.Tangle.set_right_child.rst", "reference/api/tangles.Tangle.to_indicator_matrix.rst", "reference/api/tangles.TangleSearchTree.rst", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers.rst", "reference/api/tangles.TangleSearchTree.k_tangles.rst", "reference/api/tangles.TangleSearchTree.limit.rst", "reference/api/tangles.TangleSearchTree.load.rst", "reference/api/tangles.TangleSearchTree.maximal_tangles.rst", "reference/api/tangles.TangleSearchTree.number_of_separations.rst", "reference/api/tangles.TangleSearchTree.root.rst", "reference/api/tangles.TangleSearchTree.save.rst", "reference/api/tangles.TangleSearchTree.search_tree.rst", "reference/api/tangles.TangleSearchTree.sep_ids.rst", "reference/api/tangles.TangleSearchTree.tangle_matrix.rst", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement.rst", "reference/api/tangles.TangleSearchWidget.rst", "reference/api/tangles.TangleSearchWidget.all_oriented_feature_ids.rst", "reference/api/tangles.TangleSearchWidget.lower_agreement.rst", "reference/api/tangles.TangleSearchWidget.oriented_feature_ids_for_agreement.rst", "reference/api/tangles.TangleSearchWidget.original_feature_ids.rst", "reference/api/tangles.TangleSearchWidget.search_object.rst", "reference/api/tangles.TangleSearchWidget.sep_sys.rst", "reference/api/tangles.TangleSearchWidget.tangle_matrix.rst", "reference/api/tangles.TangleSearchWidget.tangle_score.rst", "reference/api/tangles.TangleSearchWidget.tree.rst", "reference/api/tangles.TangleSweep.rst", "reference/api/tangles.TangleSweep.append_separation.rst", "reference/api/tangles.TangleSweep.greedy_search.rst", "reference/api/tangles.TangleSweep.insert_separation.rst", "reference/api/tangles.TangleSweep.sweep_below.rst", "reference/api/tangles.TangleSweep.sweep_one.rst", "reference/api/tangles.TangleSweep.tree.rst", "reference/api/tangles.ToTEdge.rst", "reference/api/tangles.ToTEdge.other_end.rst", "reference/api/tangles.ToTNode.rst", "reference/api/tangles.ToTNode.degree.rst", "reference/api/tangles.ToTNode.is_leaf.rst", "reference/api/tangles.ToTNode.neighbours.rst", "reference/api/tangles.ToTNode.set_label.rst", "reference/api/tangles.TreeOfTangles.rst", "reference/api/tangles.TreeOfTangles.any_node.rst", "reference/api/tangles.UncrossingSweep.rst", "reference/api/tangles.UncrossingSweep.all_oriented_feature_ids.rst", "reference/api/tangles.UncrossingSweep.create_tot.rst", "reference/api/tangles.UncrossingSweep.lower_agreement.rst", "reference/api/tangles.UncrossingSweep.oriented_feature_ids_for_agreement.rst", "reference/api/tangles.UncrossingSweep.original_feature_ids.rst", "reference/api/tangles.UncrossingSweep.search_object.rst", "reference/api/tangles.UncrossingSweep.sep_sys.rst", "reference/api/tangles.UncrossingSweep.sweep_below.rst", "reference/api/tangles.UncrossingSweep.sweep_one.rst", "reference/api/tangles.UncrossingSweep.tangle_matrix.rst", "reference/api/tangles.UncrossingSweep.tangle_score.rst", "reference/api/tangles.UncrossingSweep.tree.rst", "reference/api/tangles.agreement.rst", "reference/api/tangles.agreement.AdvancedAgreementFunc.rst", "reference/api/tangles.agreement.AgreementFunc.rst", "reference/api/tangles.agreement.AgreementFuncBitarray.rst", "reference/api/tangles.agreement.AgreementFuncBitarrayBips.rst", "reference/api/tangles.agreement.CalculateAgreement.rst", "reference/api/tangles.agreement_func.rst", "reference/api/tangles.analysis.rst", "reference/api/tangles.analysis.coherence_levels.rst", "reference/api/tangles.analysis.complexity_levels.rst", "reference/api/tangles.analysis.hard_clustering_tuebingen.rst", "reference/api/tangles.analysis.soft_clustering_tuebingen.rst", "reference/api/tangles.analysis.tangle_score.rst", "reference/api/tangles.analysis.visibility.rst", "reference/api/tangles.convenience.rst", "reference/api/tangles.convenience.NominalVariableValues.rst", "reference/api/tangles.convenience.NominalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.NumericalVariableValues.rst", "reference/api/tangles.convenience.NumericalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.OrderFunctionO1.rst", "reference/api/tangles.convenience.OrderFunctionO1biased.rst", "reference/api/tangles.convenience.OrderFunctionO2.rst", "reference/api/tangles.convenience.OrderFunctionO3.rst", "reference/api/tangles.convenience.OrderFunctionO4.rst", "reference/api/tangles.convenience.OrdinalVariableValues.rst", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op.rst", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features_for_single_col.rst", "reference/api/tangles.convenience.Survey.rst", "reference/api/tangles.convenience.Survey.__getitem__.rst", "reference/api/tangles.convenience.Survey.check_variables.rst", "reference/api/tangles.convenience.Survey.complete_rows.rst", "reference/api/tangles.convenience.Survey.copy.rst", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers.rst", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent.rst", "reference/api/tangles.convenience.Survey.guess_variable_types.rst", "reference/api/tangles.convenience.Survey.guess_variable_value_lists.rst", "reference/api/tangles.convenience.Survey.interpret_column_selection.rst", "reference/api/tangles.convenience.Survey.load.rst", "reference/api/tangles.convenience.Survey.num_questions.rst", "reference/api/tangles.convenience.Survey.num_respondents.rst", "reference/api/tangles.convenience.Survey.replace_variable_value_labels.rst", "reference/api/tangles.convenience.Survey.replace_variable_values.rst", "reference/api/tangles.convenience.Survey.save.rst", "reference/api/tangles.convenience.Survey.select_questions.rst", "reference/api/tangles.convenience.Survey.select_respondents.rst", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data.rst", "reference/api/tangles.convenience.Survey.set_valid_and_invalid_variable_values.rst", "reference/api/tangles.convenience.Survey.set_variable_labels.rst", "reference/api/tangles.convenience.Survey.set_variable_names.rst", "reference/api/tangles.convenience.Survey.set_variable_types.rst", "reference/api/tangles.convenience.Survey.shape.rst", "reference/api/tangles.convenience.Survey.summarize.rst", "reference/api/tangles.convenience.Survey.variable_info.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryCherryPicker.set_factoryfunc.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyTangles.rst", "reference/api/tangles.convenience.SurveyTangles.change_agreement.rst", "reference/api/tangles.convenience.SurveyTangles.explain_feature.rst", "reference/api/tangles.convenience.SurveyTangles.feature_system.rst", "reference/api/tangles.convenience.SurveyTangles.initialize_search.rst", "reference/api/tangles.convenience.SurveyTangles.load.rst", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata.rst", "reference/api/tangles.convenience.SurveyTangles.search.rst", "reference/api/tangles.convenience.SurveyTangles.specified_features.rst", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix.rst", "reference/api/tangles.convenience.SurveyTangles.typical_answers.rst", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound.rst", "reference/api/tangles.convenience.SurveyVariable.rst", "reference/api/tangles.convenience.SurveyVariable.add_values.rst", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.create_values.rst", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name.rst", "reference/api/tangles.convenience.SurveyVariable.replace_values.rst", "reference/api/tangles.convenience.SurveyVariable.set_value_labels.rst", "reference/api/tangles.convenience.SurveyVariable.set_values.rst", "reference/api/tangles.convenience.SurveyVariable.to_row.rst", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.value_class.rst", "reference/api/tangles.convenience.SurveyVariableValues.rst", "reference/api/tangles.convenience.SurveyVariableValues.invert_op.rst", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_feature_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.oriented_feature_ids_for_agreement.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_feature_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.search_object.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.sep_sys.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_score.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree.rst", "reference/api/tangles.convenience.UnionOfIntervals.rst", "reference/api/tangles.convenience.binary_unique_value_features.rst", "reference/api/tangles.convenience.convenience_features.rst", "reference/api/tangles.convenience.convenience_features.append_corner_features.rst", "reference/api/tangles.convenience.convenience_features.compute_corner_features.rst", "reference/api/tangles.convenience.create_features_all_unique_values.rst", "reference/api/tangles.convenience.create_features_split_regular_bins.rst", "reference/api/tangles.convenience.create_features_split_regular_ge.rst", "reference/api/tangles.convenience.create_order_function.rst", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides.rst", "reference/api/tangles.convenience.feature_factory_all_splits_ge.rst", "reference/api/tangles.convenience.nominalvar_features_all_cats.rst", "reference/api/tangles.convenience.order_works_on_features.rst", "reference/api/tangles.convenience.search_tangles.rst", "reference/api/tangles.convenience.search_tangles_uncrossed.rst", "reference/api/tangles.create_tot.rst", "reference/api/tangles.guiding.rst", "reference/api/tangles.guiding.get_tangle_by_path.rst", "reference/api/tangles.guiding.guided_tangle.rst", "reference/api/tangles.guiding.is_guiding.rst", "reference/api/tangles.search.rst", "reference/api/tangles.search.extending_tangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles.rst", "reference/api/tangles.search.progress.rst", "reference/api/tangles.search.progress.DefaultProgressCallback.rst", "reference/api/tangles.search.progress.SimpleProgressCallback.rst", "reference/api/tangles.separations.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.__getitem__.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.add_corner.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.add_features.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.add_seps.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.all_feature_ids.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.all_sep_ids.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.assemble_meta_info.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.compute_infimum.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.copy.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.count_big_side.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.crossing_seps.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_and_complement_size.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_metadata.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.feature_size.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.get_corners.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.get_feature_ids.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.get_sep_ids.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.is_le.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.is_nested.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.is_subset.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.metadata_matrix.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.separation_metadata.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.side_counts.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.with_array.rst", "reference/api/tangles.separations.AdvancedFeatureSystem.with_sparse_array.rst", "reference/api/tangles.separations.FeatureSystem.rst", "reference/api/tangles.separations.FeatureSystem.__getitem__.rst", "reference/api/tangles.separations.FeatureSystem.add_corner.rst", "reference/api/tangles.separations.FeatureSystem.add_features.rst", "reference/api/tangles.separations.FeatureSystem.add_seps.rst", "reference/api/tangles.separations.FeatureSystem.all_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.all_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info.rst", "reference/api/tangles.separations.FeatureSystem.compute_infimum.rst", "reference/api/tangles.separations.FeatureSystem.count_big_side.rst", "reference/api/tangles.separations.FeatureSystem.crossing_seps.rst", "reference/api/tangles.separations.FeatureSystem.feature_and_complement_size.rst", "reference/api/tangles.separations.FeatureSystem.feature_metadata.rst", "reference/api/tangles.separations.FeatureSystem.feature_size.rst", "reference/api/tangles.separations.FeatureSystem.get_corners.rst", "reference/api/tangles.separations.FeatureSystem.get_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.get_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.is_le.rst", "reference/api/tangles.separations.FeatureSystem.is_nested.rst", "reference/api/tangles.separations.FeatureSystem.is_subset.rst", "reference/api/tangles.separations.FeatureSystem.metadata_matrix.rst", "reference/api/tangles.separations.FeatureSystem.separation_metadata.rst", "reference/api/tangles.separations.FeatureSystem.side_counts.rst", "reference/api/tangles.separations.FeatureSystem.with_array.rst", "reference/api/tangles.separations.FeatureSystem.with_sparse_array.rst", "reference/api/tangles.separations.MetaData.rst", "reference/api/tangles.separations.MetaData.append.rst", "reference/api/tangles.separations.SetSeparationSystem.rst", "reference/api/tangles.separations.SetSeparationSystem.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystem.add_corner.rst", "reference/api/tangles.separations.SetSeparationSystem.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystem.count_big_side.rst", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.is_le.rst", "reference/api/tangles.separations.SetSeparationSystem.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystem.side_counts.rst", "reference/api/tangles.separations.SetSeparationSystem.with_array.rst", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.rst", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystemBase.add_corner.rst", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystemBase.count_big_side.rst", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_le.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystemBase.side_counts.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemOrderFunc.rst", "reference/api/tangles.separations.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators.rst", "reference/api/tangles.separations.atomic_sets.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_to_seps.rst", "reference/api/tangles.separations.atomic_sets.seps_to_atomic.rst", "reference/api/tangles.separations.finding.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative.rst", "reference/api/tangles.separations.finding.add_all_corners_of_features.rst", "reference/api/tangles.separations.finding.min_S_T_cut.rst", "reference/api/tangles.separations.finding.minimize_cut.rst", "reference/api/tangles.separations.finding.nodal_domains.rst", "reference/api/tangles.separations.finding.pca_features.rst", "reference/api/tangles.separations.finding.random_features.rst", "reference/api/tangles.separations.finding.spectral_features.rst", "reference/api/tangles.separations.finding.spectral_features_splitted.rst", "reference/api/tangles.separations.util.rst", "reference/api/tangles.separations.util.order_func_balance.rst", "reference/api/tangles.separations.util.order_func_min_side_size.rst", "reference/api/tangles.uncross_distinguishers.rst", "reference/api/tangles.util.rst", "reference/api/tangles.util.entropy.rst", "reference/api/tangles.util.entropy.colsplit_mutual_information.rst", "reference/api/tangles.util.entropy.datapointwise_information_gains.rst", "reference/api/tangles.util.entropy.entropy.rst", "reference/api/tangles.util.entropy.information_gain.rst", "reference/api/tangles.util.entropy.joint_entropy.rst", "reference/api/tangles.util.entropy.pairwise_mutual_information.rst", "reference/api/tangles.util.graph.rst", "reference/api/tangles.util.graph.connected_component_indicators.rst", "reference/api/tangles.util.graph.cut_weight.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.cut_weight_order.rst", "reference/api/tangles.util.graph.cut_weight.ncut_order.rst", "reference/api/tangles.util.graph.cut_weight.ratiocut_order.rst", "reference/api/tangles.util.graph.greedy_neighborhood.rst", "reference/api/tangles.util.graph.greedy_neighborhood_old.rst", "reference/api/tangles.util.graph.laplacian.rst", "reference/api/tangles.util.graph.minor.rst", "reference/api/tangles.util.graph.minor.contract_graph.rst", "reference/api/tangles.util.graph.modularity_matrix.rst", "reference/api/tangles.util.graph.normalized_laplacian.rst", "reference/api/tangles.util.graph.similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data.rst", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph.rst", "reference/api/tangles.util.graph.similarity.grid_distance_graph.rst", "reference/api/tangles.util.graph.similarity.hamming_similarity.rst", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph.rst", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors.rst", "reference/api/tangles.util.logic.rst", "reference/api/tangles.util.logic.ConjunctiveNormalForm.rst", "reference/api/tangles.util.logic.DisjunctiveNormalForm.rst", "reference/api/tangles.util.logic.LogicTerm.rst", "reference/api/tangles.util.logic.TextTerm.rst", "reference/api/tangles.util.logic.append.rst", "reference/api/tangles.util.logic.distribute.rst", "reference/api/tangles.util.logic.sep_to_term.rst", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic.rst", "reference/api/tangles.util.logic.simplify.rst", "reference/api/tangles.util.logic.term.rst", "reference/api/tangles.util.logic.term.SemanticTextTerm.rst", "reference/api/tangles.util.matrix_order.rst", "reference/api/tangles.util.matrix_order.MatrixOrderSVD.rst", "reference/api/tangles.util.matrix_order.covariance_order.rst", "reference/api/tangles.util.matrix_order.linear_similarity_from_dist_matrix.rst", "reference/api/tangles.util.matrix_order.linear_similarity_from_distances.rst", "reference/api/tangles.util.matrix_order.logdet_order.rst", "reference/api/tangles.util.matrix_order.matrix_order.rst", "reference/api/tangles.util.matrix_order.o_five.rst", "reference/api/tangles.util.matrix_order.o_seven.rst", "reference/api/tangles.util.preprocessing.rst", "reference/api/tangles.util.preprocessing.balance.rst", "reference/api/tangles.util.preprocessing.normalize_length.rst", "reference/api/tangles.util.preprocessing.standardize.rst", "reference/api/tangles.util.tree.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.draw.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.graph.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout.rst", "reference/api/tangles.util.tree.BinTreeNode.rst", "reference/api/tangles.util.tree.BinTreeNode.children.rst", "reference/api/tangles.util.tree.BinTreeNode.copy.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.util.tree.BinTreeNode.detach.rst", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix.rst", "reference/api/tangles.util.tree.BinTreeNode.is_leaf.rst", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.level.rst", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator.rst", "reference/api/tangles.util.tree.BinTreeNode.set_left_child.rst", "reference/api/tangles.util.tree.BinTreeNode.set_right_child.rst", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix.rst", "reference/api/tangles.util.tree.GraphNode.rst", "reference/api/tangles.util.tree.TreeNode.rst", "reference/api/tangles.util.tree.plot_tree.rst", "reference/api/tangles.util.tree.print_node_label.rst", "reference/api/tangles.util.ui.rst", "reference/api/tangles.util.ui.SplitGraph.rst", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses.rst", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary.rst", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles.rst", "reference/api/tangles.util.ui.XYPicker.rst", "reference/api/tangles.util.ui.XYPicker.show.rst", "reference/api/tangles.util.ui.XYPicker.update.rst", "reference/api/tangles.util.ui.plot_annotated.rst", "reference/api/tangles.util.ui.wrap_annotation_func_ax.rst", "reference/index.rst", "tutorials/Point Cloud Tangles.ipynb", "tutorials/Survey Tangles.ipynb", "tutorials/Tangles in Images I.ipynb", "tutorials/Tangles in Images II.ipynb", "tutorials/Tangles of Personality Traits.ipynb", "tutorials/index.rst"], "indexentries": {"__getitem__() (tangles.convenience.survey method)": [[131, "tangles.convenience.Survey.__getitem__", false]], "__getitem__() (tangles.separations.advancedfeaturesystem method)": [[237, "tangles.separations.AdvancedFeatureSystem.__getitem__", false]], "__getitem__() (tangles.separations.featuresystem method)": [[263, "tangles.separations.FeatureSystem.__getitem__", false]], "__getitem__() (tangles.separations.setseparationsystem method)": [[290, "tangles.separations.SetSeparationSystem.__getitem__", false]], "__getitem__() (tangles.separations.setseparationsystembase method)": [[308, "tangles.separations.SetSeparationSystemBase.__getitem__", false]], "add_all_corners_of_features() (in module tangles.separations.finding)": [[335, "tangles.separations.finding.add_all_corners_of_features", false]], "add_corner() (tangles.separations.advancedfeaturesystem method)": [[238, "tangles.separations.AdvancedFeatureSystem.add_corner", false]], "add_corner() (tangles.separations.featuresystem method)": [[264, "tangles.separations.FeatureSystem.add_corner", false]], "add_corner() (tangles.separations.setseparationsystem method)": [[291, "tangles.separations.SetSeparationSystem.add_corner", false]], "add_corner() (tangles.separations.setseparationsystembase method)": [[309, "tangles.separations.SetSeparationSystemBase.add_corner", false]], "add_features() (tangles.separations.advancedfeaturesystem method)": [[239, "tangles.separations.AdvancedFeatureSystem.add_features", false]], "add_features() (tangles.separations.featuresystem method)": [[265, "tangles.separations.FeatureSystem.add_features", false]], "add_seps() (tangles.separations.advancedfeaturesystem method)": [[240, "tangles.separations.AdvancedFeatureSystem.add_seps", false]], "add_seps() (tangles.separations.featuresystem method)": [[266, "tangles.separations.FeatureSystem.add_seps", false]], "add_seps() (tangles.separations.setseparationsystem method)": [[292, "tangles.separations.SetSeparationSystem.add_seps", false]], "add_seps() (tangles.separations.setseparationsystembase method)": [[310, "tangles.separations.SetSeparationSystemBase.add_seps", false]], "add_values() (tangles.convenience.surveyvariable method)": [[179, "tangles.convenience.SurveyVariable.add_values", false]], "advancedagreementfunc (class in tangles.agreement)": [[87, "tangles.agreement.AdvancedAgreementFunc", false]], "advancedfeaturesystem (class in tangles.separations)": [[236, "tangles.separations.AdvancedFeatureSystem", false]], "agreement_func() (in module tangles)": [[92, "tangles.agreement_func", false]], "agreementfunc (class in tangles.agreement)": [[88, "tangles.agreement.AgreementFunc", false]], "agreementfuncbitarray (class in tangles.agreement)": [[89, "tangles.agreement.AgreementFuncBitarray", false]], "agreementfuncbitarraybips (class in tangles.agreement)": [[90, "tangles.agreement.AgreementFuncBitarrayBips", false]], "all_feature_ids() (tangles.separations.advancedfeaturesystem method)": [[241, "tangles.separations.AdvancedFeatureSystem.all_feature_ids", false]], "all_feature_ids() (tangles.separations.featuresystem method)": [[267, "tangles.separations.FeatureSystem.all_feature_ids", false]], "all_oriented_feature_ids (tangles.convenience.tanglesweepfeaturesys property)": [[199, "tangles.convenience.TangleSweepFeatureSys.all_oriented_feature_ids", false]], "all_oriented_feature_ids (tangles.tanglesearchwidget property)": [[48, "tangles.TangleSearchWidget.all_oriented_feature_ids", false]], "all_oriented_feature_ids (tangles.uncrossingsweep property)": [[74, "tangles.UncrossingSweep.all_oriented_feature_ids", false]], "all_sep_ids() (tangles.separations.advancedfeaturesystem method)": [[242, "tangles.separations.AdvancedFeatureSystem.all_sep_ids", false]], "all_sep_ids() (tangles.separations.featuresystem method)": [[268, "tangles.separations.FeatureSystem.all_sep_ids", false]], "all_sep_ids() (tangles.separations.setseparationsystem method)": [[293, "tangles.separations.SetSeparationSystem.all_sep_ids", false]], "all_sep_ids() (tangles.separations.setseparationsystembase method)": [[311, "tangles.separations.SetSeparationSystemBase.all_sep_ids", false]], "all_values_as_list() (tangles.convenience.surveyvariable method)": [[180, "tangles.convenience.SurveyVariable.all_values_as_list", false]], "any_node() (tangles.treeoftangles method)": [[72, "tangles.TreeOfTangles.any_node", false]], "append() (in module tangles.util.logic)": [[390, "tangles.util.logic.append", false]], "append() (tangles.separations.metadata method)": [[288, "tangles.separations.MetaData.append", false]], "append_corner_features() (in module tangles.convenience.convenience_features)": [[211, "tangles.convenience.convenience_features.append_corner_features", false]], "append_separation() (tangles.tanglesweep method)": [[58, "tangles.TangleSweep.append_separation", false]], "assemble_meta_info() (tangles.separations.advancedfeaturesystem method)": [[243, "tangles.separations.AdvancedFeatureSystem.assemble_meta_info", false]], "assemble_meta_info() (tangles.separations.featuresystem method)": [[269, "tangles.separations.FeatureSystem.assemble_meta_info", false]], "assemble_meta_info() (tangles.separations.setseparationsystem method)": [[294, "tangles.separations.SetSeparationSystem.assemble_meta_info", false]], "assemble_meta_info() (tangles.separations.setseparationsystembase method)": [[312, "tangles.separations.SetSeparationSystemBase.assemble_meta_info", false]], "atomic_set_indicators() (in module tangles.separations.atomic_sets)": [[327, "tangles.separations.atomic_sets.atomic_set_indicators", false]], "atomic_sets() (in module tangles.separations.atomic_sets)": [[328, "tangles.separations.atomic_sets.atomic_sets", false]], "atomic_to_seps() (in module tangles.separations.atomic_sets)": [[329, "tangles.separations.atomic_sets.atomic_to_seps", false]], "balance() (in module tangles.util.preprocessing)": [[407, "tangles.util.preprocessing.balance", false]], "binary_unique_value_features() (in module tangles.convenience)": [[209, "tangles.convenience.binary_unique_value_features", false]], "bintreenetworkx (class in tangles.util.tree)": [[411, "tangles.util.tree.BinTreeNetworkX", false]], "bintreenode (class in tangles.util.tree)": [[418, "tangles.util.tree.BinTreeNode", false]], "calculateagreement (class in tangles.agreement)": [[91, "tangles.agreement.CalculateAgreement", false]], "change_agreement() (tangles.convenience.surveytangles method)": [[167, "tangles.convenience.SurveyTangles.change_agreement", false]], "change_discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[333, "tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative", false]], "change_discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[359, "tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative", false]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[362, "tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative", false]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[365, "tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative", false]], "check_variables() (tangles.convenience.survey method)": [[132, "tangles.convenience.Survey.check_variables", false]], "children() (tangles.ftreenode method)": [[3, "tangles.FTreeNode.children", false]], "children() (tangles.tangle method)": [[18, "tangles.Tangle.children", false]], "children() (tangles.util.tree.bintreenode method)": [[419, "tangles.util.tree.BinTreeNode.children", false]], "coherence_levels() (in module tangles.analysis)": [[94, "tangles.analysis.coherence_levels", false]], "colsplit_mutual_information() (in module tangles.util.entropy)": [[349, "tangles.util.entropy.colsplit_mutual_information", false]], "complete_rows() (tangles.convenience.survey method)": [[133, "tangles.convenience.Survey.complete_rows", false]], "complexity_levels() (in module tangles.analysis)": [[95, "tangles.analysis.complexity_levels", false]], "compute_corner_features() (in module tangles.convenience.convenience_features)": [[212, "tangles.convenience.convenience_features.compute_corner_features", false]], "compute_infimum() (tangles.separations.advancedfeaturesystem method)": [[244, "tangles.separations.AdvancedFeatureSystem.compute_infimum", false]], "compute_infimum() (tangles.separations.featuresystem method)": [[270, "tangles.separations.FeatureSystem.compute_infimum", false]], "compute_infimum() (tangles.separations.setseparationsystem method)": [[295, "tangles.separations.SetSeparationSystem.compute_infimum", false]], "compute_infimum() (tangles.separations.setseparationsystembase method)": [[313, "tangles.separations.SetSeparationSystemBase.compute_infimum", false]], "conjunctivenormalform (class in tangles.util.logic)": [[386, "tangles.util.logic.ConjunctiveNormalForm", false]], "connected_component_indicators() (in module tangles.util.graph)": [[356, "tangles.util.graph.connected_component_indicators", false]], "contract_graph() (in module tangles.util.graph.minor)": [[374, "tangles.util.graph.minor.contract_graph", false]], "copy() (tangles.convenience.survey method)": [[134, "tangles.convenience.Survey.copy", false]], "copy() (tangles.ftreenode method)": [[4, "tangles.FTreeNode.copy", false]], "copy() (tangles.separations.advancedfeaturesystem method)": [[245, "tangles.separations.AdvancedFeatureSystem.copy", false]], "copy() (tangles.tangle method)": [[19, "tangles.Tangle.copy", false]], "copy() (tangles.util.tree.bintreenode method)": [[420, "tangles.util.tree.BinTreeNode.copy", false]], "copy_subtree() (tangles.ftreenode method)": [[5, "tangles.FTreeNode.copy_subtree", false]], "copy_subtree() (tangles.tangle method)": [[20, "tangles.Tangle.copy_subtree", false]], "copy_subtree() (tangles.util.tree.bintreenode method)": [[421, "tangles.util.tree.BinTreeNode.copy_subtree", false]], "copy_subtree_into_children() (tangles.ftreenode method)": [[6, "tangles.FTreeNode.copy_subtree_into_children", false]], "copy_subtree_into_children() (tangles.tangle method)": [[21, "tangles.Tangle.copy_subtree_into_children", false]], "copy_subtree_into_children() (tangles.util.tree.bintreenode method)": [[422, "tangles.util.tree.BinTreeNode.copy_subtree_into_children", false]], "cosine_similarity() (in module tangles.util.graph.similarity)": [[378, "tangles.util.graph.similarity.cosine_similarity", false]], "cosine_similarity_graph_csr_data() (in module tangles.util.graph.similarity)": [[379, "tangles.util.graph.similarity.cosine_similarity_graph_csr_data", false]], "count_big_side() (tangles.separations.advancedfeaturesystem method)": [[246, "tangles.separations.AdvancedFeatureSystem.count_big_side", false]], "count_big_side() (tangles.separations.featuresystem method)": [[271, "tangles.separations.FeatureSystem.count_big_side", false]], "count_big_side() (tangles.separations.setseparationsystem method)": [[296, "tangles.separations.SetSeparationSystem.count_big_side", false]], "count_big_side() (tangles.separations.setseparationsystembase method)": [[314, "tangles.separations.SetSeparationSystemBase.count_big_side", false]], "count_number_of_unique_answers() (tangles.convenience.survey method)": [[135, "tangles.convenience.Survey.count_number_of_unique_answers", false]], "count_valid_answers_per_respondent() (tangles.convenience.survey method)": [[136, "tangles.convenience.Survey.count_valid_answers_per_respondent", false]], "covariance_order() (in module tangles.util.matrix_order)": [[399, "tangles.util.matrix_order.covariance_order", false]], "create_features() (tangles.convenience.simplesurveyfeaturefactory method)": [[119, "tangles.convenience.SimpleSurveyFeatureFactory.create_features", false]], "create_features() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesbothsides method)": [[122, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features", false]], "create_features() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesimplicit method)": [[125, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features", false]], "create_features() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesownfeatures method)": [[128, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features", false]], "create_features() (tangles.convenience.surveyfeaturefactory method)": [[157, "tangles.convenience.SurveyFeatureFactory.create_features", false]], "create_features() (tangles.convenience.surveyfeaturefactorycherrypicker method)": [[160, "tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features", false]], "create_features() (tangles.convenience.surveyfeaturefactorydecorator method)": [[164, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features", false]], "create_features_all_unique_values() (in module tangles.convenience)": [[213, "tangles.convenience.create_features_all_unique_values", false]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory method)": [[120, "tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesbothsides method)": [[123, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesimplicit method)": [[126, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactorymissingvaluesownfeatures method)": [[129, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactory method)": [[158, "tangles.convenience.SurveyFeatureFactory.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactorycherrypicker method)": [[161, "tangles.convenience.SurveyFeatureFactoryCherryPicker.create_features_for_single_col", false]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactorydecorator method)": [[165, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col", false]], "create_features_split_regular_bins() (in module tangles.convenience)": [[214, "tangles.convenience.create_features_split_regular_bins", false]], "create_features_split_regular_ge() (in module tangles.convenience)": [[215, "tangles.convenience.create_features_split_regular_ge", false]], "create_order_function() (in module tangles.convenience)": [[216, "tangles.convenience.create_order_function", false]], "create_tot() (in module tangles)": [[223, "tangles.create_tot", false]], "create_tot() (tangles.uncrossingsweep method)": [[75, "tangles.UncrossingSweep.create_tot", false]], "create_values() (tangles.convenience.surveyvariable method)": [[181, "tangles.convenience.SurveyVariable.create_values", false]], "crossing_seps() (tangles.separations.advancedfeaturesystem method)": [[247, "tangles.separations.AdvancedFeatureSystem.crossing_seps", false]], "crossing_seps() (tangles.separations.featuresystem method)": [[272, "tangles.separations.FeatureSystem.crossing_seps", false]], "crossing_seps() (tangles.separations.setseparationsystem method)": [[297, "tangles.separations.SetSeparationSystem.crossing_seps", false]], "crossing_seps() (tangles.separations.setseparationsystembase method)": [[315, "tangles.separations.SetSeparationSystemBase.crossing_seps", false]], "cut_weight_order() (in module tangles.util.graph.cut_weight)": [[367, "tangles.util.graph.cut_weight.cut_weight_order", false]], "cutweightorder (class in tangles.util.graph.cut_weight)": [[358, "tangles.util.graph.cut_weight.CutWeightOrder", false]], "datapointwise_information_gains() (in module tangles.util.entropy)": [[350, "tangles.util.entropy.datapointwise_information_gains", false]], "defaultprogresscallback (class in tangles.search.progress)": [[233, "tangles.search.progress.DefaultProgressCallback", false]], "degree() (tangles.totnode method)": [[67, "tangles.ToTNode.degree", false]], "detach() (tangles.ftreenode method)": [[7, "tangles.FTreeNode.detach", false]], "detach() (tangles.tangle method)": [[22, "tangles.Tangle.detach", false]], "detach() (tangles.util.tree.bintreenode method)": [[423, "tangles.util.tree.BinTreeNode.detach", false]], "discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[334, "tangles.separations.finding.OrderFuncDerivative.discrete_derivative", false]], "discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[360, "tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative", false]], "discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[363, "tangles.util.graph.cut_weight.NCutOrder.discrete_derivative", false]], "discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[366, "tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative", false]], "disjunctivenormalform (class in tangles.util.logic)": [[387, "tangles.util.logic.DisjunctiveNormalForm", false]], "distribute() (in module tangles.util.logic)": [[391, "tangles.util.logic.distribute", false]], "draw() (tangles.util.tree.bintreenetworkx method)": [[412, "tangles.util.tree.BinTreeNetworkX.draw", false]], "draw_ellipses() (tangles.util.ui.splitgraph method)": [[439, "tangles.util.ui.SplitGraph.draw_ellipses", false]], "draw_side_and_boundary() (tangles.util.ui.splitgraph method)": [[440, "tangles.util.ui.SplitGraph.draw_side_and_boundary", false]], "draw_stacked_circles() (tangles.util.ui.splitgraph method)": [[441, "tangles.util.ui.SplitGraph.draw_stacked_circles", false]], "entropy() (in module tangles.util.entropy)": [[351, "tangles.util.entropy.entropy", false]], "epsilon_neighborhood_graph() (in module tangles.util.graph.similarity)": [[380, "tangles.util.graph.similarity.epsilon_neighborhood_graph", false]], "equal_data() (tangles.tangle method)": [[23, "tangles.Tangle.equal_data", false]], "explain_feature() (tangles.convenience.surveytangles method)": [[168, "tangles.convenience.SurveyTangles.explain_feature", false]], "extend_tangles() (tangles.search.extending_tangles.extendingtangles method)": [[231, "tangles.search.extending_tangles.ExtendingTangles.extend_tangles", false]], "extendingtangles (class in tangles.search.extending_tangles)": [[230, "tangles.search.extending_tangles.ExtendingTangles", false]], "feats2seps_invalids_to_both_sides() (in module tangles.convenience)": [[217, "tangles.convenience.feats2seps_invalids_to_both_sides", false]], "feature_and_complement_size() (tangles.separations.advancedfeaturesystem method)": [[248, "tangles.separations.AdvancedFeatureSystem.feature_and_complement_size", false]], "feature_and_complement_size() (tangles.separations.featuresystem method)": [[273, "tangles.separations.FeatureSystem.feature_and_complement_size", false]], "feature_factory_all_splits_ge() (in module tangles.convenience)": [[218, "tangles.convenience.feature_factory_all_splits_ge", false]], "feature_metadata() (tangles.separations.advancedfeaturesystem method)": [[249, "tangles.separations.AdvancedFeatureSystem.feature_metadata", false]], "feature_metadata() (tangles.separations.featuresystem method)": [[274, "tangles.separations.FeatureSystem.feature_metadata", false]], "feature_size() (tangles.separations.advancedfeaturesystem method)": [[250, "tangles.separations.AdvancedFeatureSystem.feature_size", false]], "feature_size() (tangles.separations.featuresystem method)": [[275, "tangles.separations.FeatureSystem.feature_size", false]], "feature_system (tangles.convenience.surveytangles property)": [[169, "tangles.convenience.SurveyTangles.feature_system", false]], "featuresystem (class in tangles.separations)": [[262, "tangles.separations.FeatureSystem", false]], "from_indicator_matrix() (tangles.ftreenode class method)": [[8, "tangles.FTreeNode.from_indicator_matrix", false]], "from_indicator_matrix() (tangles.tangle class method)": [[24, "tangles.Tangle.from_indicator_matrix", false]], "from_indicator_matrix() (tangles.util.tree.bintreenode class method)": [[424, "tangles.util.tree.BinTreeNode.from_indicator_matrix", false]], "ftreenode (class in tangles)": [[2, "tangles.FTreeNode", false]], "get_corners() (tangles.separations.advancedfeaturesystem method)": [[251, "tangles.separations.AdvancedFeatureSystem.get_corners", false]], "get_corners() (tangles.separations.featuresystem method)": [[276, "tangles.separations.FeatureSystem.get_corners", false]], "get_corners() (tangles.separations.setseparationsystem method)": [[298, "tangles.separations.SetSeparationSystem.get_corners", false]], "get_corners() (tangles.separations.setseparationsystembase method)": [[316, "tangles.separations.SetSeparationSystemBase.get_corners", false]], "get_efficient_distinguishers() (tangles.tanglesearchtree method)": [[35, "tangles.TangleSearchTree.get_efficient_distinguishers", false]], "get_feature_ids() (tangles.separations.advancedfeaturesystem method)": [[252, "tangles.separations.AdvancedFeatureSystem.get_feature_ids", false]], "get_feature_ids() (tangles.separations.featuresystem method)": [[277, "tangles.separations.FeatureSystem.get_feature_ids", false]], "get_ids_from_label() (tangles.util.tree.bintreenetworkx method)": [[413, "tangles.util.tree.BinTreeNetworkX.get_ids_from_label", false]], "get_label() (tangles.util.tree.bintreenetworkx method)": [[414, "tangles.util.tree.BinTreeNetworkX.get_label", false]], "get_sep_ids() (tangles.separations.advancedfeaturesystem method)": [[253, "tangles.separations.AdvancedFeatureSystem.get_sep_ids", false]], "get_sep_ids() (tangles.separations.featuresystem method)": [[278, "tangles.separations.FeatureSystem.get_sep_ids", false]], "get_sep_ids() (tangles.separations.setseparationsystem method)": [[299, "tangles.separations.SetSeparationSystem.get_sep_ids", false]], "get_sep_ids() (tangles.separations.setseparationsystembase method)": [[317, "tangles.separations.SetSeparationSystemBase.get_sep_ids", false]], "get_tangle_by_path() (in module tangles.guiding)": [[225, "tangles.guiding.get_tangle_by_path", false]], "graph (tangles.util.tree.bintreenetworkx property)": [[415, "tangles.util.tree.BinTreeNetworkX.graph", false]], "graphnode (class in tangles.util.tree)": [[433, "tangles.util.tree.GraphNode", false]], "greedy_neighborhood() (in module tangles.util.graph)": [[370, "tangles.util.graph.greedy_neighborhood", false]], "greedy_neighborhood_old() (in module tangles.util.graph)": [[371, "tangles.util.graph.greedy_neighborhood_old", false]], "greedy_search() (tangles.tanglesweep method)": [[59, "tangles.TangleSweep.greedy_search", false]], "grid_distance_graph() (in module tangles.util.graph.similarity)": [[381, "tangles.util.graph.similarity.grid_distance_graph", false]], "guess_variable_types() (tangles.convenience.survey method)": [[137, "tangles.convenience.Survey.guess_variable_types", false]], "guess_variable_value_lists() (tangles.convenience.survey method)": [[138, "tangles.convenience.Survey.guess_variable_value_lists", false]], "guided_tangle() (in module tangles.guiding)": [[226, "tangles.guiding.guided_tangle", false]], "hamming_similarity() (in module tangles.util.graph.similarity)": [[382, "tangles.util.graph.similarity.hamming_similarity", false]], "hard_clustering_tuebingen() (in module tangles.analysis)": [[96, "tangles.analysis.hard_clustering_tuebingen", false]], "image_to_similarity_graph() (in module tangles.util.graph.similarity)": [[383, "tangles.util.graph.similarity.image_to_similarity_graph", false]], "information_gain() (in module tangles.util.entropy)": [[352, "tangles.util.entropy.information_gain", false]], "initialize_search() (tangles.convenience.surveytangles method)": [[170, "tangles.convenience.SurveyTangles.initialize_search", false]], "insert_separation() (tangles.tanglesweep method)": [[60, "tangles.TangleSweep.insert_separation", false]], "interpret_column_selection() (tangles.convenience.survey method)": [[139, "tangles.convenience.Survey.interpret_column_selection", false]], "invalid_values_as_list() (tangles.convenience.surveyvariable method)": [[182, "tangles.convenience.SurveyVariable.invalid_values_as_list", false]], "invert_op() (tangles.convenience.nominalvariablevalues static method)": [[102, "tangles.convenience.NominalVariableValues.invert_op", false]], "invert_op() (tangles.convenience.numericalvariablevalues static method)": [[106, "tangles.convenience.NumericalVariableValues.invert_op", false]], "invert_op() (tangles.convenience.ordinalvariablevalues static method)": [[115, "tangles.convenience.OrdinalVariableValues.invert_op", false]], "invert_op() (tangles.convenience.surveyvariablevalues static method)": [[195, "tangles.convenience.SurveyVariableValues.invert_op", false]], "is_guiding() (in module tangles.guiding)": [[227, "tangles.guiding.is_guiding", false]], "is_le() (tangles.separations.advancedfeaturesystem method)": [[254, "tangles.separations.AdvancedFeatureSystem.is_le", false]], "is_le() (tangles.separations.featuresystem method)": [[279, "tangles.separations.FeatureSystem.is_le", false]], "is_le() (tangles.separations.setseparationsystem method)": [[300, "tangles.separations.SetSeparationSystem.is_le", false]], "is_le() (tangles.separations.setseparationsystembase method)": [[318, "tangles.separations.SetSeparationSystemBase.is_le", false]], "is_leaf() (tangles.ftreenode method)": [[9, "tangles.FTreeNode.is_leaf", false]], "is_leaf() (tangles.tangle method)": [[25, "tangles.Tangle.is_leaf", false]], "is_leaf() (tangles.totnode method)": [[68, "tangles.ToTNode.is_leaf", false]], "is_leaf() (tangles.util.tree.bintreenode method)": [[425, "tangles.util.tree.BinTreeNode.is_leaf", false]], "is_nested() (tangles.separations.advancedfeaturesystem method)": [[255, "tangles.separations.AdvancedFeatureSystem.is_nested", false]], "is_nested() (tangles.separations.featuresystem method)": [[280, "tangles.separations.FeatureSystem.is_nested", false]], "is_nested() (tangles.separations.setseparationsystem method)": [[301, "tangles.separations.SetSeparationSystem.is_nested", false]], "is_nested() (tangles.separations.setseparationsystembase method)": [[319, "tangles.separations.SetSeparationSystemBase.is_nested", false]], "is_nominal_type() (tangles.convenience.surveyvariable method)": [[183, "tangles.convenience.SurveyVariable.is_nominal_type", false]], "is_numeric_type() (tangles.convenience.surveyvariable method)": [[184, "tangles.convenience.SurveyVariable.is_numeric_type", false]], "is_ordinal_type() (tangles.convenience.surveyvariable method)": [[185, "tangles.convenience.SurveyVariable.is_ordinal_type", false]], "is_subset() (tangles.separations.advancedfeaturesystem method)": [[256, "tangles.separations.AdvancedFeatureSystem.is_subset", false]], "is_subset() (tangles.separations.featuresystem method)": [[281, "tangles.separations.FeatureSystem.is_subset", false]], "is_valid_type() (tangles.convenience.surveyvariable method)": [[186, "tangles.convenience.SurveyVariable.is_valid_type", false]], "is_valid_type_name() (tangles.convenience.surveyvariable static method)": [[187, "tangles.convenience.SurveyVariable.is_valid_type_name", false]], "joint_entropy() (in module tangles.util.entropy)": [[353, "tangles.util.entropy.joint_entropy", false]], "k_nearest_neighbors() (in module tangles.util.graph.similarity)": [[384, "tangles.util.graph.similarity.k_nearest_neighbors", false]], "k_tangles() (tangles.tanglesearchtree method)": [[36, "tangles.TangleSearchTree.k_tangles", false]], "laplacian() (in module tangles.util.graph)": [[372, "tangles.util.graph.laplacian", false]], "leaves_in_subtree() (tangles.ftreenode method)": [[10, "tangles.FTreeNode.leaves_in_subtree", false]], "leaves_in_subtree() (tangles.tangle method)": [[26, "tangles.Tangle.leaves_in_subtree", false]], "leaves_in_subtree() (tangles.util.tree.bintreenode method)": [[426, "tangles.util.tree.BinTreeNode.leaves_in_subtree", false]], "level() (tangles.ftreenode method)": [[11, "tangles.FTreeNode.level", false]], "level() (tangles.tangle method)": [[27, "tangles.Tangle.level", false]], "level() (tangles.util.tree.bintreenode method)": [[427, "tangles.util.tree.BinTreeNode.level", false]], "level_in_subtree() (tangles.ftreenode method)": [[12, "tangles.FTreeNode.level_in_subtree", false]], "level_in_subtree() (tangles.tangle method)": [[28, "tangles.Tangle.level_in_subtree", false]], "level_in_subtree() (tangles.util.tree.bintreenode method)": [[428, "tangles.util.tree.BinTreeNode.level_in_subtree", false]], "limit (tangles.tanglesearchtree property)": [[37, "tangles.TangleSearchTree.limit", false]], "linear_similarity_from_dist_matrix() (in module tangles.util.matrix_order)": [[400, "tangles.util.matrix_order.linear_similarity_from_dist_matrix", false]], "linear_similarity_from_distances() (in module tangles.util.matrix_order)": [[401, "tangles.util.matrix_order.linear_similarity_from_distances", false]], "load() (tangles.convenience.survey static method)": [[140, "tangles.convenience.Survey.load", false]], "load() (tangles.convenience.surveytangles static method)": [[171, "tangles.convenience.SurveyTangles.load", false]], "load() (tangles.tanglesearchtree static method)": [[38, "tangles.TangleSearchTree.load", false]], "logdet_order() (in module tangles.util.matrix_order)": [[402, "tangles.util.matrix_order.logdet_order", false]], "logicterm (class in tangles.util.logic)": [[388, "tangles.util.logic.LogicTerm", false]], "lower_agreement() (tangles.convenience.tanglesweepfeaturesys method)": [[200, "tangles.convenience.TangleSweepFeatureSys.lower_agreement", false]], "lower_agreement() (tangles.tanglesearchwidget method)": [[49, "tangles.TangleSearchWidget.lower_agreement", false]], "lower_agreement() (tangles.uncrossingsweep method)": [[76, "tangles.UncrossingSweep.lower_agreement", false]], "matrix_order() (in module tangles.util.matrix_order)": [[403, "tangles.util.matrix_order.matrix_order", false]], "matrixordersvd (class in tangles.util.matrix_order)": [[398, "tangles.util.matrix_order.MatrixOrderSVD", false]], "maximal_tangles() (tangles.tanglesearchtree method)": [[39, "tangles.TangleSearchTree.maximal_tangles", false]], "metadata (class in tangles.separations)": [[287, "tangles.separations.MetaData", false]], "metadata_matrix() (tangles.separations.advancedfeaturesystem method)": [[257, "tangles.separations.AdvancedFeatureSystem.metadata_matrix", false]], "metadata_matrix() (tangles.separations.featuresystem method)": [[282, "tangles.separations.FeatureSystem.metadata_matrix", false]], "metadata_matrix() (tangles.separations.setseparationsystem method)": [[302, "tangles.separations.SetSeparationSystem.metadata_matrix", false]], "metadata_matrix() (tangles.separations.setseparationsystembase method)": [[320, "tangles.separations.SetSeparationSystemBase.metadata_matrix", false]], "min_s_t_cut() (in module tangles.separations.finding)": [[336, "tangles.separations.finding.min_S_T_cut", false]], "minimize_cut() (in module tangles.separations.finding)": [[337, "tangles.separations.finding.minimize_cut", false]], "modularity_matrix() (in module tangles.util.graph)": [[375, "tangles.util.graph.modularity_matrix", false]], "module": [[1, "module-tangles", false], [86, "module-tangles.agreement", false], [93, "module-tangles.analysis", false], [100, "module-tangles.convenience", false], [210, "module-tangles.convenience.convenience_features", false], [224, "module-tangles.guiding", false], [228, "module-tangles.search", false], [229, "module-tangles.search.extending_tangles", false], [232, "module-tangles.search.progress", false], [235, "module-tangles.separations", false], [326, "module-tangles.separations.atomic_sets", false], [331, "module-tangles.separations.finding", false], [343, "module-tangles.separations.util", false], [347, "module-tangles.util", false], [348, "module-tangles.util.entropy", false], [355, "module-tangles.util.graph", false], [357, "module-tangles.util.graph.cut_weight", false], [373, "module-tangles.util.graph.minor", false], [377, "module-tangles.util.graph.similarity", false], [385, "module-tangles.util.logic", false], [392, "module-tangles.util.logic.sep_to_term", false], [395, "module-tangles.util.logic.term", false], [397, "module-tangles.util.matrix_order", false], [406, "module-tangles.util.preprocessing", false], [410, "module-tangles.util.tree", false], [437, "module-tangles.util.ui", false]], "ncut_order() (in module tangles.util.graph.cut_weight)": [[368, "tangles.util.graph.cut_weight.ncut_order", false]], "ncutorder (class in tangles.util.graph.cut_weight)": [[361, "tangles.util.graph.cut_weight.NCutOrder", false]], "neighbours (tangles.totnode property)": [[69, "tangles.ToTNode.neighbours", false]], "nodal_domains() (in module tangles.separations.finding)": [[338, "tangles.separations.finding.nodal_domains", false]], "nominalvar_features_all_cats() (in module tangles.convenience)": [[219, "tangles.convenience.nominalvar_features_all_cats", false]], "nominalvariablevalues (class in tangles.convenience)": [[101, "tangles.convenience.NominalVariableValues", false]], "normalize_length() (in module tangles.util.preprocessing)": [[408, "tangles.util.preprocessing.normalize_length", false]], "normalized_laplacian() (in module tangles.util.graph)": [[376, "tangles.util.graph.normalized_laplacian", false]], "num_questions (tangles.convenience.survey property)": [[141, "tangles.convenience.Survey.num_questions", false]], "num_respondents (tangles.convenience.survey property)": [[142, "tangles.convenience.Survey.num_respondents", false]], "number_of_separations (tangles.tanglesearchtree property)": [[40, "tangles.TangleSearchTree.number_of_separations", false]], "numericalvariablevalues (class in tangles.convenience)": [[105, "tangles.convenience.NumericalVariableValues", false]], "o_five() (in module tangles.util.matrix_order)": [[404, "tangles.util.matrix_order.o_five", false]], "o_seven() (in module tangles.util.matrix_order)": [[405, "tangles.util.matrix_order.o_seven", false]], "open() (tangles.tangle method)": [[29, "tangles.Tangle.open", false]], "order_func_balance() (in module tangles.separations.util)": [[344, "tangles.separations.util.order_func_balance", false]], "order_func_min_side_size() (in module tangles.separations.util)": [[345, "tangles.separations.util.order_func_min_side_size", false]], "order_works_on_features() (in module tangles.convenience)": [[220, "tangles.convenience.order_works_on_features", false]], "ordered_metadata() (tangles.convenience.surveytangles method)": [[172, "tangles.convenience.SurveyTangles.ordered_metadata", false]], "orderfuncderivative (class in tangles.separations.finding)": [[332, "tangles.separations.finding.OrderFuncDerivative", false]], "orderfunctiono1 (class in tangles.convenience)": [[109, "tangles.convenience.OrderFunctionO1", false]], "orderfunctiono1biased (class in tangles.convenience)": [[110, "tangles.convenience.OrderFunctionO1biased", false]], "orderfunctiono2 (class in tangles.convenience)": [[111, "tangles.convenience.OrderFunctionO2", false]], "orderfunctiono3 (class in tangles.convenience)": [[112, "tangles.convenience.OrderFunctionO3", false]], "orderfunctiono4 (class in tangles.convenience)": [[113, "tangles.convenience.OrderFunctionO4", false]], "ordinalvariablevalues (class in tangles.convenience)": [[114, "tangles.convenience.OrdinalVariableValues", false]], "oriented_feature_ids_for_agreement() (tangles.convenience.tanglesweepfeaturesys method)": [[201, "tangles.convenience.TangleSweepFeatureSys.oriented_feature_ids_for_agreement", false]], "oriented_feature_ids_for_agreement() (tangles.tanglesearchwidget method)": [[50, "tangles.TangleSearchWidget.oriented_feature_ids_for_agreement", false]], "oriented_feature_ids_for_agreement() (tangles.uncrossingsweep method)": [[77, "tangles.UncrossingSweep.oriented_feature_ids_for_agreement", false]], "original_feature_ids (tangles.convenience.tanglesweepfeaturesys property)": [[202, "tangles.convenience.TangleSweepFeatureSys.original_feature_ids", false]], "original_feature_ids (tangles.tanglesearchwidget property)": [[51, "tangles.TangleSearchWidget.original_feature_ids", false]], "original_feature_ids (tangles.uncrossingsweep property)": [[78, "tangles.UncrossingSweep.original_feature_ids", false]], "other_end() (tangles.totedge method)": [[65, "tangles.ToTEdge.other_end", false]], "pairwise_mutual_information() (in module tangles.util.entropy)": [[354, "tangles.util.entropy.pairwise_mutual_information", false]], "path_from_root_indicator() (tangles.ftreenode method)": [[13, "tangles.FTreeNode.path_from_root_indicator", false]], "path_from_root_indicator() (tangles.tangle method)": [[30, "tangles.Tangle.path_from_root_indicator", false]], "path_from_root_indicator() (tangles.util.tree.bintreenode method)": [[429, "tangles.util.tree.BinTreeNode.path_from_root_indicator", false]], "pca_features() (in module tangles.separations.finding)": [[339, "tangles.separations.finding.pca_features", false]], "plot_annotated() (in module tangles.util.ui)": [[445, "tangles.util.ui.plot_annotated", false]], "plot_tree() (in module tangles.util.tree)": [[435, "tangles.util.tree.plot_tree", false]], "possible_values_representation() (tangles.convenience.nominalvariablevalues method)": [[103, "tangles.convenience.NominalVariableValues.possible_values_representation", false]], "possible_values_representation() (tangles.convenience.numericalvariablevalues method)": [[107, "tangles.convenience.NumericalVariableValues.possible_values_representation", false]], "possible_values_representation() (tangles.convenience.ordinalvariablevalues method)": [[116, "tangles.convenience.OrdinalVariableValues.possible_values_representation", false]], "possible_values_representation() (tangles.convenience.surveyvariablevalues method)": [[196, "tangles.convenience.SurveyVariableValues.possible_values_representation", false]], "print_node_label() (in module tangles.util.tree)": [[436, "tangles.util.tree.print_node_label", false]], "random_features() (in module tangles.separations.finding)": [[340, "tangles.separations.finding.random_features", false]], "ratiocut_order() (in module tangles.util.graph.cut_weight)": [[369, "tangles.util.graph.cut_weight.ratiocut_order", false]], "ratiocutorder (class in tangles.util.graph.cut_weight)": [[364, "tangles.util.graph.cut_weight.RatioCutOrder", false]], "recursionlogic (class in tangles.util.logic.sep_to_term)": [[393, "tangles.util.logic.sep_to_term.RecursionLogic", false]], "relabel() (tangles.util.tree.bintreenetworkx method)": [[416, "tangles.util.tree.BinTreeNetworkX.relabel", false]], "replace_values() (tangles.convenience.surveyvariable method)": [[188, "tangles.convenience.SurveyVariable.replace_values", false]], "replace_variable_value_labels() (tangles.convenience.survey method)": [[143, "tangles.convenience.Survey.replace_variable_value_labels", false]], "replace_variable_values() (tangles.convenience.survey method)": [[144, "tangles.convenience.Survey.replace_variable_values", false]], "root (tangles.tanglesearchtree property)": [[41, "tangles.TangleSearchTree.root", false]], "save() (tangles.convenience.survey method)": [[145, "tangles.convenience.Survey.save", false]], "save() (tangles.tanglesearchtree method)": [[42, "tangles.TangleSearchTree.save", false]], "search() (tangles.convenience.surveytangles class method)": [[173, "tangles.convenience.SurveyTangles.search", false]], "search_object (tangles.convenience.tanglesweepfeaturesys property)": [[203, "tangles.convenience.TangleSweepFeatureSys.search_object", false]], "search_object (tangles.tanglesearchwidget property)": [[52, "tangles.TangleSearchWidget.search_object", false]], "search_object (tangles.uncrossingsweep property)": [[79, "tangles.UncrossingSweep.search_object", false]], "search_tangles() (in module tangles.convenience)": [[221, "tangles.convenience.search_tangles", false]], "search_tangles_uncrossed() (in module tangles.convenience)": [[222, "tangles.convenience.search_tangles_uncrossed", false]], "search_tree() (tangles.tanglesearchtree method)": [[43, "tangles.TangleSearchTree.search_tree", false]], "select_questions() (tangles.convenience.survey method)": [[146, "tangles.convenience.Survey.select_questions", false]], "select_respondents() (tangles.convenience.survey method)": [[147, "tangles.convenience.Survey.select_respondents", false]], "semantictextterm (class in tangles.util.logic.term)": [[396, "tangles.util.logic.term.SemanticTextTerm", false]], "sep_ids (tangles.tanglesearchtree property)": [[44, "tangles.TangleSearchTree.sep_ids", false]], "sep_sys (tangles.convenience.tanglesweepfeaturesys property)": [[204, "tangles.convenience.TangleSweepFeatureSys.sep_sys", false]], "sep_sys (tangles.tanglesearchwidget property)": [[53, "tangles.TangleSearchWidget.sep_sys", false]], "sep_sys (tangles.uncrossingsweep property)": [[80, "tangles.UncrossingSweep.sep_sys", false]], "separation_metadata() (tangles.separations.advancedfeaturesystem method)": [[258, "tangles.separations.AdvancedFeatureSystem.separation_metadata", false]], "separation_metadata() (tangles.separations.featuresystem method)": [[283, "tangles.separations.FeatureSystem.separation_metadata", false]], "separation_metadata() (tangles.separations.setseparationsystem method)": [[303, "tangles.separations.SetSeparationSystem.separation_metadata", false]], "separation_metadata() (tangles.separations.setseparationsystembase method)": [[321, "tangles.separations.SetSeparationSystemBase.separation_metadata", false]], "seps_to_atomic() (in module tangles.separations.atomic_sets)": [[330, "tangles.separations.atomic_sets.seps_to_atomic", false]], "set_factoryfunc() (tangles.convenience.surveyfeaturefactorycherrypicker method)": [[162, "tangles.convenience.SurveyFeatureFactoryCherryPicker.set_factoryfunc", false]], "set_label() (tangles.totnode method)": [[70, "tangles.ToTNode.set_label", false]], "set_left_child() (tangles.ftreenode method)": [[14, "tangles.FTreeNode.set_left_child", false]], "set_left_child() (tangles.tangle method)": [[31, "tangles.Tangle.set_left_child", false]], "set_left_child() (tangles.util.tree.bintreenode method)": [[430, "tangles.util.tree.BinTreeNode.set_left_child", false]], "set_pyreadstat_meta_data() (tangles.convenience.survey method)": [[148, "tangles.convenience.Survey.set_pyreadstat_meta_data", false]], "set_right_child() (tangles.ftreenode method)": [[15, "tangles.FTreeNode.set_right_child", false]], "set_right_child() (tangles.tangle method)": [[32, "tangles.Tangle.set_right_child", false]], "set_right_child() (tangles.util.tree.bintreenode method)": [[431, "tangles.util.tree.BinTreeNode.set_right_child", false]], "set_valid_and_invalid_variable_values() (tangles.convenience.survey method)": [[149, "tangles.convenience.Survey.set_valid_and_invalid_variable_values", false]], "set_value_labels() (tangles.convenience.surveyvariable method)": [[189, "tangles.convenience.SurveyVariable.set_value_labels", false]], "set_values() (tangles.convenience.surveyvariable method)": [[190, "tangles.convenience.SurveyVariable.set_values", false]], "set_variable_labels() (tangles.convenience.survey method)": [[150, "tangles.convenience.Survey.set_variable_labels", false]], "set_variable_names() (tangles.convenience.survey method)": [[151, "tangles.convenience.Survey.set_variable_names", false]], "set_variable_types() (tangles.convenience.survey method)": [[152, "tangles.convenience.Survey.set_variable_types", false]], "setseparationsystem (class in tangles.separations)": [[289, "tangles.separations.SetSeparationSystem", false]], "setseparationsystembase (class in tangles.separations)": [[307, "tangles.separations.SetSeparationSystemBase", false]], "setseparationsystemorderfunc (class in tangles.separations)": [[325, "tangles.separations.SetSeparationSystemOrderFunc", false]], "shape (tangles.convenience.survey property)": [[153, "tangles.convenience.Survey.shape", false]], "show() (tangles.util.ui.xypicker method)": [[443, "tangles.util.ui.XYPicker.show", false]], "side_counts() (tangles.separations.advancedfeaturesystem method)": [[259, "tangles.separations.AdvancedFeatureSystem.side_counts", false]], "side_counts() (tangles.separations.featuresystem method)": [[284, "tangles.separations.FeatureSystem.side_counts", false]], "side_counts() (tangles.separations.setseparationsystem method)": [[304, "tangles.separations.SetSeparationSystem.side_counts", false]], "side_counts() (tangles.separations.setseparationsystembase method)": [[322, "tangles.separations.SetSeparationSystemBase.side_counts", false]], "simpleprogresscallback (class in tangles.search.progress)": [[234, "tangles.search.progress.SimpleProgressCallback", false]], "simplesurveyfeaturefactory (class in tangles.convenience)": [[118, "tangles.convenience.SimpleSurveyFeatureFactory", false]], "simplesurveyfeaturefactorymissingvaluesbothsides (class in tangles.convenience)": [[121, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides", false]], "simplesurveyfeaturefactorymissingvaluesimplicit (class in tangles.convenience)": [[124, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit", false]], "simplesurveyfeaturefactorymissingvaluesownfeatures (class in tangles.convenience)": [[127, "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures", false]], "simplify() (in module tangles.util.logic)": [[394, "tangles.util.logic.simplify", false]], "soft_clustering_tuebingen() (in module tangles.analysis)": [[97, "tangles.analysis.soft_clustering_tuebingen", false]], "specified_features() (tangles.convenience.surveytangles method)": [[174, "tangles.convenience.SurveyTangles.specified_features", false]], "spectral_features() (in module tangles.separations.finding)": [[341, "tangles.separations.finding.spectral_features", false]], "spectral_features_splitted() (in module tangles.separations.finding)": [[342, "tangles.separations.finding.spectral_features_splitted", false]], "splitgraph (class in tangles.util.ui)": [[438, "tangles.util.ui.SplitGraph", false]], "standardize() (in module tangles.util.preprocessing)": [[409, "tangles.util.preprocessing.standardize", false]], "summarize() (tangles.convenience.survey method)": [[154, "tangles.convenience.Survey.summarize", false]], "survey (class in tangles.convenience)": [[130, "tangles.convenience.Survey", false]], "surveyfeaturefactory (class in tangles.convenience)": [[156, "tangles.convenience.SurveyFeatureFactory", false]], "surveyfeaturefactorycherrypicker (class in tangles.convenience)": [[159, "tangles.convenience.SurveyFeatureFactoryCherryPicker", false]], "surveyfeaturefactorydecorator (class in tangles.convenience)": [[163, "tangles.convenience.SurveyFeatureFactoryDecorator", false]], "surveytangles (class in tangles.convenience)": [[166, "tangles.convenience.SurveyTangles", false]], "surveyvariable (class in tangles.convenience)": [[178, "tangles.convenience.SurveyVariable", false]], "surveyvariablevalues (class in tangles.convenience)": [[194, "tangles.convenience.SurveyVariableValues", false]], "sweep_below() (tangles.tanglesweep method)": [[61, "tangles.TangleSweep.sweep_below", false]], "sweep_below() (tangles.uncrossingsweep method)": [[81, "tangles.UncrossingSweep.sweep_below", false]], "sweep_one() (tangles.tanglesweep method)": [[62, "tangles.TangleSweep.sweep_one", false]], "sweep_one() (tangles.uncrossingsweep method)": [[82, "tangles.UncrossingSweep.sweep_one", false]], "tangle (class in tangles)": [[17, "tangles.Tangle", false]], "tangle_matrix() (tangles.convenience.surveytangles method)": [[175, "tangles.convenience.SurveyTangles.tangle_matrix", false]], "tangle_matrix() (tangles.convenience.tanglesweepfeaturesys method)": [[205, "tangles.convenience.TangleSweepFeatureSys.tangle_matrix", false]], "tangle_matrix() (tangles.tanglesearchtree method)": [[45, "tangles.TangleSearchTree.tangle_matrix", false]], "tangle_matrix() (tangles.tanglesearchwidget method)": [[54, "tangles.TangleSearchWidget.tangle_matrix", false]], "tangle_matrix() (tangles.uncrossingsweep method)": [[83, "tangles.UncrossingSweep.tangle_matrix", false]], "tangle_score() (in module tangles.analysis)": [[98, "tangles.analysis.tangle_score", false]], "tangle_score() (tangles.convenience.tanglesweepfeaturesys method)": [[206, "tangles.convenience.TangleSweepFeatureSys.tangle_score", false]], "tangle_score() (tangles.tanglesearchwidget method)": [[55, "tangles.TangleSearchWidget.tangle_score", false]], "tangle_score() (tangles.uncrossingsweep method)": [[84, "tangles.UncrossingSweep.tangle_score", false]], "tangles": [[1, "module-tangles", false]], "tangles.agreement": [[86, "module-tangles.agreement", false]], "tangles.analysis": [[93, "module-tangles.analysis", false]], "tangles.convenience": [[100, "module-tangles.convenience", false]], "tangles.convenience.convenience_features": [[210, "module-tangles.convenience.convenience_features", false]], "tangles.guiding": [[224, "module-tangles.guiding", false]], "tangles.search": [[228, "module-tangles.search", false]], "tangles.search.extending_tangles": [[229, "module-tangles.search.extending_tangles", false]], "tangles.search.progress": [[232, "module-tangles.search.progress", false]], "tangles.separations": [[235, "module-tangles.separations", false]], "tangles.separations.atomic_sets": [[326, "module-tangles.separations.atomic_sets", false]], "tangles.separations.finding": [[331, "module-tangles.separations.finding", false]], "tangles.separations.util": [[343, "module-tangles.separations.util", false]], "tangles.util": [[347, "module-tangles.util", false]], "tangles.util.entropy": [[348, "module-tangles.util.entropy", false]], "tangles.util.graph": [[355, "module-tangles.util.graph", false]], "tangles.util.graph.cut_weight": [[357, "module-tangles.util.graph.cut_weight", false]], "tangles.util.graph.minor": [[373, "module-tangles.util.graph.minor", false]], "tangles.util.graph.similarity": [[377, "module-tangles.util.graph.similarity", false]], "tangles.util.logic": [[385, "module-tangles.util.logic", false]], "tangles.util.logic.sep_to_term": [[392, "module-tangles.util.logic.sep_to_term", false]], "tangles.util.logic.term": [[395, "module-tangles.util.logic.term", false]], "tangles.util.matrix_order": [[397, "module-tangles.util.matrix_order", false]], "tangles.util.preprocessing": [[406, "module-tangles.util.preprocessing", false]], "tangles.util.tree": [[410, "module-tangles.util.tree", false]], "tangles.util.ui": [[437, "module-tangles.util.ui", false]], "tanglesearchtree (class in tangles)": [[34, "tangles.TangleSearchTree", false]], "tanglesearchwidget (class in tangles)": [[47, "tangles.TangleSearchWidget", false]], "tanglesweep (class in tangles)": [[57, "tangles.TangleSweep", false]], "tanglesweepfeaturesys (class in tangles.convenience)": [[198, "tangles.convenience.TangleSweepFeatureSys", false]], "textterm (class in tangles.util.logic)": [[389, "tangles.util.logic.TextTerm", false]], "to_indicator_matrix() (tangles.ftreenode static method)": [[16, "tangles.FTreeNode.to_indicator_matrix", false]], "to_indicator_matrix() (tangles.tangle static method)": [[33, "tangles.Tangle.to_indicator_matrix", false]], "to_indicator_matrix() (tangles.util.tree.bintreenode static method)": [[432, "tangles.util.tree.BinTreeNode.to_indicator_matrix", false]], "to_row() (tangles.convenience.surveyvariable method)": [[191, "tangles.convenience.SurveyVariable.to_row", false]], "totedge (class in tangles)": [[64, "tangles.ToTEdge", false]], "totnode (class in tangles)": [[66, "tangles.ToTNode", false]], "tree (tangles.convenience.tanglesweepfeaturesys property)": [[207, "tangles.convenience.TangleSweepFeatureSys.tree", false]], "tree (tangles.tanglesearchwidget property)": [[56, "tangles.TangleSearchWidget.tree", false]], "tree (tangles.tanglesweep property)": [[63, "tangles.TangleSweep.tree", false]], "tree (tangles.uncrossingsweep property)": [[85, "tangles.UncrossingSweep.tree", false]], "tree_height_for_agreement() (tangles.tanglesearchtree method)": [[46, "tangles.TangleSearchTree.tree_height_for_agreement", false]], "treenode (class in tangles.util.tree)": [[434, "tangles.util.tree.TreeNode", false]], "treeoftangles (class in tangles)": [[71, "tangles.TreeOfTangles", false]], "tst_layout() (tangles.util.tree.bintreenetworkx method)": [[417, "tangles.util.tree.BinTreeNetworkX.tst_layout", false]], "typical_answers() (tangles.convenience.surveytangles method)": [[176, "tangles.convenience.SurveyTangles.typical_answers", false]], "uncross_distinguishers() (in module tangles)": [[346, "tangles.uncross_distinguishers", false]], "uncrossingsweep (class in tangles)": [[73, "tangles.UncrossingSweep", false]], "unionofintervals (class in tangles.convenience)": [[208, "tangles.convenience.UnionOfIntervals", false]], "update() (tangles.util.ui.xypicker method)": [[444, "tangles.util.ui.XYPicker.update", false]], "update_values_for_specification() (tangles.convenience.nominalvariablevalues method)": [[104, "tangles.convenience.NominalVariableValues.update_values_for_specification", false]], "update_values_for_specification() (tangles.convenience.numericalvariablevalues method)": [[108, "tangles.convenience.NumericalVariableValues.update_values_for_specification", false]], "update_values_for_specification() (tangles.convenience.ordinalvariablevalues method)": [[117, "tangles.convenience.OrdinalVariableValues.update_values_for_specification", false]], "update_values_for_specification() (tangles.convenience.surveyvariablevalues method)": [[197, "tangles.convenience.SurveyVariableValues.update_values_for_specification", false]], "valid_agreement_lower_bound (tangles.convenience.surveytangles property)": [[177, "tangles.convenience.SurveyTangles.valid_agreement_lower_bound", false]], "valid_values_as_list() (tangles.convenience.surveyvariable method)": [[192, "tangles.convenience.SurveyVariable.valid_values_as_list", false]], "value_class() (tangles.convenience.surveyvariable method)": [[193, "tangles.convenience.SurveyVariable.value_class", false]], "variable_info() (tangles.convenience.survey method)": [[155, "tangles.convenience.Survey.variable_info", false]], "visibility() (in module tangles.analysis)": [[99, "tangles.analysis.visibility", false]], "with_array() (tangles.separations.advancedfeaturesystem class method)": [[260, "tangles.separations.AdvancedFeatureSystem.with_array", false]], "with_array() (tangles.separations.featuresystem class method)": [[285, "tangles.separations.FeatureSystem.with_array", false]], "with_array() (tangles.separations.setseparationsystem class method)": [[305, "tangles.separations.SetSeparationSystem.with_array", false]], "with_array() (tangles.separations.setseparationsystembase class method)": [[323, "tangles.separations.SetSeparationSystemBase.with_array", false]], "with_sparse_array() (tangles.separations.advancedfeaturesystem class method)": [[261, "tangles.separations.AdvancedFeatureSystem.with_sparse_array", false]], "with_sparse_array() (tangles.separations.featuresystem class method)": [[286, "tangles.separations.FeatureSystem.with_sparse_array", false]], "with_sparse_array() (tangles.separations.setseparationsystem class method)": [[306, "tangles.separations.SetSeparationSystem.with_sparse_array", false]], "with_sparse_array() (tangles.separations.setseparationsystembase class method)": [[324, "tangles.separations.SetSeparationSystemBase.with_sparse_array", false]], "wrap_annotation_func_ax() (in module tangles.util.ui)": [[446, "tangles.util.ui.wrap_annotation_func_ax", false]], "xypicker (class in tangles.util.ui)": [[442, "tangles.util.ui.XYPicker", false]]}, "objects": {"": [[1, 0, 0, "-", "tangles"]], "tangles": [[2, 1, 1, "", "FTreeNode"], [17, 1, 1, "", "Tangle"], [34, 1, 1, "", "TangleSearchTree"], [47, 1, 1, "", "TangleSearchWidget"], [57, 1, 1, "", "TangleSweep"], [64, 1, 1, "", "ToTEdge"], [66, 1, 1, "", "ToTNode"], [71, 1, 1, "", "TreeOfTangles"], [73, 1, 1, "", "UncrossingSweep"], [86, 0, 0, "-", "agreement"], [92, 4, 1, "", "agreement_func"], [93, 0, 0, "-", "analysis"], [100, 0, 0, "-", "convenience"], [223, 4, 1, "", "create_tot"], [224, 0, 0, "-", "guiding"], [228, 0, 0, "-", "search"], [235, 0, 0, "-", "separations"], [346, 4, 1, "", "uncross_distinguishers"], [347, 0, 0, "-", "util"]], "tangles.FTreeNode": [[3, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [5, 2, 1, "", "copy_subtree"], [6, 2, 1, "", "copy_subtree_into_children"], [7, 2, 1, "", "detach"], [8, 2, 1, "", "from_indicator_matrix"], [9, 2, 1, "", "is_leaf"], [10, 2, 1, "", "leaves_in_subtree"], [11, 2, 1, "", "level"], [12, 2, 1, "", "level_in_subtree"], [13, 2, 1, "", "path_from_root_indicator"], [14, 2, 1, "", "set_left_child"], [15, 2, 1, "", "set_right_child"], [16, 2, 1, "", "to_indicator_matrix"]], "tangles.Tangle": [[18, 2, 1, "", "children"], [19, 2, 1, "", "copy"], [20, 2, 1, "", "copy_subtree"], [21, 2, 1, "", "copy_subtree_into_children"], [22, 2, 1, "", "detach"], [23, 2, 1, "", "equal_data"], [24, 2, 1, "", "from_indicator_matrix"], [25, 2, 1, "", "is_leaf"], [26, 2, 1, "", "leaves_in_subtree"], [27, 2, 1, "", "level"], [28, 2, 1, "", "level_in_subtree"], [29, 2, 1, "", "open"], [30, 2, 1, "", "path_from_root_indicator"], [31, 2, 1, "", "set_left_child"], [32, 2, 1, "", "set_right_child"], [33, 2, 1, "", "to_indicator_matrix"]], "tangles.TangleSearchTree": [[35, 2, 1, "", "get_efficient_distinguishers"], [36, 2, 1, "", "k_tangles"], [37, 3, 1, "", "limit"], [38, 2, 1, "", "load"], [39, 2, 1, "", "maximal_tangles"], [40, 3, 1, "", "number_of_separations"], [41, 3, 1, "", "root"], [42, 2, 1, "", "save"], [43, 2, 1, "", "search_tree"], [44, 3, 1, "", "sep_ids"], [45, 2, 1, "", "tangle_matrix"], [46, 2, 1, "", "tree_height_for_agreement"]], "tangles.TangleSearchWidget": [[48, 3, 1, "", "all_oriented_feature_ids"], [49, 2, 1, "", "lower_agreement"], [50, 2, 1, "", "oriented_feature_ids_for_agreement"], [51, 3, 1, "", "original_feature_ids"], [52, 3, 1, "", "search_object"], [53, 3, 1, "", "sep_sys"], [54, 2, 1, "", "tangle_matrix"], [55, 2, 1, "", "tangle_score"], [56, 3, 1, "", "tree"]], "tangles.TangleSweep": [[58, 2, 1, "", "append_separation"], [59, 2, 1, "", "greedy_search"], [60, 2, 1, "", "insert_separation"], [61, 2, 1, "", "sweep_below"], [62, 2, 1, "", "sweep_one"], [63, 3, 1, "", "tree"]], "tangles.ToTEdge": [[65, 2, 1, "", "other_end"]], "tangles.ToTNode": [[67, 2, 1, "", "degree"], [68, 2, 1, "", "is_leaf"], [69, 3, 1, "", "neighbours"], [70, 2, 1, "", "set_label"]], "tangles.TreeOfTangles": [[72, 2, 1, "", "any_node"]], "tangles.UncrossingSweep": [[74, 3, 1, "", "all_oriented_feature_ids"], [75, 2, 1, "", "create_tot"], [76, 2, 1, "", "lower_agreement"], [77, 2, 1, "", "oriented_feature_ids_for_agreement"], [78, 3, 1, "", "original_feature_ids"], [79, 3, 1, "", "search_object"], [80, 3, 1, "", "sep_sys"], [81, 2, 1, "", "sweep_below"], [82, 2, 1, "", "sweep_one"], [83, 2, 1, "", "tangle_matrix"], [84, 2, 1, "", "tangle_score"], [85, 3, 1, "", "tree"]], "tangles.agreement": [[87, 1, 1, "", "AdvancedAgreementFunc"], [88, 1, 1, "", "AgreementFunc"], [89, 1, 1, "", "AgreementFuncBitarray"], [90, 1, 1, "", "AgreementFuncBitarrayBips"], [91, 1, 1, "", "CalculateAgreement"]], "tangles.analysis": [[94, 4, 1, "", "coherence_levels"], [95, 4, 1, "", "complexity_levels"], [96, 4, 1, "", "hard_clustering_tuebingen"], [97, 4, 1, "", "soft_clustering_tuebingen"], [98, 4, 1, "", "tangle_score"], [99, 4, 1, "", "visibility"]], "tangles.convenience": [[101, 1, 1, "", "NominalVariableValues"], [105, 1, 1, "", "NumericalVariableValues"], [109, 1, 1, "", "OrderFunctionO1"], [110, 1, 1, "", "OrderFunctionO1biased"], [111, 1, 1, "", "OrderFunctionO2"], [112, 1, 1, "", "OrderFunctionO3"], [113, 1, 1, "", "OrderFunctionO4"], [114, 1, 1, "", "OrdinalVariableValues"], [118, 1, 1, "", "SimpleSurveyFeatureFactory"], [121, 1, 1, "", "SimpleSurveyFeatureFactoryMissingValuesBothSides"], [124, 1, 1, "", "SimpleSurveyFeatureFactoryMissingValuesImplicit"], [127, 1, 1, "", "SimpleSurveyFeatureFactoryMissingValuesOwnFeatures"], [130, 1, 1, "", "Survey"], [156, 1, 1, "", "SurveyFeatureFactory"], [159, 1, 1, "", "SurveyFeatureFactoryCherryPicker"], [163, 1, 1, "", "SurveyFeatureFactoryDecorator"], [166, 1, 1, "", "SurveyTangles"], [178, 1, 1, "", "SurveyVariable"], [194, 1, 1, "", "SurveyVariableValues"], [198, 1, 1, "", "TangleSweepFeatureSys"], [208, 1, 1, "", "UnionOfIntervals"], [209, 4, 1, "", "binary_unique_value_features"], [210, 0, 0, "-", "convenience_features"], [213, 4, 1, "", "create_features_all_unique_values"], [214, 4, 1, "", "create_features_split_regular_bins"], [215, 4, 1, "", "create_features_split_regular_ge"], [216, 4, 1, "", "create_order_function"], [217, 4, 1, "", "feats2seps_invalids_to_both_sides"], [218, 4, 1, "", "feature_factory_all_splits_ge"], [219, 4, 1, "", "nominalvar_features_all_cats"], [220, 4, 1, "", "order_works_on_features"], [221, 4, 1, "", "search_tangles"], [222, 4, 1, "", "search_tangles_uncrossed"]], "tangles.convenience.NominalVariableValues": [[102, 2, 1, "", "invert_op"], [103, 2, 1, "", "possible_values_representation"], [104, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.NumericalVariableValues": [[106, 2, 1, "", "invert_op"], [107, 2, 1, "", "possible_values_representation"], [108, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.OrdinalVariableValues": [[115, 2, 1, "", "invert_op"], [116, 2, 1, "", "possible_values_representation"], [117, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.SimpleSurveyFeatureFactory": [[119, 2, 1, "", "create_features"], [120, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesBothSides": [[122, 2, 1, "", "create_features"], [123, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesImplicit": [[125, 2, 1, "", "create_features"], [126, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactoryMissingValuesOwnFeatures": [[128, 2, 1, "", "create_features"], [129, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.Survey": [[131, 2, 1, "", "__getitem__"], [132, 2, 1, "", "check_variables"], [133, 2, 1, "", "complete_rows"], [134, 2, 1, "", "copy"], [135, 2, 1, "", "count_number_of_unique_answers"], [136, 2, 1, "", "count_valid_answers_per_respondent"], [137, 2, 1, "", "guess_variable_types"], [138, 2, 1, "", "guess_variable_value_lists"], [139, 2, 1, "", "interpret_column_selection"], [140, 2, 1, "", "load"], [141, 3, 1, "", "num_questions"], [142, 3, 1, "", "num_respondents"], [143, 2, 1, "", "replace_variable_value_labels"], [144, 2, 1, "", "replace_variable_values"], [145, 2, 1, "", "save"], [146, 2, 1, "", "select_questions"], [147, 2, 1, "", "select_respondents"], [148, 2, 1, "", "set_pyreadstat_meta_data"], [149, 2, 1, "", "set_valid_and_invalid_variable_values"], [150, 2, 1, "", "set_variable_labels"], [151, 2, 1, "", "set_variable_names"], [152, 2, 1, "", "set_variable_types"], [153, 3, 1, "", "shape"], [154, 2, 1, "", "summarize"], [155, 2, 1, "", "variable_info"]], "tangles.convenience.SurveyFeatureFactory": [[157, 2, 1, "", "create_features"], [158, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyFeatureFactoryCherryPicker": [[160, 2, 1, "", "create_features"], [161, 2, 1, "", "create_features_for_single_col"], [162, 2, 1, "", "set_factoryfunc"]], "tangles.convenience.SurveyFeatureFactoryDecorator": [[164, 2, 1, "", "create_features"], [165, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyTangles": [[167, 2, 1, "", "change_agreement"], [168, 2, 1, "", "explain_feature"], [169, 3, 1, "", "feature_system"], [170, 2, 1, "", "initialize_search"], [171, 2, 1, "", "load"], [172, 2, 1, "", "ordered_metadata"], [173, 2, 1, "", "search"], [174, 2, 1, "", "specified_features"], [175, 2, 1, "", "tangle_matrix"], [176, 2, 1, "", "typical_answers"], [177, 3, 1, "", "valid_agreement_lower_bound"]], "tangles.convenience.SurveyVariable": [[179, 2, 1, "", "add_values"], [180, 2, 1, "", "all_values_as_list"], [181, 2, 1, "", "create_values"], [182, 2, 1, "", "invalid_values_as_list"], [183, 2, 1, "", "is_nominal_type"], [184, 2, 1, "", "is_numeric_type"], [185, 2, 1, "", "is_ordinal_type"], [186, 2, 1, "", "is_valid_type"], [187, 2, 1, "", "is_valid_type_name"], [188, 2, 1, "", "replace_values"], [189, 2, 1, "", "set_value_labels"], [190, 2, 1, "", "set_values"], [191, 2, 1, "", "to_row"], [192, 2, 1, "", "valid_values_as_list"], [193, 2, 1, "", "value_class"]], "tangles.convenience.SurveyVariableValues": [[195, 2, 1, "", "invert_op"], [196, 2, 1, "", "possible_values_representation"], [197, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.TangleSweepFeatureSys": [[199, 3, 1, "", "all_oriented_feature_ids"], [200, 2, 1, "", "lower_agreement"], [201, 2, 1, "", "oriented_feature_ids_for_agreement"], [202, 3, 1, "", "original_feature_ids"], [203, 3, 1, "", "search_object"], [204, 3, 1, "", "sep_sys"], [205, 2, 1, "", "tangle_matrix"], [206, 2, 1, "", "tangle_score"], [207, 3, 1, "", "tree"]], "tangles.convenience.convenience_features": [[211, 4, 1, "", "append_corner_features"], [212, 4, 1, "", "compute_corner_features"]], "tangles.guiding": [[225, 4, 1, "", "get_tangle_by_path"], [226, 4, 1, "", "guided_tangle"], [227, 4, 1, "", "is_guiding"]], "tangles.search": [[229, 0, 0, "-", "extending_tangles"], [232, 0, 0, "-", "progress"]], "tangles.search.extending_tangles": [[230, 1, 1, "", "ExtendingTangles"]], "tangles.search.extending_tangles.ExtendingTangles": [[231, 2, 1, "", "extend_tangles"]], "tangles.search.progress": [[233, 1, 1, "", "DefaultProgressCallback"], [234, 1, 1, "", "SimpleProgressCallback"]], "tangles.separations": [[236, 1, 1, "", "AdvancedFeatureSystem"], [262, 1, 1, "", "FeatureSystem"], [287, 1, 1, "", "MetaData"], [289, 1, 1, "", "SetSeparationSystem"], [307, 1, 1, "", "SetSeparationSystemBase"], [325, 1, 1, "", "SetSeparationSystemOrderFunc"], [326, 0, 0, "-", "atomic_sets"], [331, 0, 0, "-", "finding"], [343, 0, 0, "-", "util"]], "tangles.separations.AdvancedFeatureSystem": [[237, 2, 1, "", "__getitem__"], [238, 2, 1, "", "add_corner"], [239, 2, 1, "", "add_features"], [240, 2, 1, "", "add_seps"], [241, 2, 1, "", "all_feature_ids"], [242, 2, 1, "", "all_sep_ids"], [243, 2, 1, "", "assemble_meta_info"], [244, 2, 1, "", "compute_infimum"], [245, 2, 1, "", "copy"], [246, 2, 1, "", "count_big_side"], [247, 2, 1, "", "crossing_seps"], [248, 2, 1, "", "feature_and_complement_size"], [249, 2, 1, "", "feature_metadata"], [250, 2, 1, "", "feature_size"], [251, 2, 1, "", "get_corners"], [252, 2, 1, "", "get_feature_ids"], [253, 2, 1, "", "get_sep_ids"], [254, 2, 1, "", "is_le"], [255, 2, 1, "", "is_nested"], [256, 2, 1, "", "is_subset"], [257, 2, 1, "", "metadata_matrix"], [258, 2, 1, "", "separation_metadata"], [259, 2, 1, "", "side_counts"], [260, 2, 1, "", "with_array"], [261, 2, 1, "", "with_sparse_array"]], "tangles.separations.FeatureSystem": [[263, 2, 1, "", "__getitem__"], [264, 2, 1, "", "add_corner"], [265, 2, 1, "", "add_features"], [266, 2, 1, "", "add_seps"], [267, 2, 1, "", "all_feature_ids"], [268, 2, 1, "", "all_sep_ids"], [269, 2, 1, "", "assemble_meta_info"], [270, 2, 1, "", "compute_infimum"], [271, 2, 1, "", "count_big_side"], [272, 2, 1, "", "crossing_seps"], [273, 2, 1, "", "feature_and_complement_size"], [274, 2, 1, "", "feature_metadata"], [275, 2, 1, "", "feature_size"], [276, 2, 1, "", "get_corners"], [277, 2, 1, "", "get_feature_ids"], [278, 2, 1, "", "get_sep_ids"], [279, 2, 1, "", "is_le"], [280, 2, 1, "", "is_nested"], [281, 2, 1, "", "is_subset"], [282, 2, 1, "", "metadata_matrix"], [283, 2, 1, "", "separation_metadata"], [284, 2, 1, "", "side_counts"], [285, 2, 1, "", "with_array"], [286, 2, 1, "", "with_sparse_array"]], "tangles.separations.MetaData": [[288, 2, 1, "", "append"]], "tangles.separations.SetSeparationSystem": [[290, 2, 1, "", "__getitem__"], [291, 2, 1, "", "add_corner"], [292, 2, 1, "", "add_seps"], [293, 2, 1, "", "all_sep_ids"], [294, 2, 1, "", "assemble_meta_info"], [295, 2, 1, "", "compute_infimum"], [296, 2, 1, "", "count_big_side"], [297, 2, 1, "", "crossing_seps"], [298, 2, 1, "", "get_corners"], [299, 2, 1, "", "get_sep_ids"], [300, 2, 1, "", "is_le"], [301, 2, 1, "", "is_nested"], [302, 2, 1, "", "metadata_matrix"], [303, 2, 1, "", "separation_metadata"], [304, 2, 1, "", "side_counts"], [305, 2, 1, "", "with_array"], [306, 2, 1, "", "with_sparse_array"]], "tangles.separations.SetSeparationSystemBase": [[308, 2, 1, "", "__getitem__"], [309, 2, 1, "", "add_corner"], [310, 2, 1, "", "add_seps"], [311, 2, 1, "", "all_sep_ids"], [312, 2, 1, "", "assemble_meta_info"], [313, 2, 1, "", "compute_infimum"], [314, 2, 1, "", "count_big_side"], [315, 2, 1, "", "crossing_seps"], [316, 2, 1, "", "get_corners"], [317, 2, 1, "", "get_sep_ids"], [318, 2, 1, "", "is_le"], [319, 2, 1, "", "is_nested"], [320, 2, 1, "", "metadata_matrix"], [321, 2, 1, "", "separation_metadata"], [322, 2, 1, "", "side_counts"], [323, 2, 1, "", "with_array"], [324, 2, 1, "", "with_sparse_array"]], "tangles.separations.atomic_sets": [[327, 4, 1, "", "atomic_set_indicators"], [328, 4, 1, "", "atomic_sets"], [329, 4, 1, "", "atomic_to_seps"], [330, 4, 1, "", "seps_to_atomic"]], "tangles.separations.finding": [[332, 1, 1, "", "OrderFuncDerivative"], [335, 4, 1, "", "add_all_corners_of_features"], [336, 4, 1, "", "min_S_T_cut"], [337, 4, 1, "", "minimize_cut"], [338, 4, 1, "", "nodal_domains"], [339, 4, 1, "", "pca_features"], [340, 4, 1, "", "random_features"], [341, 4, 1, "", "spectral_features"], [342, 4, 1, "", "spectral_features_splitted"]], "tangles.separations.finding.OrderFuncDerivative": [[333, 2, 1, "", "change_discrete_derivative"], [334, 2, 1, "", "discrete_derivative"]], "tangles.separations.util": [[344, 4, 1, "", "order_func_balance"], [345, 4, 1, "", "order_func_min_side_size"]], "tangles.util": [[348, 0, 0, "-", "entropy"], [355, 0, 0, "-", "graph"], [385, 0, 0, "-", "logic"], [397, 0, 0, "-", "matrix_order"], [406, 0, 0, "-", "preprocessing"], [410, 0, 0, "-", "tree"], [437, 0, 0, "-", "ui"]], "tangles.util.entropy": [[349, 4, 1, "", "colsplit_mutual_information"], [350, 4, 1, "", "datapointwise_information_gains"], [351, 4, 1, "", "entropy"], [352, 4, 1, "", "information_gain"], [353, 4, 1, "", "joint_entropy"], [354, 4, 1, "", "pairwise_mutual_information"]], "tangles.util.graph": [[356, 4, 1, "", "connected_component_indicators"], [357, 0, 0, "-", "cut_weight"], [370, 4, 1, "", "greedy_neighborhood"], [371, 4, 1, "", "greedy_neighborhood_old"], [372, 4, 1, "", "laplacian"], [373, 0, 0, "-", "minor"], [375, 4, 1, "", "modularity_matrix"], [376, 4, 1, "", "normalized_laplacian"], [377, 0, 0, "-", "similarity"]], "tangles.util.graph.cut_weight": [[358, 1, 1, "", "CutWeightOrder"], [361, 1, 1, "", "NCutOrder"], [364, 1, 1, "", "RatioCutOrder"], [367, 4, 1, "", "cut_weight_order"], [368, 4, 1, "", "ncut_order"], [369, 4, 1, "", "ratiocut_order"]], "tangles.util.graph.cut_weight.CutWeightOrder": [[359, 2, 1, "", "change_discrete_derivative"], [360, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.NCutOrder": [[362, 2, 1, "", "change_discrete_derivative"], [363, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.RatioCutOrder": [[365, 2, 1, "", "change_discrete_derivative"], [366, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.minor": [[374, 4, 1, "", "contract_graph"]], "tangles.util.graph.similarity": [[378, 4, 1, "", "cosine_similarity"], [379, 4, 1, "", "cosine_similarity_graph_csr_data"], [380, 4, 1, "", "epsilon_neighborhood_graph"], [381, 4, 1, "", "grid_distance_graph"], [382, 4, 1, "", "hamming_similarity"], [383, 4, 1, "", "image_to_similarity_graph"], [384, 4, 1, "", "k_nearest_neighbors"]], "tangles.util.logic": [[386, 1, 1, "", "ConjunctiveNormalForm"], [387, 1, 1, "", "DisjunctiveNormalForm"], [388, 1, 1, "", "LogicTerm"], [389, 1, 1, "", "TextTerm"], [390, 4, 1, "", "append"], [391, 4, 1, "", "distribute"], [392, 0, 0, "-", "sep_to_term"], [394, 4, 1, "", "simplify"], [395, 0, 0, "-", "term"]], "tangles.util.logic.sep_to_term": [[393, 1, 1, "", "RecursionLogic"]], "tangles.util.logic.term": [[396, 1, 1, "", "SemanticTextTerm"]], "tangles.util.matrix_order": [[398, 1, 1, "", "MatrixOrderSVD"], [399, 4, 1, "", "covariance_order"], [400, 4, 1, "", "linear_similarity_from_dist_matrix"], [401, 4, 1, "", "linear_similarity_from_distances"], [402, 4, 1, "", "logdet_order"], [403, 4, 1, "", "matrix_order"], [404, 4, 1, "", "o_five"], [405, 4, 1, "", "o_seven"]], "tangles.util.preprocessing": [[407, 4, 1, "", "balance"], [408, 4, 1, "", "normalize_length"], [409, 4, 1, "", "standardize"]], "tangles.util.tree": [[411, 1, 1, "", "BinTreeNetworkX"], [418, 1, 1, "", "BinTreeNode"], [433, 1, 1, "", "GraphNode"], [434, 1, 1, "", "TreeNode"], [435, 4, 1, "", "plot_tree"], [436, 4, 1, "", "print_node_label"]], "tangles.util.tree.BinTreeNetworkX": [[412, 2, 1, "", "draw"], [413, 2, 1, "", "get_ids_from_label"], [414, 2, 1, "", "get_label"], [415, 3, 1, "", "graph"], [416, 2, 1, "", "relabel"], [417, 2, 1, "", "tst_layout"]], "tangles.util.tree.BinTreeNode": [[419, 2, 1, "", "children"], [420, 2, 1, "", "copy"], [421, 2, 1, "", "copy_subtree"], [422, 2, 1, "", "copy_subtree_into_children"], [423, 2, 1, "", "detach"], [424, 2, 1, "", "from_indicator_matrix"], [425, 2, 1, "", "is_leaf"], [426, 2, 1, "", "leaves_in_subtree"], [427, 2, 1, "", "level"], [428, 2, 1, "", "level_in_subtree"], [429, 2, 1, "", "path_from_root_indicator"], [430, 2, 1, "", "set_left_child"], [431, 2, 1, "", "set_right_child"], [432, 2, 1, "", "to_indicator_matrix"]], "tangles.util.ui": [[438, 1, 1, "", "SplitGraph"], [442, 1, 1, "", "XYPicker"], [445, 4, 1, "", "plot_annotated"], [446, 4, 1, "", "wrap_annotation_func_ax"]], "tangles.util.ui.SplitGraph": [[439, 2, 1, "", "draw_ellipses"], [440, 2, 1, "", "draw_side_and_boundary"], [441, 2, 1, "", "draw_stacked_circles"]], "tangles.util.ui.XYPicker": [[443, 2, 1, "", "show"], [444, 2, 1, "", "update"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "terms": {"": [83, 100, 124, 144, 178, 179, 186, 190, 214, 215, 218, 258, 283, 303, 321, 331, 336, 338, 346, 398, 399, 400, 401, 403, 410, 436, 449, 450, 451, 452], "0": [11, 12, 26, 27, 28, 44, 58, 94, 95, 96, 97, 98, 99, 138, 208, 211, 212, 225, 226, 231, 287, 340, 342, 378, 379, 381, 382, 383, 395, 398, 399, 400, 401, 402, 403, 406, 409, 412, 427, 428, 435, 439, 440, 441, 448, 449, 450, 451, 452], "005": 449, "01": [342, 383, 435], "011": 449, "0125": 450, "013": 449, "014": 449, "015": [449, 450, 451], "017": 449, "018": 449, "02": [447, 448], "029": 449, "03": [412, 439, 450, 451], "030": 449, "034": 449, "035": 449, "039": 449, "05": [412, 440, 441, 448], "053": 449, "054": 449, "061": 449, "08": [400, 401], "09": 449, "098": 452, "1": [13, 17, 30, 34, 35, 39, 43, 45, 59, 83, 94, 96, 97, 98, 104, 108, 117, 168, 194, 197, 211, 212, 225, 236, 238, 239, 244, 252, 253, 254, 256, 264, 265, 270, 277, 278, 279, 281, 295, 299, 313, 317, 335, 336, 337, 341, 342, 355, 376, 380, 383, 384, 395, 398, 399, 400, 401, 402, 403, 409, 412, 429, 441, 445, 450, 453], "10": [194, 338, 378, 439, 440, 441, 442, 445, 448, 449, 450, 451, 452], "100": [379, 448, 449, 450], "1000": [378, 448, 450, 451], "10000": 449, "100000": 449, "100000000": 337, "10001": 449, "10002": 449, "10003": 449, "1000301": 449, "1000302": 449, "1000303": 449, "1000304": 449, "10004": [449, 452], "1000401": 449, "1000402": 449, "10005": 449, "10006": 449, "10007": 449, "10008": 449, "10009": 449, "10010": 449, "10011": 449, "10012": 449, "10013": 449, "10014": 449, "10015": 449, "1002017": 449, "10026": 449, "10030": 449, "10033": 450, "10034": 450, "10035": 449, "1003535": 449, "10044": 452, "10045": 452, "10046": 452, "10050": 452, "10059": 452, "10066": 449, "10094": 450, "101": 449, "10105": 450, "10196": 452, "102": 449, "10201": 452, "10217": 452, "10225": 452, "10246": 449, "10275": 452, "10281": 452, "10294": 452, "103": 449, "10326": 452, "10379": 452, "10394": 452, "104": [449, 451], "10433": 452, "10453": 452, "105": [448, 449], "10556": 452, "10580": 452, "10582": 452, "106": 449, "10607": 452, "107": 449, "108": 449, "109": 449, "10th": 449, "11": [449, 451, 452], "110": 449, "111": 449, "1111": 449, "112": 449, "11200": 449, "1120000": 449, "1120001": 449, "1120002": 449, "1120003": 449, "1120004": 449, "1120005": 449, "1120006": 449, "1120007": 449, "11201": 449, "11202": 449, "11203": 449, "11204": 449, "11205": 449, "11206": 449, "11207": 449, "11208": 449, "11209": 449, "11210": 449, "11211": 449, "11212": 449, "11213": 449, "11214": 449, "11215": 449, "11216": 449, "1122018": 449, "11226": 449, "11235": 449, "1123535": 449, "11266": 449, "113": 449, "114": 449, "115": 449, "11543": 449, "116": 449, "117": 449, "118": [448, 449], "119": 449, "1194": 449, "12": [448, 449, 452], "120": [449, 450, 451], "121": 449, "122": 449, "12205": 449, "123": 449, "124": 449, "12400": 450, "125": 449, "126": 449, "127": 449, "1278": 449, "128": 449, "129": 449, "1295": 449, "12th": 449, "13": [449, 452], "130": [448, 449], "131": 449, "132": 449, "133": 449, "134": 449, "1347": 451, "135": 449, "136": 449, "137": 449, "1379": 449, "138": 449, "139": 449, "1390": 449, "14": [449, 450, 452], "140": 449, "141": 449, "142": 449, "143": 449, "144": 449, "1449": 449, "145": 449, "1456": 449, "1459": 449, "146": 449, "1460": 449, "1469": 449, "147": 449, "1471": 449, "1473": 449, "148": 449, "149": 449, "15": [448, 449, 450, 451, 452], "150": [448, 449, 450], "1500": 452, "15000": 450, "1504": 449, "1508": 449, "151": [448, 449], "152": 449, "153": 449, "1534": 449, "154": 449, "155": 449, "1551": 449, "156": 449, "157": 449, "1571": 449, "158": 449, "159": 449, "16": [448, 449, 452], "160": 449, "161": 449, "1618": 449, "162": 449, "163": 449, "16395": 450, "164": 449, "1645": 452, "1648": 452, "165": [449, 450], "166": 449, "167": 449, "168": 449, "169": 449, "17": [449, 452], "170": 449, "1700": 452, "171": 449, "172": 449, "17200": 450, "173": 449, "1737": 449, "174": 449, "175": 449, "176": 449, "177": 449, "1775": 449, "1776": 449, "17763": 450, "178": 449, "1781": 449, "17871": 449, "179": 449, "18": [449, 452], "180": 449, "1800": 452, "181": 449, "182": 449, "1822": 449, "183": 449, "1835": 449, "18369": 449, "184": 449, "185": 449, "186": 449, "1865": 449, "1868": 450, "1869": 450, "187": 449, "188": 449, "18823": 449, "189": 449, "18919": 449, "19": [448, 449, 451, 452], "190": 449, "19040": 450, "19046": 450, "191": 449, "19100": 449, "1910003": 449, "1910004": 449, "19101": 449, "19102": 449, "19103": 449, "19104": 449, "19105": 449, "19106": 449, "19107": 449, "19108": 449, "19109": 449, "19110": 449, "19111": 449, "19112": 449, "19113": 449, "19114": 449, "19115": 449, "19116": 449, "1912017": 449, "19126": 449, "19135": 449, "1913535": 449, "19166": 449, "1918": 449, "192": 449, "19276": 449, "193": 449, "19360": 452, "1937": 449, "19384": 452, "194": 449, "1941": 449, "195": 449, "19504": 449, "1958": 449, "196": 449, "1960": 449, "197": 449, "1970": 449, "198": 449, "1980": 449, "19888": 449, "1989": 449, "199": 449, "1990": 449, "1992": 449, "1e": [338, 378, 400, 401], "1e6": 448, "1px": 449, "1st": 449, "2": [355, 376, 381, 383, 401, 435, 445, 450, 453], "20": [448, 449, 450, 451, 452], "200": [448, 449, 450], "2000": 452, "20000": [449, 450], "2008": 449, "201": 449, "2010": 449, "20159": 450, "2016": 449, "2017": 449, "2018": 449, "2019": 449, "202": 449, "2020": 449, "2021": 449, "2024": 447, "203": 449, "20300": 449, "2030001": 449, "2030002": 449, "2030003": 449, "2030004": 449, "2030005": 449, "2030006": 449, "2030007": 449, "2030008": 449, "20301": 449, "20302": 449, "20303": 449, "20304": 449, "20305": 449, "20306": 449, "20307": 449, "20308": 449, "20309": 449, "20310": 449, "20311": 449, "20312": 449, "20313": 449, "20314": 449, "20315": 449, "20316": 449, "2032017": 449, "20335": 449, "2033535": 449, "20366": 449, "204": 449, "2048": 449, "205": 449, "206": 449, "207": 449, "208": 449, "20800": 449, "2080001": 449, "2080002": 449, "2080003": 449, "2080004": 449, "2080005": 449, "20801": 449, "20802": 449, "20803": 449, "20804": 449, "20805": 449, "20806": 449, "20807": 449, "20808": 449, "20809": 449, "20810": 449, "20811": 449, "20812": 449, "20813": 449, "2082017": 449, "20835": 449, "2083535": 449, "20866": 449, "209": 449, "21": [449, 452], "210": 449, "211": 449, "212": 449, "213": 449, "2133": 449, "214": 449, "215": 449, "216": 449, "217": 449, "218": 449, "219": 449, "21903": 449, "22": [449, 452], "220": 449, "221": 449, "222": 449, "223": 449, "224": 449, "225": 449, "226": 449, "227": 449, "2277": 449, "228": 449, "229": 449, "23": [448, 449, 452], "230": 449, "23004": 449, "231": 449, "232": 449, "233": 449, "23300": 449, "2330000": 449, "23301": 449, "23302": 449, "23303": 449, "23304": 449, "23305": 449, "23306": 449, "23307": 449, "23308": 449, "23309": 449, "23310": 449, "23311": 449, "23312": 449, "23313": 449, "23314": 449, "23315": 449, "2332018": 449, "23331": 449, "23335": 449, "2333535": 449, "23366": 449, "234": 449, "235": 449, "236": 449, "237": 449, "238": 449, "239": 449, "24": [449, 450, 452], "240": 449, "241": 449, "242": 449, "2423": 449, "243": 449, "244": 449, "245": 449, "246": 449, "24601": 449, "2460109": 449, "2460111": 449, "2460112": 449, "2460113": 449, "24602": 449, "2460200": 449, "24603": 449, "24604": 449, "24605": 449, "24606": 449, "24607": 449, "24608": 449, "24609": 449, "24610": 449, "24611": 449, "24612": 449, "24613": 449, "24614": 449, "24615": 449, "2462017": 449, "2462018": 449, "24635": 449, "2463535": 449, "24666": 449, "247": 449, "248": 449, "249": 449, "25": [379, 448, 449, 450, 452], "250": [448, 449, 450], "25001": 449, "2500100": 449, "25002": 449, "25003": 449, "25004": 449, "25005": 449, "25006": 449, "25007": 449, "25008": 449, "25009": 449, "2501": 449, "25010": 449, "25011": 449, "2501100": 449, "25012": 449, "2501201": 449, "2501202": 449, "25013": 449, "2501301": 449, "2501302": 449, "25014": 449, "2501401": 449, "2501402": 449, "25015": 449, "2501501": 449, "2501502": 449, "2501503": 449, "25016": 449, "2501600": 449, "25017": 449, "2501700": 449, "25018": 449, "2501801": 449, "2501802": 449, "2501803": 449, "25019": 449, "2501901": 449, "2501902": 449, "25020": 449, "2502001": 449, "2502002": 449, "2502018": 449, "25021": 449, "2502100": 449, "25022": 449, "2502200": 449, "25023": 449, "25024": 449, "25025": 449, "25026": 449, "25034": 449, "2503401": 449, "2503402": 449, "2503403": 449, "2503404": 449, "2503405": 449, "25035": 449, "2503535": 449, "25066": 449, "25088": 449, "25099": 449, "251": 449, "252": 449, "253": 449, "254": 449, "255": 449, "256": 449, "257": 449, "258": 449, "259": 449, "26": [449, 452], "260": 449, "2600": 452, "261": 449, "262": 449, "263": 449, "26337": 449, "264": 449, "265": 449, "266": 449, "26602": 449, "26626": 449, "267": 449, "268": 449, "26800": 449, "2680001": 449, "2680002": 449, "2680003": 449, "26801": 449, "26802": 449, "26803": 449, "26804": 449, "26805": 449, "26806": 449, "26807": 449, "26808": 449, "26809": 449, "26810": 449, "26811": 449, "26812": 449, "26813": 449, "26814": 449, "26815": 449, "26816": 449, "2682018": 449, "26826": 449, "26835": 449, "2683535": 449, "26866": 449, "269": 449, "27": [449, 452], "270": 449, "2708": 449, "271": 449, "272": 449, "273": 449, "27301": 449, "27351": 449, "274": 449, "275": 449, "276": 449, "27601": 449, "2760101": 449, "2760102": 449, "2760103": 449, "2760104": 449, "27602": 449, "2760201": 449, "2760202": 449, "2760203": 449, "2760204": 449, "2760205": 449, "2760206": 449, "2760207": 449, "27603": 449, "2760300": 449, "27604": 449, "2760400": 449, "27605": 449, "2760500": 449, "27606": 449, "2760600": 449, "27607": 449, "2760701": 449, "2760702": 449, "2760703": 449, "27608": 449, "2760800": 449, "27609": 449, "2760901": 449, "2760902": 449, "2760903": 449, "2760904": 449, "27610": 449, "2761001": 449, "2761002": 449, "2761003": 449, "2761004": 449, "2761005": 449, "27611": 449, "2761101": 449, "2761102": 449, "2761103": 449, "27612": 449, "2761200": 449, "27613": 449, "2761302": 449, "2761304": 449, "2761305": 449, "27614": 449, "2761400": 449, "27615": 449, "2761500": 449, "27616": 449, "2761600": 449, "2762017": 449, "27635": 449, "2763535": 449, "27666": 449, "277": 449, "278": 449, "27871": 449, "279": 449, "28": [449, 452], "280": 449, "281": 449, "282": 449, "2823": 449, "283": 449, "284": 449, "2849": 449, "285": 449, "2855": 449, "286": 449, "287": 449, "288": 449, "289": 449, "29": [449, 452], "290": 449, "291": 449, "292": 449, "293": 449, "294": 449, "295": 449, "296": 449, "297": 449, "298": 449, "299": 449, "2a": 449, "2d": [448, 450], "2nd": 449, "2y": 449, "3": [57, 73, 198, 230, 381, 383, 417, 450, 453], "30": [448, 449, 450, 452], "300": [448, 449], "3000": 452, "30003": 449, "3000300": 449, "30004": 449, "3000401": 449, "3000402": 449, "3000403": 449, "30005": 449, "3000501": 449, "3000502": 449, "3000503": 449, "3000504": 449, "30006": 449, "3000601": 449, "3000602": 449, "3000603": 449, "3000604": 449, "3000605": 449, "3002019": 449, "30035": 449, "3003535": 449, "301": 449, "302": 449, "303": 449, "304": 449, "305": 449, "306": 449, "307": 449, "30796": 449, "308": 449, "30809": 449, "309": 449, "30950": 449, "30h": 449, "31": [449, 452], "310": 449, "3101": 449, "310100": 449, "3102": 449, "310201": 449, "310202": 449, "310203": 449, "3103": 449, "310300": 449, "310301": 449, "310302": 449, "310303": 449, "310304": 449, "3104": 449, "310400": 449, "310401": 449, "310402": 449, "310403": 449, "310404": 449, "310405": 449, "310406": 449, "310407": 449, "310408": 449, "310409": 449, "310410": 449, "310411": 449, "310412": 449, "310413": 449, "310414": 449, "310415": 449, "310416": 449, "310417": 449, "3105": 449, "310500": 449, "310501": 449, "310502": 449, "310503": 449, "310504": 449, "310505": 449, "3106": 449, "310600": 449, "310601": 449, "310602": 449, "310603": 449, "3107": 449, "310700": 449, "310701": 449, "310702": 449, "310703": 449, "310704": 449, "310705": 449, "310706": 449, "310707": 449, "310708": 449, "310709": 449, "310710": 449, "3108": 449, "310800": 449, "310801": 449, "310802": 449, "310803": 449, "310804": 449, "310805": 449, "3109": 449, "311": 449, "3110": 449, "3111": 449, "3112": 449, "3113": 449, "3114": 449, "3115": 449, "3116": 449, "3117": 449, "3118": 449, "3119": 449, "312": 449, "312018": 449, "313": 449, "3130": 449, "3131": 449, "3135": 449, "313535": 449, "314": 449, "315": 449, "316": 449, "3166": 449, "317": 449, "318": 449, "3188": 449, "319": 449, "3199": 449, "32": [448, 449, 452], "320": [448, 449], "321": 449, "32113": 449, "322": 449, "3227": 449, "323": 449, "324": 449, "325": 449, "326": 449, "327": 449, "3271": 449, "328": 449, "3283": 449, "32838": 449, "329": 449, "32x": 449, "33": [448, 449, 452], "330": 449, "331": 449, "332": 449, "3323": 449, "3326": 449, "3328": 449, "333": 449, "334": 449, "33460": 449, "335": 449, "336": 449, "3368": 449, "337": 449, "3376": 449, "3379": 449, "338": 449, "3387": 449, "339": 449, "34": [449, 452], "340": 449, "341": 449, "342": 449, "34242": 449, "343": 449, "344": 449, "3440": 449, "345": 449, "346": 449, "347": 449, "348": 449, "34801": 449, "3480101": 449, "3480102": 449, "34802": 449, "3480201": 449, "3480202": 449, "3480203": 449, "34803": 449, "3480301": 449, "3480302": 449, "3480303": 449, "34804": 449, "34805": 449, "34806": 449, "34807": 449, "34808": 449, "34809": 449, "34810": 449, "34811": 449, "34812": 449, "34813": 449, "34814": 449, "34815": 449, "3482018": 449, "34826": 449, "34835": 449, "3483535": 449, "34866": 449, "349": 449, "35": [449, 451, 452], "350": [449, 450], "3500": 452, "35069": 449, "351": 449, "352": 449, "35200": 449, "3520000": 449, "35201": 449, "35202": 449, "35203": 449, "35204": 449, "35205": 449, "35206": 449, "35207": 449, "35208": 449, "35209": 449, "35210": 449, "35211": 449, "35212": 449, "35213": 449, "35214": 449, "35215": 449, "35216": 449, "35217": 449, "35218": 449, "35219": 449, "3522": 449, "35220": 449, "3522017": 449, "35226": 449, "35235": 449, "3523535": 449, "35266": 449, "353": 449, "354": 449, "355": 449, "356": 449, "357": 449, "35752": 449, "358": 449, "35820": 449, "359": 449, "35914": 449, "36": [449, 452], "360": 449, "361": 449, "362": 449, "363": 449, "364": 449, "365": 449, "366": 449, "367": 449, "368": 449, "369": 449, "37": [449, 452], "370": 449, "371": 449, "372": 449, "373": 449, "374": [449, 452], "375": 449, "376": 449, "377": 449, "378": 449, "379": 449, "38": [449, 452], "380": 449, "38001": 449, "38002": 449, "38003": 449, "38004": 449, "38005": 449, "38006": 449, "38007": 449, "38008": 449, "38009": 449, "38010": 449, "38011": 449, "38012": 449, "3801201": 449, "3801202": 449, "3801203": 449, "3801204": 449, "38013": 449, "38014": 449, "38015": 449, "3801501": 449, "3801502": 449, "3801503": 449, "3801504": 449, "3801505": 449, "3801506": 449, "38016": 449, "3801601": 449, "3801602": 449, "38017": 449, "3801701": 449, "3801702": 449, "3801703": 449, "3801704": 449, "3801705": 449, "38018": 449, "3801801": 449, "3801802": 449, "3801803": 449, "3801804": 449, "3802018": 449, "38030": 449, "38031": 449, "38035": 449, "3803535": 449, "38066": 449, "381": 449, "382": 449, "383": 449, "384": 449, "385": 449, "3851": 449, "386": 449, "387": 449, "388": 449, "389": 449, "39": [449, 452], "390": 449, "391": 449, "392": 449, "393": 449, "394": 449, "395": 449, "396": 449, "397": 449, "398": 449, "399": 449, "3a": 449, "3rd": 449, "4": [194, 449, 450, 453], "40": [449, 452], "400": [448, 449, 450], "4000": 452, "4001": 449, "400101": 449, "400102": 449, "400103": 449, "4002": 449, "400201": 449, "400202": 449, "4003": 449, "400301": 449, "400302": 449, "400303": 449, "400304": 449, "4004": 449, "4005": 449, "4006": 449, "4007": 449, "4008": 449, "4009": 449, "401": 449, "4010": 449, "4011": 449, "4012": 449, "4013": 449, "4014": 449, "4015": 449, "4016": 449, "4017": 449, "4018": 449, "4019": 449, "402": 449, "4020": 449, "402018": 449, "4021": 449, "4022": 449, "4023": 449, "4024": 449, "4025": 449, "4026": 449, "4027": 449, "4028": 449, "4029": 449, "403": 449, "4030": 449, "4031": 449, "4035": 449, "403535": 449, "404": 449, "40448": 449, "405": 449, "406": 449, "4066": 449, "407": 449, "408": 449, "409": 449, "41": [449, 452], "410": 449, "41036": 449, "41037": 449, "411": 449, "4116": 449, "412": 449, "413": 449, "414": 449, "415": 449, "416": 449, "417": 449, "418": 449, "419": 449, "42": [449, 452], "420": 449, "421": 449, "422": 449, "4220": 449, "4221": 449, "423": 449, "424": 449, "425": 449, "426": 449, "427": 449, "42710": 449, "428": 449, "42800": 449, "4280000": 449, "42801": 449, "42802": 449, "42803": 449, "42804": 449, "42805": 449, "42806": 449, "42807": 449, "42808": 449, "42809": 449, "42810": 449, "42811": 449, "42812": 449, "42813": 449, "42814": 449, "42815": 449, "42816": 449, "4282021": 449, "42835": 449, "4283535": 449, "42866": 449, "429": 449, "43": [449, 452], "430": 449, "431": 449, "432": 449, "433": 449, "434": 449, "43442": 449, "435": 449, "436": 449, "437": 449, "438": 449, "439": 449, "43987": 449, "44": [449, 452], "440": 449, "44000": 449, "4400001": 449, "4400002": 449, "44001": 449, "44002": 449, "44003": 449, "44004": 449, "44005": 449, "44006": 449, "44007": 449, "44008": 449, "44009": 449, "44010": 449, "44011": 449, "44012": 449, "44013": 449, "44014": 449, "44015": 449, "44016": 449, "4402018": 449, "44035": 449, "4403535": 449, "44066": 449, "441": 449, "442": 449, "443": 449, "444": 449, "445": 449, "446": 449, "447": 449, "448": 449, "449": 449, "45": [449, 452], "450": [449, 450], "451": 449, "452": 449, "453": 449, "454": 449, "455": 449, "456": 449, "457": 449, "458": 449, "459": 449, "45983": 449, "46": [449, 452], "460": 449, "46098": 449, "461": 449, "462": 449, "463": 449, "464": 449, "465": 449, "466": 449, "467": 449, "468": 449, "469": 449, "47": [449, 452], "470": 449, "471": 449, "472": 449, "47229": 449, "473": 449, "474": 449, "475": 449, "47723": 449, "47740": 449, "478": 449, "48": [449, 452], "480": 449, "48126": 449, "484": 449, "49": [449, 452], "49003": 449, "492": 449, "49341": 449, "496": 449, "498": 449, "49897": 449, "499": 449, "49900": 449, "4990000": 449, "49901": 449, "49902": 449, "49903": 449, "49904": 449, "49905": 449, "49906": 449, "49907": 449, "49908": 449, "49909": 449, "49910": 449, "49911": 449, "49912": 449, "49913": 449, "49914": 449, "49915": 449, "49916": 449, "49917": 449, "49918": 449, "49919": 449, "4992019": 449, "49926": 449, "49966": 449, "49977": 449, "49988": 449, "49999": 449, "4th": 449, "5": [124, 194, 214, 215, 340, 370, 371, 441, 445, 449, 450, 451, 453], "50": [215, 448, 449, 450, 452], "500": [448, 449, 451, 452], "5000": 449, "500000": 449, "500px": 449, "502": 449, "504": 449, "50664": 449, "50698": 449, "508": 449, "50plu": 449, "51": 449, "510": 449, "5100": 449, "510001": 449, "510002": 449, "510003": 449, "510004": 449, "5101": 449, "5102": 449, "5103": 449, "5104": 449, "5105": 449, "5106": 449, "5107": 449, "5108": 449, "51081": 449, "5109": 449, "51092": 449, "5110": 449, "5111": 449, "5112": 449, "5113": 449, "5116": 449, "51186": 449, "512": 449, "512018": 449, "51257": 449, "5126": 449, "51280": 449, "5135": 449, "513535": 449, "51510": 449, "51560": 449, "516": 449, "5166": 449, "51685": 449, "51868": 449, "51892": 449, "51896": 449, "51899": 449, "52": 449, "520": 449, "521": 449, "52224": 449, "52270": 449, "52299": 449, "524": 449, "525": 449, "52504": 449, "52602": 449, "52718": 449, "528": 449, "52801": 449, "5280101": 449, "5280102": 449, "5280103": 449, "52802": 449, "5280201": 449, "5280202": 449, "5280203": 449, "52803": 449, "5280301": 449, "5280302": 449, "5280303": 449, "5280304": 449, "52804": 449, "5280401": 449, "5280402": 449, "52805": 449, "52806": 449, "52807": 449, "52808": 449, "52809": 449, "52810": 449, "52811": 449, "52812": 449, "52813": 449, "52814": 449, "52815": 449, "52816": 449, "52817": 449, "52818": 449, "5282017": 449, "52835": 449, "5283535": 449, "52866": 449, "52980": 449, "53": 449, "53050": 449, "53068": 449, "531": 449, "53185": 449, "533": 449, "534": 449, "53444": 449, "535": 449, "53671": 449, "53834": 449, "53940": 449, "53977": 449, "54": 449, "540": 449, "54015": 449, "54139": 449, "54168": 449, "54191": 449, "54275": 449, "54313": 449, "54341": 449, "54376": 449, "54426": 449, "54488": 449, "54635": 449, "54645": 449, "5467": 449, "54764": 449, "54785": 449, "548": 449, "54991": 449, "55": 449, "550": 449, "55017": 449, "55028": 449, "55039": 449, "55049": 449, "55087": 449, "55120": 449, "55219": 449, "55280": 449, "55336": 449, "55344": 449, "55374": 449, "554": 449, "55409": 449, "55474": 449, "55582": 449, "55587": 449, "55646": 449, "55705": 449, "55706": 449, "55792": 449, "558": 449, "55834": 449, "55875": 449, "55885": 449, "55894": 449, "56": 449, "56006": 449, "56028": 449, "56130": 449, "56138": 449, "56185": 449, "562": 449, "56217": 449, "56245": 449, "56312": 449, "56342": 449, "56348": 449, "56398": 449, "56520": 449, "56578": 449, "566": 449, "56622": 449, "56679": 449, "56705": 449, "56800": 449, "56884": 449, "56942": 449, "56952": 449, "56958": 449, "56977": 449, "56994": 449, "57": 449, "570": 449, "57002": 449, "57022": 449, "57033": 449, "57053": 449, "57061": 449, "57082": 449, "57084": 449, "57092": 449, "57123": 449, "57142": 449, "57158": 449, "57178": 449, "57214": 449, "57228": 449, "57241": 449, "57248": 449, "57277": 449, "57288": 449, "57294": 449, "57302": 449, "57320": 449, "57349": 449, "57366": 449, "57389": 449, "57393": 449, "574": 449, "57455": 449, "57470": 449, "57497": 449, "57503": 449, "57506": 449, "57513": 449, "57516": 449, "57525": 449, "57530": 449, "57551": 449, "57562": 449, "57588": 449, "57614": 449, "57664": 449, "57709": 449, "57728": 449, "57741": 449, "578": 449, "57800": 449, "5780001": 449, "5780002": 449, "5780003": 449, "5780004": 449, "5780005": 449, "5780006": 449, "5780007": 449, "57801": 449, "57802": 449, "57803": 449, "57804": 449, "57805": 449, "57806": 449, "57807": 449, "57808": 449, "57809": 449, "57810": 449, "57811": 449, "57812": 449, "57813": 449, "57814": 449, "5782018": 449, "57824": 449, "57825": 449, "57834": 449, "57835": 449, "5783535": 449, "57844": 449, "57845": 449, "57854": 449, "57855": 449, "57856": 449, "57864": 449, "57865": 449, "57866": 449, "57874": 449, "57875": 449, "57876": 449, "57882": 449, "57884": 449, "57885": 449, "57886": 449, "57902": 449, "57903": 449, "57923": 449, "57947": 449, "57965": 449, "57969": 449, "58": 449, "580": 449, "58007": 449, "58009": 449, "58012": 449, "58024": 449, "58042": 449, "58055": 449, "58066": 449, "58072": 449, "58075": 449, "58080": 449, "58083": 449, "58091": 449, "58094": 449, "581": 449, "58103": 449, "58110": 449, "58114": 449, "58124": 449, "58125": 449, "58144": 449, "58159": 449, "58160": 449, "58176": 449, "58181": 449, "58183": 449, "58189": 449, "58190": 449, "58212": 449, "58214": 449, "58215": 449, "58218": 449, "58223": 449, "58240": 449, "58243": 449, "58247": 449, "58259": 449, "58269": 449, "58271": 449, "58284": 449, "583": 449, "58333": 449, "58374": 449, "58376": 449, "58379": 449, "584": 449, "58432": 449, "58442": 449, "58466": 449, "58491": 449, "58495": 449, "585": 449, "58511": 449, "58515": 449, "58538": 449, "58550": 449, "58559": 449, "58560": 449, "58561": 449, "58585": 449, "586": 449, "58616": 449, "58622": 449, "58627": 449, "58633": 449, "58647": 449, "58676": 449, "58678": 449, "58687": 449, "58691": 449, "58695": 449, "58704": 449, "58707": 449, "58708": 449, "58714": 449, "58723": 449, "58727": 449, "58728": 449, "58729": 449, "58740": 449, "58764": 449, "58777": 449, "58781": 449, "58786": 449, "58797": 449, "58798": 449, "58811": 449, "58814": 449, "58820": 449, "58850": 449, "58851": 449, "58857": 449, "58883": 449, "58887": 449, "58912": 449, "58924": 449, "58929": 449, "58942": 449, "58952": 449, "58981": 449, "58984": 449, "58986": 449, "59": [449, 452], "59001": 449, "59020": 449, "59027": 449, "59032": 449, "59034": 449, "59042": 449, "59049": 449, "59050": 449, "59078": 449, "591": 449, "59113": 449, "59121": 449, "59122": 449, "59128": 449, "59132": 449, "59138": 449, "59178": 449, "59215": 449, "59218": 449, "59221": 449, "59248": 449, "59304": 449, "59318": 449, "59321": 449, "59367": 449, "59412": 449, "59418": 449, "59430": 449, "59438": 449, "598": 449, "5th": 449, "6": [191, 194, 449, 450, 451, 453], "60": 449, "600": [449, 450, 452], "604": 449, "608": 449, "61": 449, "610": 449, "6117": 449, "612": 449, "6121": 449, "616": 449, "61601": 449, "61602": 449, "6160201": 449, "6160202": 449, "61603": 449, "61604": 449, "6160401": 449, "6160402": 449, "6160403": 449, "61605": 449, "6160501": 449, "6160502": 449, "61606": 449, "6160601": 449, "6160602": 449, "6160603": 449, "61607": 449, "6160701": 449, "6160702": 449, "61608": 449, "6160801": 449, "6160802": 449, "6160804": 449, "61609": 449, "6160901": 449, "6160902": 449, "61610": 449, "61611": 449, "61612": 449, "61613": 449, "61614": 449, "61615": 449, "61616": 449, "61617": 449, "6162017": 449, "61635": 449, "6163535": 449, "61666": 449, "62": 449, "620": 449, "62001": 449, "6200101": 449, "6200105": 449, "6200106": 449, "6200107": 449, "6200108": 449, "62002": 449, "6200200": 449, "62003": 449, "6200300": 449, "62004": 449, "62005": 449, "62006": 449, "62007": 449, "62008": 449, "62009": 449, "62010": 449, "62011": 449, "62012": 449, "62013": 449, "62014": 449, "62015": 449, "62016": 449, "62017": 449, "62018": 449, "62019": 449, "62020": 449, "6202020": 449, "62021": 449, "62022": 449, "62023": 449, "62024": 449, "62035": 449, "6203535": 449, "62066": 449, "624": 449, "626": 449, "63": 449, "630": 449, "634": 449, "638": 449, "639": 449, "64": 449, "640": 449, "642": 449, "64200": 449, "64201": 449, "6420101": 449, "6420102": 449, "64202": 449, "6420201": 449, "6420202": 449, "64203": 449, "6420301": 449, "6420302": 449, "64204": 449, "6420401": 449, "6420402": 449, "64205": 449, "64206": 449, "64207": 449, "64208": 449, "64209": 449, "64210": 449, "64211": 449, "64212": 449, "64213": 449, "64214": 449, "64215": 449, "64216": 449, "64217": 449, "64218": 449, "64219": 449, "64220": 449, "6422018": 449, "6422019": 449, "64221": 449, "64222": 449, "64223": 449, "64224": 449, "64226": 449, "64235": 449, "6423535": 449, "64266": 449, "643": 449, "64301": 449, "6430101": 449, "64302": 449, "6430201": 449, "64303": 449, "6430301": 449, "64304": 449, "6430401": 449, "64305": 449, "6430501": 449, "64306": 449, "6430601": 449, "64307": 449, "6430701": 449, "64308": 449, "6430801": 449, "64309": 449, "64310": 449, "64311": 449, "64312": 449, "64313": 449, "64314": 449, "64316": 449, "6432017": 449, "64326": 449, "64366": 449, "646": 449, "65": [448, 449], "650": 449, "652": 449, "654": 449, "6562": 449, "659": 449, "66": [449, 452], "660": 449, "66100": 452, "662": 449, "663": 449, "666": 449, "6666": 449, "67": 449, "670": 449, "674": 449, "676": 449, "678": 449, "68": 449, "682": 449, "686": 449, "688": 449, "68801": 449, "6880101": 449, "6880102": 449, "68802": 449, "6880201": 449, "6880202": 449, "68803": 449, "68804": 449, "68805": 449, "68806": 449, "68807": 449, "68808": 449, "68809": 449, "68810": 449, "68811": 449, "68812": 449, "68813": 449, "68814": 449, "68815": 449, "68816": 449, "68817": 449, "68818": 449, "68819": 449, "68820": 449, "6882018": 449, "68821": 449, "68830": 449, "68831": 449, "68835": 449, "6883535": 449, "68866": 449, "69": 449, "690": 449, "6924": 449, "694": 449, "6th": 449, "7": [194, 449, 450, 452], "70": 449, "7000": [449, 451], "700001": 449, "700002": 449, "700003": 449, "7001": 449, "7002": 449, "7003": 449, "7004": 449, "7005": 449, "7006": 449, "7007": 449, "7008": 449, "7009": 449, "7010": 449, "7011": 449, "7012": 449, "7013": 449, "7014": 449, "7015": 449, "7016": 449, "7017": 449, "7018": 449, "7019": 449, "702": 449, "702019": 449, "703": 449, "7030": 449, "70300": 449, "7030001": 449, "7030002": 449, "7030003": 449, "7030004": 449, "70301": 449, "70302": 449, "70303": 449, "70304": 449, "70305": 449, "70306": 449, "70307": 449, "70308": 449, "70309": 449, "7031": 449, "70310": 449, "70311": 449, "70312": 449, "70313": 449, "70314": 449, "70315": 449, "70316": 449, "7032017": 449, "70335": 449, "7033535": 449, "70366": 449, "704": 449, "705": 449, "70500": 449, "7050003": 449, "7050004": 449, "70501": 449, "70502": 449, "70503": 449, "70504": 449, "70505": 449, "70506": 449, "70507": 449, "70508": 449, "70509": 449, "70510": 449, "70511": 449, "70512": 449, "70513": 449, "7052017": 449, "70535": 449, "7053535": 449, "70566": 449, "706": 449, "7066": 449, "709": 449, "71": 449, "710": 449, "716": 449, "72": 449, "720": 449, "724": 449, "72401": 449, "7240101": 449, "7240102": 449, "7240103": 449, "72402": 449, "7240201": 449, "7240202": 449, "7240203": 449, "7240204": 449, "72403": 449, "7240300": 449, "72404": 449, "7240401": 449, "7240402": 449, "7240403": 449, "72405": 449, "7240501": 449, "7240502": 449, "7240503": 449, "72406": 449, "7240601": 449, "7240602": 449, "7240603": 449, "7240604": 449, "72407": 449, "7240700": 449, "72408": 449, "72409": 449, "72410": 449, "72411": 449, "72412": 449, "72413": 449, "72414": 449, "72415": 449, "72416": 449, "72417": 449, "72418": 449, "72419": 449, "72420": 449, "7242017": 449, "72421": 449, "72422": 449, "72423": 449, "72424": 449, "72425": 449, "72426": 449, "72427": 449, "72428": 449, "72435": 449, "7243535": 449, "72466": 449, "728": 449, "729": 449, "73": 449, "732": 449, "74": 449, "740": 449, "744": 449, "748": 449, "75": [448, 449], "750": 449, "752": 449, "75201": 449, "7520101": 449, "7520102": 449, "75202": 449, "7520201": 449, "7520202": 449, "7520203": 449, "75203": 449, "7520301": 449, "7520302": 449, "7520303": 449, "75204": 449, "75205": 449, "75206": 449, "75207": 449, "75208": 449, "75209": 449, "75210": 449, "75211": 449, "75212": 449, "75213": 449, "75214": 449, "75215": 449, "75216": 449, "75217": 449, "75218": 449, "75219": 449, "75220": 449, "7522017": 449, "75231": 449, "75235": 449, "7523535": 449, "75266": 449, "756": 449, "75600": 449, "7560001": 449, "7560002": 449, "7560003": 449, "7560004": 449, "7560005": 449, "7560006": 449, "7560007": 449, "75601": 449, "75602": 449, "75603": 449, "75604": 449, "75605": 449, "75606": 449, "75607": 449, "75608": 449, "75609": 449, "75610": 449, "75611": 449, "75612": 449, "75613": 449, "75614": 449, "75615": 449, "75616": 449, "75617": 449, "75618": 449, "75619": 449, "75620": 449, "7562017": 449, "75621": 449, "75622": 449, "75623": 449, "75624": 449, "75626": 449, "75635": 449, "7563535": 449, "75666": 449, "758": 452, "76": 449, "760": 449, "762": 449, "764": 449, "768": 449, "77": [448, 449], "772": 449, "776": 449, "78": [448, 449], "780": 449, "784": 449, "788": 449, "79": 449, "792": 449, "795": 449, "796": 449, "798": 449, "7th": 449, "8": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 398, 448, 449, 450, 451, 452], "80": [449, 450], "800": 449, "80001": 449, "801": 449, "80102": 449, "802": 449, "80203": 449, "803": 449, "80335": 449, "804": 449, "80400": 449, "80401": 449, "8040101": 449, "8040102": 449, "8040103": 449, "8040104": 449, "80402": 449, "8040201": 449, "8040202": 449, "8040203": 449, "8040204": 449, "80403": 449, "8040301": 449, "80404": 449, "8040401": 449, "8040402": 449, "8040403": 449, "80405": 449, "8040501": 449, "8040502": 449, "8040503": 449, "80406": 449, "8040601": 449, "8040602": 449, "8040603": 449, "80407": 449, "8040701": 449, "8040702": 449, "8040703": 449, "80408": 449, "8040801": 449, "8040802": 449, "8040803": 449, "8040804": 449, "80409": 449, "80410": 449, "80411": 449, "80412": 449, "80413": 449, "80414": 449, "80415": 449, "8042020": 449, "80466": 449, "805": 449, "806": 449, "807": 449, "80700": 449, "8070000": 449, "80701": 449, "80702": 449, "80703": 449, "80704": 449, "80705": 449, "80706": 449, "80707": 449, "80708": 449, "80709": 449, "80710": 449, "80711": 449, "80712": 449, "80713": 449, "80714": 449, "80715": 449, "80716": 449, "80717": 449, "80718": 449, "80719": 449, "8072019": 449, "80731": 449, "80735": 449, "8073535": 449, "80766": 449, "80788": 449, "80799": 449, "808": 449, "809": [449, 452], "81": 449, "810": 449, "811": 449, "812": 449, "813": 449, "814": 449, "815": 449, "816": 449, "817": 449, "818": 449, "819": 449, "82": 449, "820": 449, "82018": 449, "821": 449, "822": 449, "823": 449, "824": 449, "825": 449, "826": 449, "82601": 449, "82602": 449, "82603": 449, "82604": 449, "82605": 449, "82606": 449, "82607": 449, "82608": 449, "82609": 449, "82610": 449, "82611": 449, "82612": 449, "8261201": 449, "8261202": 449, "82613": 449, "8261301": 449, "8261303": 449, "8261304": 449, "8261306": 449, "8261307": 449, "82614": 449, "8261401": 449, "8261402": 449, "8261403": 449, "8261404": 449, "82615": 449, "8261501": 449, "8261502": 449, "8261503": 449, "82616": 449, "8261601": 449, "8261602": 449, "8261603": 449, "82617": 449, "8261701": 449, "8261702": 449, "8261703": 449, "82618": 449, "8261803": 449, "8261804": 449, "8261805": 449, "8261806": 449, "8261807": 449, "82619": 449, "8261901": 449, "8261902": 449, "8261903": 449, "8261904": 449, "82620": 449, "8262001": 449, "8262002": 449, "8262003": 449, "8262004": 449, "8262018": 449, "82621": 449, "8262101": 449, "8262102": 449, "82622": 449, "8262205": 449, "8262206": 449, "8262207": 449, "8262208": 449, "8262209": 449, "82635": 449, "8263535": 449, "82666": 449, "83": 449, "831": 449, "832": 449, "833": 449, "834": 449, "8346": 449, "835": 449, "84": 449, "840": 449, "85": [448, 449], "850": 449, "854": 449, "858": 449, "8598": 452, "86": 449, "860": 449, "862": 449, "866": 449, "869": 449, "87": 449, "8758": 452, "876": 449, "8764": 452, "877": 449, "8783": 452, "8791": 452, "88": 449, "882": 449, "887": 449, "888": 449, "89": 449, "890": 449, "891": 449, "894": 449, "8948": 452, "899": 449, "8994": 452, "8th": 449, "9": [449, 452], "90": [448, 449, 452], "900": 451, "9048": 452, "9066": 452, "90923": 449, "9092300": 449, "91": 449, "915": 449, "92": [448, 449], "9260": 452, "93": 449, "9326": 452, "9338": 452, "9362": 452, "9392": 452, "94": 449, "9405": 452, "9407": 452, "9456": 452, "9469": 452, "95": [448, 449], "951": 449, "96": [448, 449], "9611": 452, "97": 449, "9795": 452, "9798": 452, "98": [448, 449], "9818": 452, "9821": 452, "9858": 452, "9884": 452, "99": [449, 450], "9933": 452, "9935": 450, "9939": 452, "9975": 452, "99999": 449, "9th": 449, "A": [1, 2, 9, 17, 25, 34, 47, 48, 50, 51, 57, 66, 70, 71, 72, 73, 74, 77, 78, 83, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 115, 118, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 176, 178, 180, 181, 182, 187, 191, 192, 195, 198, 199, 201, 202, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 230, 231, 232, 233, 234, 239, 240, 244, 249, 252, 253, 258, 265, 266, 270, 274, 277, 278, 283, 292, 295, 299, 303, 310, 313, 317, 321, 327, 328, 331, 336, 337, 338, 339, 349, 350, 354, 355, 356, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 390, 391, 395, 397, 398, 399, 400, 401, 402, 403, 410, 411, 425, 435, 436, 437, 440, 441, 442, 445, 448, 450, 451, 453], "AND": 449, "AS": 449, "AT": 449, "And": [59, 449], "As": [395, 448, 449, 450, 451, 452], "At": [448, 450, 451], "BE": 449, "BY": 449, "Be": 449, "But": [37, 449, 452], "By": [58, 60, 452], "For": [37, 96, 97, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 194, 224, 226, 340, 346, 351, 353, 399, 403, 448, 449, 450, 451, 452], "IN": 449, "IT": 449, "If": [10, 26, 35, 36, 39, 58, 60, 73, 83, 103, 107, 116, 119, 122, 125, 128, 135, 137, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 164, 167, 168, 170, 172, 173, 174, 175, 176, 194, 196, 212, 215, 221, 222, 225, 231, 236, 243, 252, 253, 254, 262, 269, 277, 278, 279, 289, 294, 299, 307, 312, 317, 338, 339, 342, 370, 371, 379, 380, 381, 384, 385, 390, 391, 403, 409, 413, 417, 418, 426, 435, 440, 442, 443, 445, 448, 449, 450, 451, 452], "In": [94, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 167, 168, 175, 221, 222, 339, 400, 401, 448, 449, 450, 451, 452], "It": [17, 34, 70, 98, 130, 349, 435, 448, 449, 450, 451, 452], "NO": 449, "NOT": 449, "No": 449, "Not": [448, 449], "OF": 449, "On": [395, 450], "One": [65, 214, 449, 450, 452], "Such": [175, 448, 449, 450, 451], "THE": 449, "TO": 449, "That": [448, 449, 452], "The": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 73, 75, 76, 81, 82, 83, 84, 85, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 108, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 188, 189, 190, 191, 194, 195, 197, 200, 206, 209, 213, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 229, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 335, 336, 337, 338, 339, 340, 342, 346, 349, 350, 351, 353, 354, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 394, 398, 399, 403, 411, 413, 414, 415, 416, 417, 418, 419, 421, 424, 426, 427, 428, 429, 430, 431, 432, 435, 436, 440, 441, 442, 443, 445, 448, 449, 450, 453], "Their": 215, "Then": [448, 449, 450, 452], "There": [339, 448, 449, 451, 452], "These": [448, 449, 451, 452], "To": [448, 449, 450, 451, 452], "Will": 449, "With": 452, "Withnesses": 449, "_": [448, 450, 451], "__getitem__": [130, 236, 262, 289, 307], "__init__": 442, "_data": [140, 145], "_i": 448, "_include_split": 449, "_known_feature_matric": [257, 282], "_known_sep_matric": [302, 320], "_matrix": 173, "_outer_oper": 389, "_sep_id": 452, "_varinfo": [140, 145], "a1": 452, "a10": 452, "a2": 452, "a3": 452, "a4": 452, "a5": 452, "a6": 452, "a7": 452, "a8": 452, "a9": 452, "a_": 449, "a_1": 449, "a_2": 449, "a_bg": 450, "a_fg": 450, "a_i": 449, "a_k": 449, "aa": 449, "ab": [449, 452], "abbrevi": [449, 452], "abil": 449, "abkhazian": 449, "abl": [156, 159, 448, 449, 450, 451, 452], "abort": [448, 449], "about": [39, 45, 54, 130, 132, 148, 154, 155, 166, 168, 205, 233, 260, 261, 285, 286, 305, 306, 323, 324, 449, 450, 451, 452, 453], "abov": [448, 449, 450, 451, 452], "abruzzo": 449, "absenc": [448, 450], "absheron": 449, "absolut": [383, 449], "abstract": [2, 4, 48, 49, 50, 51, 52, 53, 54, 56, 100, 103, 107, 116, 156, 158, 165, 196, 308, 313, 314, 317, 331, 332, 334, 360, 363, 366, 418, 420, 448, 450, 452], "academ": 449, "academi": 449, "accept": [339, 449], "access": [237, 263, 289, 290, 307, 308, 414, 449], "accid": 449, "accident": 167, "accord": [101, 103, 105, 107, 114, 116, 130, 143, 168, 194, 196, 436, 450], "accordo": 449, "account": [100, 101, 105, 114, 119, 121, 122, 124, 125, 127, 128, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 400, 401, 449, 450, 451], "accumul": 448, "achiev": [448, 449, 450, 452], "acquaint": 449, "across": [367, 368, 369, 448], "act": 449, "action": 449, "activ": [435, 449, 450], "actual": [34, 435, 448, 449, 450, 451, 452], "ad": [34, 44, 211, 221, 222, 230, 231, 239, 240, 244, 251, 265, 266, 276, 292, 295, 298, 310, 313, 316, 338, 346, 348, 352, 370, 371, 449, 451, 452], "adapt": 448, "add": [58, 60, 178, 179, 190, 210, 211, 236, 238, 239, 240, 262, 264, 265, 266, 289, 291, 292, 307, 309, 310, 450, 451, 452], "add_all_corners_of_featur": 331, "add_ax": 448, "add_corn": [236, 262, 289, 307], "add_featur": [236, 262], "add_patch": 448, "add_sep": [236, 262, 289, 307], "add_valu": 178, "addict": 449, "addit": [17, 449, 450, 451], "addition": [73, 260, 261, 285, 286, 305, 306, 323, 324, 441, 448, 450, 452], "address": 452, "adequ": 449, "adj": [370, 371, 372, 375, 376], "adj_matrix": 379, "adjac": [331, 336, 338, 355, 356, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 384, 397, 399, 450, 451, 452], "adjacency_matrix": [357, 358, 361, 364, 367, 368, 369, 399], "adjust": 452, "administ": 449, "administr": 449, "admiss": 449, "adp": 449, "adult": 449, "advanc": [216, 236, 252, 449], "advancedagreementfunc": 86, "advancedfeaturesystem": [87, 211, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "advantag": [448, 452], "adventist": 449, "ae": 449, "aegean": 449, "aesthet": 449, "af": [398, 399, 449], "afar": 449, "affect": [134, 452], "afford": 448, "afghanistan": 449, "africa": 449, "african": 449, "afrikaan": 449, "aft": 449, "after": [14, 15, 31, 32, 44, 58, 104, 108, 117, 149, 194, 197, 331, 335, 342, 377, 382, 430, 431, 448, 449, 450, 452], "afterward": [221, 448, 449], "ag": 449, "aga": 449, "again": [449, 450, 451, 452], "against": 449, "agc": 449, "agdash": 449, "agder": 449, "agdzhebedinski": 449, "age_r": 449, "age_r2": 449, "age_r3": 449, "age_r3_weight": 449, "agent": 449, "aggreg": 448, "agr_func": 91, "agrarian": 449, "agre": [449, 452], "agreeabl": 452, "agreeement": 37, "agreement": [1, 17, 19, 23, 26, 34, 35, 36, 37, 39, 43, 45, 46, 47, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 73, 75, 76, 77, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 166, 167, 170, 173, 174, 177, 198, 200, 201, 205, 206, 225, 226, 230, 231, 346, 448, 449, 450, 451, 452], "agreement_func": [1, 57, 230, 450], "agreement_lower_bound": [58, 60], "agreement_rang": 448, "agreementfunc": [57, 86, 91, 92, 230], "agreementfuncbitarrai": 86, "agreementfuncbitarraybip": 86, "agricultur": 449, "agstafa": 449, "agsu": 449, "agu": 449, "ah": 449, "ai": 449, "aid": 449, "aigaio": 449, "aigaiou": 449, "aim": [448, 449], "ak": 449, "akan": 449, "akershu": 449, "al": 449, "al0": 449, "al01": 449, "al02": 449, "al03": 449, "albania": 449, "albanian": 449, "alenka": 449, "alentejo": 449, "alev": 449, "alf\u00f6ld": 449, "algarv": 449, "algebra": 451, "algeria": 449, "algorihm": 450, "algorithm": [57, 229, 230, 448, 449, 450, 451, 452], "alianc": 449, "align": [448, 452], "aliv": 450, "all": [2, 10, 12, 17, 26, 28, 34, 35, 36, 39, 45, 47, 54, 59, 60, 66, 69, 73, 83, 99, 101, 105, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 172, 176, 178, 180, 194, 198, 205, 236, 241, 242, 247, 249, 262, 267, 268, 272, 274, 289, 293, 297, 307, 311, 315, 342, 367, 368, 369, 377, 381, 384, 400, 401, 403, 411, 413, 418, 426, 428, 439, 442, 443, 449, 450, 451], "all_feature_id": [236, 262], "all_integer_variables_are_ordin": 137, "all_oriented_feature_id": [47, 73, 198], "all_scores_in_one_imag": 450, "all_sep_id": [236, 262, 289, 307], "all_values_as_list": 178, "allianc": 449, "allow": [100, 159, 437, 442, 448, 449, 450, 451, 452], "almost": 452, "alon": [448, 449, 451], "along": [406, 407, 408, 409, 450], "alp": 449, "alpha": [448, 449, 450], "alpha_": 448, "alreadi": [138, 236, 243, 252, 253, 257, 262, 269, 277, 278, 282, 289, 294, 299, 302, 307, 312, 317, 320, 436, 448, 450, 452], "alsac": 449, "also": [73, 173, 231, 244, 257, 282, 295, 302, 313, 320, 346, 383, 398, 399, 403, 442, 448, 451, 452, 453], "altern": 449, "although": 449, "alwai": [448, 449, 450, 452], "alz": 449, "alzz": 449, "am": [449, 452], "am0": 449, "am01": 449, "am02": 449, "am03": 449, "am04": 449, "america": 449, "american": 449, "amhar": 449, "amount": [379, 448, 449, 452], "amz": 449, "amzz": 449, "an": [1, 2, 8, 16, 17, 24, 33, 46, 60, 64, 73, 86, 88, 92, 100, 101, 102, 104, 105, 106, 108, 114, 115, 117, 127, 132, 136, 137, 144, 166, 170, 173, 178, 193, 194, 195, 197, 211, 212, 215, 216, 218, 220, 221, 222, 239, 240, 257, 260, 261, 265, 266, 282, 285, 286, 292, 302, 305, 306, 310, 320, 323, 324, 331, 332, 334, 335, 336, 337, 340, 341, 346, 358, 360, 361, 363, 364, 366, 377, 379, 382, 383, 398, 399, 403, 413, 418, 424, 432, 435, 437, 442, 445, 446, 449, 450, 453], "analys": [1, 224, 342, 448, 449, 450, 452], "analysi": [1, 55, 84, 94, 95, 96, 97, 98, 99, 130, 132, 206, 331, 339, 448, 450, 451, 452, 453], "analyt": 448, "analyz": 452, "ancestri": 449, "andaluc\u00eda": 449, "andorra": 449, "anglia": 449, "anglican": 449, "angola": 449, "anguilla": 449, "anhalt": 449, "ani": [58, 70, 174, 221, 243, 269, 294, 312, 435, 448, 449, 451, 452], "anim": 449, "anno_func": 448, "annot": [435, 437, 445, 446, 450, 452], "annotation_func": [445, 448, 450], "annotation_func_ax": 446, "annotation_is_imag": [445, 448, 450], "annotation_offset": [445, 448, 450], "annotation_x_posit": [445, 448, 450], "annotation_zoom": [445, 448, 450], "annotationfuncax": [437, 446], "annotationfuncimg": [437, 445, 446], "annotationfunctxt": 445, "annoy": 448, "ano": 449, "anoth": [37, 100, 163, 175, 230, 254, 279, 287, 288, 442, 449, 450, 451, 452], "answer": [100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 136, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 176, 214, 215, 217, 218, 230, 448, 449, 452], "antarctica": 449, "antialias": 450, "anticapitalist": 449, "anticip": 448, "antigua": 449, "any_nod": [71, 451], "anymor": [449, 450], "anyon": 449, "anyth": 448, "anywher": 448, "ao": 449, "aost": 449, "aosta": 449, "apart": 450, "api": 0, "apostol": 449, "appeal": [449, 450], "appealingli": 448, "appear": [75, 83, 175, 260, 261, 285, 286, 305, 306, 323, 324, 346, 448, 450, 451, 452], "append": [47, 48, 51, 57, 58, 60, 73, 74, 78, 83, 138, 198, 199, 202, 221, 222, 287, 385, 450], "append_corner_featur": 210, "append_next_featur": 451, "append_separ": 57, "appli": [383, 445, 448, 449, 451, 452], "applic": [449, 450, 451, 452], "apprentic": 449, "apprenticeship": 449, "approach": [448, 450, 452], "appropri": [449, 451, 452], "approxim": [397, 398, 448, 452], "apricot": 449, "apsheron": 449, "aptitud": 449, "aq": 449, "aquitain": 449, "ar": [1, 10, 16, 26, 33, 35, 36, 39, 45, 54, 58, 59, 60, 71, 73, 83, 99, 103, 107, 116, 119, 122, 124, 125, 128, 130, 133, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 164, 166, 168, 172, 173, 174, 175, 176, 178, 179, 188, 189, 194, 196, 205, 215, 221, 222, 225, 230, 231, 236, 243, 247, 251, 252, 253, 255, 257, 262, 269, 272, 276, 277, 278, 280, 282, 289, 294, 297, 298, 299, 301, 302, 307, 312, 315, 316, 317, 319, 320, 327, 336, 338, 340, 342, 346, 349, 367, 370, 371, 374, 377, 378, 381, 384, 385, 395, 398, 400, 401, 403, 411, 413, 415, 417, 426, 432, 441, 442, 449, 450, 451, 452, 453], "arab": 449, "arabia": 449, "aragones": 449, "arag\u00f3n": 449, "aran": 449, "arang": [448, 450], "arbitrari": [448, 449], "arbitrarili": [448, 451], "architect": 449, "archiv": 449, "ardenn": 449, "area": [448, 449, 452], "aren": 452, "argentina": 449, "argmax": [450, 451], "argmin_": 450, "argpartit": 450, "argsort": [448, 450, 451, 452], "argument": [88, 168, 380, 384], "aris": [449, 450], "arm": [449, 451], "armen": 449, "armenia": 449, "armenian": 449, "armi": 449, "arnsberg": 449, "around": [448, 450, 452], "arrai": [34, 57, 133, 136, 198, 210, 212, 221, 222, 270, 326, 328, 331, 332, 334, 335, 336, 340, 341, 342, 356, 358, 360, 361, 363, 364, 366, 372, 382, 396, 445, 448, 450, 451, 452], "arrang": [438, 439, 441, 448, 451], "arraylik": [139, 239, 240, 260, 261, 265, 266, 285, 286, 292, 305, 306, 310, 323, 324, 445], "art": 449, "artefact": 450, "artif": 451, "artifici": [449, 450], "artist": 449, "aruba": 449, "asarrai": 452, "asatru": 449, "ascend": [73, 221, 222, 450], "ascens": 449, "asia": 449, "ask": 449, "aspect": [130, 154, 448, 449, 450, 451, 452], "aspirantura": 449, "assames": 449, "assembl": 449, "assemble_meta_info": [236, 262, 289, 307], "assembli": 449, "assign": [100, 121, 124, 159, 162, 217, 338, 339, 448, 449, 452], "assist": 449, "associ": [34, 44, 104, 108, 117, 197, 448, 449, 451, 452], "assum": [137, 194, 349, 448, 451, 452], "ast": 449, "astara": 449, "astonishingli": 448, "asturia": 449, "astyp": 452, "at1": 449, "at11": 449, "at12": 449, "at13": 449, "at2": 449, "at21": 449, "at22": 449, "at3": 449, "at31": 449, "at32": 449, "at33": 449, "at34": 449, "atheist": 449, "atom": [326, 327, 328, 329, 330], "atomic_set": [235, 327, 329, 330], "atomic_set_ind": 326, "atomic_to_sep": 326, "atribut": 449, "attack": 449, "attempt": [60, 346], "attend": 449, "attent": [449, 450, 451, 452], "attestat": 449, "attica": 449, "attiki": 449, "attitud": 449, "attribut": [75, 88, 449], "atz": 449, "atzz": 449, "au": 449, "audiovisu": 449, "augsburg": 449, "australia": 449, "austria": 449, "austrian": 449, "author": 449, "automat": [137, 138, 144, 146, 147, 148, 149, 152, 178, 449, 450, 451, 452], "autonoma": 449, "aut\u00f3noma": 449, "auvergn": 449, "auxiliari": [54, 205, 449], "av": 449, "avail": 449, "avar": 449, "avc": 449, "averag": [450, 452], "avestan": 449, "avoid": [243, 257, 269, 282, 294, 302, 312, 320, 448, 449, 450, 452], "aw": 449, "awai": [415, 449, 452], "ax": [412, 435, 436, 439, 440, 441, 442, 445, 446, 448, 449, 450, 451, 452], "ax2": 448, "ax_project": [435, 452], "axhline_kwarg": 412, "axi": [339, 381, 406, 407, 408, 409, 417, 435, 442, 445, 448, 450, 451, 452], "aymara": 449, "az": 449, "az1": 449, "az2": 449, "az3": 449, "az4": 449, "az5": 449, "az6": 449, "az7": 449, "az8": 449, "azerbaijan": 449, "azerbaijani": 449, "azur": 449, "a\u00e7or": 449, "b": [236, 254, 262, 279, 289, 300, 307, 318, 395, 402, 448, 449, 450, 452], "ba": 449, "babih": 449, "babrc": 449, "bacalaureat": 449, "baccalaur": 449, "baccalaureat": 449, "baccalaureu": 449, "baccalaur\u00e9at": 449, "bachelor": 449, "back": [2, 8, 17, 24, 60, 215, 326, 329, 418, 424, 449, 450, 452], "backend": 448, "backend_agg": 448, "background": [450, 451, 452], "bad": [448, 449], "baden": 449, "bag": [373, 374], "bag_ind": 374, "baha": 449, "bahama": 449, "bahrain": 449, "bah\u00e1": 449, "baker": 449, "baku": 449, "bal": 449, "balanc": [211, 212, 343, 344, 345, 398, 399, 403, 406, 450, 451], "balanced_data": 407, "balear": 449, "bambara": 449, "bandi\u0107": 449, "bangladesh": 449, "banker": 449, "baptist": 449, "bar": [449, 450, 452], "baranja": 449, "barbado": 449, "barber": 449, "barbuda": 449, "barda": 449, "barth\u00e9lemi": 449, "base": [2, 4, 100, 156, 331, 332, 348, 352, 377, 379, 397, 400, 401, 418, 420, 442, 449, 450, 453], "bashkir": 449, "basi": 449, "basic": [448, 449, 451, 452], "basilicata": 449, "basqu": 449, "basrp": 449, "bass": 449, "bath": 449, "batkivshchyna": 449, "bayern": 449, "bb": 449, "bd": 449, "beak": 449, "bear": 450, "beauti": [448, 449], "bec": 449, "becaus": [448, 449, 450, 452], "becom": [243, 269, 294, 312, 449, 452], "bed": 449, "bedfordshir": 449, "been": [104, 108, 117, 197, 215, 448, 449], "befor": [236, 243, 262, 269, 289, 294, 307, 312, 448, 449, 451], "begin": 452, "behav": [400, 401], "behaviour": [100, 163, 452], "behind": 452, "bei": 449, "being": [243, 265, 269, 294, 301, 312, 319, 450, 452], "bekrathi": 449, "belakanski": 449, "belaru": 449, "belarusian": 449, "belgium": 449, "belief": 449, "believ": 449, "beliz": 449, "belong": [168, 448, 449, 450, 451, 452], "below": [2, 12, 17, 28, 35, 39, 45, 47, 49, 54, 57, 60, 61, 73, 75, 76, 81, 167, 198, 200, 205, 382, 383, 400, 401, 418, 428, 448, 449, 451], "benefici": [449, 450, 451], "benefit": [449, 452], "beng": 449, "bengali": 449, "benin": 449, "beograd": 449, "beogradski": 449, "berkshir": 449, "berlin": 449, "bermuda": 449, "besa": 449, "best": [370, 371, 448, 449, 451, 452], "better": [337, 346, 435, 448, 449, 451, 452], "between": [71, 99, 100, 215, 336, 348, 350, 354, 377, 379, 381, 382, 383, 400, 401, 441, 448, 449, 450, 451, 452], "betwixt": 451, "beylagan": 449, "beyond": 448, "bf": 449, "bg": 449, "bg0": 449, "bg3": 449, "bg31": 449, "bg32": 449, "bg33": 449, "bg34": 449, "bg4": 449, "bg41": 449, "bg42": 449, "bgz": 449, "bgzz": 449, "bh": 449, "bhutan": 449, "bi": 449, "bias": [100, 110, 216, 220], "big": [236, 246, 262, 271, 289, 296, 307, 314, 342, 448, 449, 450, 452], "big5": 452, "bigcup": 448, "bigger": [342, 448, 449, 450, 452], "biggest": 448, "bih": 449, "bihari": 449, "bil": 449, "bilasuvar": 449, "bin": [100, 214, 215, 452], "bin_tree_nod": [448, 450, 451], "bin_tree_par": 450, "binari": [1, 2, 8, 10, 17, 24, 26, 34, 100, 118, 120, 121, 123, 124, 126, 127, 129, 156, 158, 159, 161, 163, 165, 209, 411, 418, 424, 426, 449, 450, 452], "binary_unique_value_featur": 100, "bintre": [410, 418, 448, 451], "bintreenetworkx": [410, 412, 413, 414, 415, 416, 417, 448, 450, 451], "bintreenod": [2, 3, 4, 8, 10, 12, 18, 24, 26, 28, 410, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "bipartit": [100, 215, 331, 341, 342, 397, 402, 438, 439, 440, 441, 448, 450, 451, 452], "birth": 449, "bislama": 449, "bissau": 449, "bit": [378, 448, 449, 450, 451, 452], "bj": 449, "bl": 449, "black": [448, 449, 450], "blank": 449, "blob": 448, "bloc": 449, "block": 449, "blok": 449, "blue": [448, 450, 452], "bm": 449, "bn": 449, "bnf": 449, "bnp": 449, "bo": 449, "bodi": 451, "bohemia": 449, "boi": 449, "bokm\u00e5l": 449, "bolivarian": 449, "bolivia": 449, "bologn": 449, "bologna": 449, "bolzano": 449, "bonair": 449, "book": [100, 109, 110, 111, 112, 113, 216, 220, 367, 397, 404, 405, 448, 449, 450, 451, 452], "bookkeep": 449, "bool": [6, 9, 21, 23, 25, 35, 54, 57, 68, 73, 83, 103, 107, 116, 119, 122, 125, 128, 132, 135, 137, 138, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 160, 164, 167, 168, 170, 172, 173, 174, 175, 176, 178, 183, 184, 185, 186, 187, 188, 196, 205, 211, 212, 220, 227, 230, 233, 254, 255, 256, 260, 261, 279, 280, 281, 285, 286, 300, 301, 305, 306, 318, 319, 323, 324, 339, 342, 356, 370, 371, 378, 379, 381, 382, 384, 400, 401, 422, 425, 435, 440, 442, 443, 445, 449, 450], "boolean": [133, 227], "border": [448, 449, 450, 451], "borderlin": 450, "bori": 449, "born": 449, "bosnia": 449, "bosniak": 449, "bosnian": 449, "both": [55, 75, 84, 100, 121, 130, 140, 145, 206, 217, 255, 280, 338, 349, 391, 395, 448, 449, 450, 451, 452], "both_direct": 450, "botswana": 449, "bottom": [417, 448, 450, 451], "bougeoi": 449, "bound": [60, 166, 167, 170, 173, 177, 451], "boundari": [215, 400, 401, 440, 441, 448, 450], "boundary_node_color": [440, 441], "boundary_node_color_neg": [439, 441], "boundary_node_color_po": [439, 441], "boundary_node_s": 440, "bourgogn": 449, "bouvet": 449, "box": [445, 449], "boycott": 449, "bozen": 449, "bq": 449, "br": 449, "brabant": 449, "branch": [448, 450], "brandenburg": 449, "bratislavsk\u00fd": 449, "bratusek": 449, "braunschweig": 449, "brazil": 449, "break": 449, "bremen": 449, "brest": 449, "bretagn": 449, "brethren": 449, "breton": 449, "brevet": 449, "bribe": 449, "bricklay": 449, "bridg": 449, "brief": [178, 452], "bright": [449, 451], "brighter": 451, "bristol": 449, "britain": 449, "british": 449, "broken": [384, 449], "brother": 449, "brunei": 449, "br\u010dko": 449, "bsc": 449, "bsp": 449, "bt": 449, "btec": 449, "bu": 449, "buckinghamshir": 449, "bucure\u0219ti": 449, "budapest": 449, "buddhism": 449, "buddhist": 449, "buddism": 449, "budhist": 449, "buffer_rgba": 448, "bui": 449, "build": [1, 34, 38, 43, 57, 173, 448, 449, 451], "bulgaria": 449, "bulgarian": 449, "bump": 450, "bunch": [212, 221, 222, 448, 449, 450, 451], "bundl": [100, 198], "burgenland": 449, "burkina": 449, "burmes": 449, "burundi": 449, "busi": 449, "button": 450, "buyer": 449, "bv": 449, "bw": 449, "by0": 449, "by01": 449, "by02": 449, "by03": 449, "by04": 449, "by05": 449, "by06": 449, "by07": 449, "byz": 449, "byzz": 449, "bz": 449, "c": [395, 398, 399, 403, 448, 449, 451, 452], "c1": 452, "c10": 452, "c2": 452, "c3": 452, "c4": 452, "c5": 452, "c6": 452, "c7": 452, "c8": 452, "c9": 452, "c_abrv": 449, "c_i": 448, "c_order": 450, "ca": 449, "cabo": 449, "cach": [257, 282, 302, 320], "caico": 449, "cal": 449, "calabria": 449, "calai": 449, "calc_factor_weights_by_score_weighted_particip": 452, "calc_factor_weights_per_particip": 452, "calcul": [1, 92, 93, 94, 95, 96, 97, 98, 99, 224, 230, 236, 238, 244, 251, 257, 262, 264, 276, 282, 289, 291, 295, 298, 302, 307, 309, 313, 316, 320, 331, 335, 337, 338, 339, 349, 367, 368, 369, 373, 374, 379, 381, 382, 383, 385, 390, 391, 449, 452], "calculateagr": 86, "caledonia": 449, "calibr": 449, "call": [14, 15, 31, 32, 88, 104, 108, 117, 139, 197, 380, 384, 430, 431, 437, 442, 443, 446, 448, 449, 450, 451, 452], "callabl": [57, 73, 88, 119, 122, 125, 128, 135, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 160, 162, 164, 166, 173, 176, 211, 212, 216, 221, 222, 230, 232, 233, 234, 380, 404, 405, 435, 445, 446], "callback": [81, 410, 435, 436, 442, 443, 445, 449, 450], "callback_object": [442, 450, 451], "caller": 445, "calvinist": 449, "cambodia": 449, "came": 449, "cameroon": 449, "campania": 449, "can": [57, 59, 70, 99, 100, 101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 130, 132, 137, 138, 140, 144, 146, 147, 148, 149, 152, 156, 163, 167, 178, 191, 194, 196, 197, 211, 212, 218, 233, 287, 339, 395, 435, 437, 445, 446, 448, 449, 450, 451, 452, 453], "canada": 449, "canari": 449, "canaria": 449, "cand": 449, "candid": 449, "canneri": 449, "cannot": [221, 448, 449, 452], "cantabria": 449, "canva": 448, "cap": [448, 449, 450], "capabl": 448, "capac": 236, "capi": 449, "capit": 449, "capitalist": 448, "captur": [448, 450, 451, 452], "care": [449, 452], "caretak": 449, "caribbean": 449, "carpent": 449, "casapound": 449, "case": [37, 94, 167, 168, 221, 222, 243, 269, 294, 312, 339, 417, 448, 449, 450, 451, 452], "caseno": 449, "cast": 448, "castilla": 449, "casual": 449, "cat": 449, "catalan": 449, "catalonia": 449, "catalu\u00f1a": 449, "categori": [448, 449], "cathol": 449, "catholic": 449, "cati": 449, "caucasian": 449, "caus": [60, 407], "caveat": 448, "cawi": 449, "cayman": 449, "cb": 448, "cc": 449, "cd": 449, "cdot": 450, "ce": 449, "ceas": [94, 99], "ceil": [448, 451], "cell": [448, 449, 450], "center": [435, 448, 449, 451, 452], "center_boundary_part": 441, "centr": 449, "central": 449, "centralni": 449, "centro": 449, "centru": 449, "certain": [2, 12, 17, 28, 96, 97, 98, 418, 428, 448, 449], "certainti": 37, "certif": 449, "certifi": 449, "certificat": 449, "ceuta": 449, "cf": 449, "cg": 449, "ch": 449, "ch0": 449, "ch01": 449, "ch02": 449, "ch03": 449, "ch04": 449, "ch05": 449, "ch06": 449, "ch07": 449, "chad": 449, "challeng": 449, "chamorro": 449, "champagn": 449, "chanc": 452, "chang": [58, 100, 134, 144, 149, 151, 159, 166, 167, 255, 280, 334, 337, 360, 363, 366, 398, 399, 403, 448, 449, 450, 452], "change_agr": [166, 449, 452], "change_discrete_deriv": [332, 358, 361, 364], "change_index": [333, 359, 362, 365], "change_type_to": 144, "channel": 383, "chapter": 448, "charact": 452, "character": [448, 452], "characterist": [449, 452], "charent": 449, "charismat": 449, "charit": 449, "cheapli": 448, "cheat": 449, "chechen": 449, "check": [10, 17, 23, 26, 66, 68, 130, 132, 178, 183, 184, 185, 186, 187, 227, 230, 236, 243, 247, 254, 255, 256, 262, 269, 272, 279, 280, 281, 289, 294, 297, 300, 301, 307, 312, 315, 318, 319, 342, 426, 448, 449, 452], "check_connect": 342, "check_vari": 130, "chemnitz": 449, "cherkasi": 449, "chernihiv": 449, "chernivtsi": 449, "cheshir": 449, "chest": 449, "chichewa": 449, "chief": 449, "child": [2, 6, 14, 15, 17, 21, 31, 32, 34, 225, 418, 422, 430, 431, 449], "child_id": 450, "childhood": 449, "children": [2, 9, 17, 25, 29, 231, 418, 425, 448, 449], "chile": 449, "china": 449, "chines": 449, "choic": [411, 448, 451, 452], "choos": [75, 139, 449, 450, 451, 452], "chore": [449, 452], "chose": 346, "chosen": [216, 340, 417, 448, 450, 452], "christ": 449, "christian": 449, "christma": 449, "chunk": [378, 379], "chunk_siz": [378, 379], "church": 449, "chuvash": 449, "chz": 449, "chzz": 449, "ci": 449, "circl": [435, 438, 441, 448], "citi": 449, "citizen": 449, "citizenship": 449, "ciudad": 449, "civic": 449, "civil": 449, "civilian": 449, "cj": [398, 399, 403], "ck": 449, "cl": 449, "claim": 449, "class": [1, 2, 17, 34, 47, 57, 64, 66, 71, 73, 86, 87, 88, 89, 90, 91, 100, 101, 105, 109, 110, 111, 112, 113, 114, 118, 120, 121, 123, 124, 126, 127, 129, 130, 156, 158, 159, 161, 163, 165, 166, 178, 194, 198, 208, 229, 230, 232, 233, 234, 235, 236, 262, 287, 289, 307, 325, 331, 332, 357, 358, 361, 364, 385, 386, 387, 388, 389, 392, 393, 395, 396, 397, 398, 410, 411, 418, 433, 434, 437, 438, 442, 448, 449, 450], "classic": 449, "classif": 452, "classifi": [448, 449], "classmethod": [8, 24, 173, 260, 261, 285, 286, 305, 306, 323, 324, 424], "claus": [385, 395], "clean": [100, 130, 453], "cleaner": 449, "clear": [450, 452], "clearli": [448, 452], "cleric": 449, "clerk": 449, "click": [442, 445, 450], "close": [338, 377, 381, 400, 401, 448, 449, 451], "closer": [338, 450, 452], "closest": [449, 450], "closur": 451, "cloud": [0, 453], "cluster": [93, 96, 97, 453], "clustering_matrix": 97, "clustesr": 448, "clutter": 451, "cm": 449, "cmap": [448, 450, 451], "cn": 449, "cnaa": 449, "cnf": [257, 282, 302, 320, 385, 390, 391, 394, 395], "cnr": 449, "cntry_i": 449, "co": 449, "coalit": 449, "coastal": 449, "coco": 449, "code": [449, 451, 452], "coher": [93, 94, 99, 450, 453], "coherence_level": 93, "col": [55, 84, 206, 398, 448], "col_data": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165], "collect": [448, 449, 450], "collector": 448, "colleg": 449, "colombia": 449, "color": [383, 439, 440, 441, 448, 450, 451, 452], "color_sim_p": 383, "colorbar": 448, "colorbarbas": 448, "colsplit_mutual_inform": 348, "column": [83, 94, 96, 97, 98, 99, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 173, 175, 176, 178, 221, 222, 236, 237, 335, 336, 338, 341, 342, 348, 349, 350, 351, 354, 355, 356, 395, 398, 399, 402, 403, 448, 449, 450, 452], "column_nam": [119, 122, 125, 128, 157, 160, 164], "column_ord": 99, "column_select": [118, 119, 121, 122, 124, 125, 127, 128, 130, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 163, 164, 176], "columnselect": 449, "columnvector": [262, 263], "combin": [144, 448, 450, 451, 452], "combinatori": [355, 372, 451], "combine_labels_if_not_inject": [144, 188], "combined_entropi": 349, "come": [448, 449, 452], "comerci": 449, "comfort": [450, 452], "commerci": 449, "commiss": 449, "common": [449, 451, 452], "commun": 449, "communist": 449, "comoro": 449, "compani": [448, 449], "compar": [449, 452], "compat": 452, "competit": 449, "compl": 449, "complement": [124, 168, 248, 273, 448], "complementari": 449, "complet": [130, 133, 331, 341, 448, 449, 450, 451, 452], "complete_row": [130, 449], "complete_survei": 449, "complex": [93, 95, 99, 448, 450, 451], "complexity_level": 93, "complic": 448, "compon": [176, 331, 336, 338, 339, 342, 355, 356, 398, 441, 452], "compos": [448, 452], "compound": [168, 450, 451], "compound_ord": 450, "comprehens": 449, "compromis": 449, "compulsori": 449, "comput": [34, 46, 47, 55, 73, 84, 198, 206, 210, 211, 212, 216, 221, 222, 243, 257, 262, 269, 270, 282, 294, 302, 312, 320, 331, 341, 342, 348, 350, 351, 353, 354, 355, 356, 372, 375, 376, 377, 378, 383, 397, 398, 399, 403, 448, 450, 451, 452], "computation": 448, "compute_corner_featur": [210, 451], "compute_infimum": [236, 262, 289, 307, 452], "compute_value_count": 155, "comt\u00e9": 449, "comunidad": 449, "concaten": 450, "concept": [448, 450, 451, 452], "conceptu": [448, 451], "concern": [449, 452], "conclus": 449, "concord": 449, "concret": 448, "condens": [380, 384], "condit": [73, 448, 449, 450], "conduct": 449, "confer": 449, "confess": 449, "confid": [448, 449], "configur": [215, 449, 452], "conformist": 449, "confus": [448, 449], "conglomer": 448, "congo": 449, "congreg": 449, "congress": 449, "conjuct": 395, "conjunct": [168, 257, 282, 302, 320, 385, 395], "conjunctivenormalform": 385, "connect": [5, 20, 331, 338, 342, 355, 356, 377, 380, 381, 384, 411, 421, 439, 441, 442, 443, 448, 450, 451, 452], "connected_compon": 452, "connected_component_ind": 355, "conscienc": 448, "conscienti": 452, "conscious": 449, "consecut": 450, "consequ": 452, "conserav": 449, "conserv": 449, "conservatori": 449, "consid": [75, 98, 119, 122, 125, 128, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 225, 398, 448, 449, 452], "consider": 452, "consist": [449, 450, 452], "consol": 132, "const_answ": 449, "constant": [342, 380, 451], "constantinopl": 449, "construct": 449, "consult": [448, 449, 451], "consum": [167, 449], "contact": 449, "contain": [2, 8, 12, 16, 17, 24, 28, 33, 34, 36, 38, 39, 43, 64, 65, 73, 75, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 143, 146, 147, 149, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 172, 173, 174, 176, 178, 191, 194, 195, 212, 221, 222, 224, 225, 236, 239, 243, 251, 252, 253, 260, 261, 262, 265, 269, 270, 276, 277, 278, 285, 286, 289, 290, 294, 299, 305, 306, 307, 308, 312, 317, 323, 324, 327, 328, 332, 334, 335, 338, 340, 341, 342, 346, 348, 354, 355, 356, 358, 360, 361, 363, 364, 366, 372, 374, 376, 378, 381, 382, 383, 399, 402, 403, 424, 428, 432, 439, 441, 442, 448, 449, 450, 451, 452], "content": [445, 450], "context": [448, 449], "contin": 449, "continent": 449, "continu": [448, 452], "continuous_upd": 442, "contour": 450, "contour_extend": 450, "contour_extension_offset": 450, "contract": [326, 329, 330], "contract_graph": 373, "contradictori": 452, "contrari": [450, 451], "contrarili": 452, "contrario": 449, "control": [211, 212, 449], "conveni": [1, 73, 101, 105, 109, 110, 111, 112, 113, 114, 118, 121, 124, 127, 130, 132, 138, 156, 159, 163, 166, 173, 178, 194, 198, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 448, 449, 451, 452], "convenience_featur": [100, 211, 212, 451], "convers": 452, "convert": [409, 448, 449, 450], "convinc": 449, "cook": 449, "coordin": [339, 377, 381, 383, 417, 441, 442, 443], "copi": [2, 5, 6, 17, 20, 21, 34, 43, 73, 130, 236, 418, 421, 422, 449], "copy_sep_si": 73, "copy_subtre": [2, 17, 418], "copy_subtree_into_children": [2, 17, 418], "core": [17, 19, 23, 138, 449], "corner": [47, 48, 51, 73, 74, 78, 83, 168, 172, 174, 175, 198, 199, 202, 210, 211, 212, 236, 243, 251, 257, 262, 269, 276, 282, 287, 289, 294, 298, 302, 307, 312, 316, 320, 331, 335, 346, 451, 452], "cornish": 449, "cornwal": 449, "correct": [60, 449], "correctli": [449, 452], "correspond": [17, 34, 44, 71, 83, 94, 95, 96, 97, 98, 101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 137, 138, 144, 146, 147, 148, 149, 152, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 172, 173, 175, 176, 178, 189, 194, 196, 197, 209, 213, 214, 215, 218, 334, 360, 363, 366, 367, 448, 449, 450, 451, 452], "cors": 449, "corsican": 449, "cosin": [377, 378, 379], "cosine_similar": 377, "cosine_similarity_graph": 379, "cosine_similarity_graph_csr_data": 377, "cost": [448, 450], "costa": 449, "could": [47, 50, 73, 77, 166, 174, 198, 201, 332, 333, 358, 359, 361, 362, 364, 365, 448, 449, 450, 451], "count": [130, 135, 136, 236, 246, 259, 262, 271, 284, 289, 296, 304, 307, 314, 322, 449, 450, 452], "count_big_sid": [236, 262, 289, 307], "count_number_of_unique_answ": 130, "count_valid_answers_per_respond": 130, "counteract": 450, "counterpart": 450, "counti": 449, "countri": 449, "countrymen": 449, "countrysid": 449, "coupl": 449, "cour": 449, "cours": 449, "covari": [339, 397, 398, 448], "covariance_ord": 397, "cover": [448, 452], "coverag": 449, "cprf": 449, "cr": 449, "craft": 449, "craftsmen": 449, "cream": 449, "creat": [1, 2, 4, 17, 19, 34, 73, 75, 100, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 137, 138, 144, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 175, 176, 178, 181, 214, 215, 216, 218, 221, 222, 236, 245, 260, 261, 262, 285, 286, 289, 305, 306, 307, 323, 324, 342, 377, 379, 380, 381, 384, 411, 418, 420, 437, 446, 449, 450, 451, 452], "create_2d_test_data": 448, "create_factor_weights_radar_plot": 452, "create_featur": [118, 121, 124, 127, 156, 159, 163, 452], "create_feature_func": [118, 217], "create_features_all_unique_valu": 100, "create_features_for_single_col": [118, 121, 124, 127, 156, 159, 163], "create_features_split_regular_bin": 100, "create_features_split_regular_g": 100, "create_graph": 450, "create_median_feature_factori": 452, "create_order_funct": 100, "create_tot": [1, 73, 451, 452], "create_valu": 178, "create_zoom_plot": 450, "creation": 449, "cree": 449, "crete": 449, "crime": 449, "criteria": [449, 450, 452], "criterion": [449, 452], "croat": 449, "croatia": 449, "croatian": 449, "cross": [100, 222, 236, 247, 262, 272, 289, 297, 307, 315, 449], "crossing_sep": [236, 262, 289, 307], "crucial": [448, 449, 451, 452], "csc": 449, "csc_matrix": [261, 286, 306, 324, 327, 374], "csgraph": 452, "cshh": 449, "csr_arrai": [336, 358, 361, 364, 367, 368, 369, 370, 371, 381, 383], "csr_matrix": [327, 372, 375, 376, 378, 379, 380, 382, 384, 400, 401, 438, 450], "csv": [140, 145], "csxx": 449, "cu": 449, "cuba": 449, "cubic": 448, "cult": 449, "cultur": 449, "cumbria": 449, "cunha": 449, "cup": [448, 450], "cura\u00e7ao": 449, "current": [166, 173, 174, 177, 216, 220, 241, 242, 267, 268, 293, 311, 435, 448, 449, 450, 451], "curv": [445, 450], "custom": [236, 243, 262, 269, 287, 289, 294, 307, 312, 449, 450], "customis": [450, 452], "customiz": 449, "cut": [216, 220, 331, 332, 336, 337, 357, 367, 448, 450, 451], "cut_weight": [355, 358, 361, 364, 367, 368, 369, 450], "cut_weight_ord": 357, "cutweightord": [357, 359, 360, 450], "cv": 449, "cw": 449, "cx": 449, "cy": 449, "cycl": 449, "cymru": 449, "cypru": 449, "cz": 449, "cz0": 449, "cz01": 449, "cz02": 449, "cz03": 449, "cz04": 449, "cz05": 449, "cz06": 449, "cz07": 449, "cz08": 449, "czech": 449, "czechia": 449, "czechoslovak": 449, "czechoslovakia": 449, "czz": 449, "czzz": 449, "c\u00f4te": 449, "d": [355, 372, 376, 448, 449, 450, 451], "da": 449, "dai": 449, "daili": [448, 449], "danc": 449, "danish": 449, "danmark": 449, "darmstadt": 449, "darussalam": 449, "dashkesan": 449, "data": [17, 23, 34, 38, 42, 55, 84, 100, 118, 120, 121, 123, 124, 126, 127, 129, 130, 131, 134, 137, 138, 144, 149, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 170, 171, 173, 206, 209, 212, 213, 214, 215, 216, 218, 236, 246, 259, 262, 271, 284, 289, 290, 296, 304, 307, 308, 314, 322, 339, 348, 349, 350, 351, 352, 353, 354, 377, 378, 379, 380, 382, 384, 398, 400, 406, 407, 408, 409, 450, 451, 453], "data_list": [257, 282, 302, 320], "data_s": [236, 262, 289], "datafram": [130, 131, 151, 154, 155, 166, 168, 176, 191, 216, 449, 452], "datapoint": [237, 244, 252, 253, 263, 277, 278, 290, 295, 299, 308, 313, 317], "datapointwise_information_gain": 348, "datas": [212, 307], "dataset": [97, 98, 100, 127, 215, 448, 449, 450, 452], "dataset_s": 211, "date": [447, 449], "daunt": 448, "dawn": 449, "ddde": 449, "de": [448, 449], "de1": 449, "de11": 449, "de12": 449, "de13": 449, "de14": 449, "de2": 449, "de21": 449, "de22": 449, "de23": 449, "de24": 449, "de25": 449, "de26": 449, "de27": 449, "de3": 449, "de30": 449, "de4": 449, "de40": 449, "de5": 449, "de50": 449, "de6": 449, "de60": 449, "de7": 449, "de71": 449, "de72": 449, "de73": 449, "de8": 449, "de80": 449, "de9": 449, "de91": 449, "de92": 449, "de93": 449, "de94": 449, "dea": 449, "dea1": 449, "dea2": 449, "dea3": 449, "dea4": 449, "dea5": 449, "deal": 449, "death": 449, "deb": 449, "deb1": 449, "deb2": 449, "deb3": 449, "debug": 451, "dec": 449, "dec0": 449, "decid": [448, 452], "decil": 449, "decis": [448, 449], "declar": 215, "declin": 452, "decomposit": [338, 397, 398], "decor": [100, 163, 217], "decreas": [37, 47, 49, 57, 61, 62, 73, 76, 81, 82, 198, 200, 448, 449, 452], "ded": 449, "ded2": 449, "ded4": 449, "ded5": 449, "dee": 449, "dee0": 449, "deeper": 448, "def": [448, 449, 450, 451, 452], "def0": 449, "default": [36, 39, 58, 60, 100, 118, 159, 163, 209, 232, 233, 338, 339, 380, 382, 410, 411, 435, 436, 440, 442, 443, 449], "defaultprogresscallback": [166, 173, 221, 222, 232, 448, 450, 451], "defend": 449, "defens": 449, "defin": [221, 222, 397, 399, 402, 403, 448, 450], "definit": [448, 449, 450, 451, 452], "deg": 449, "deg0": 449, "degre": [66, 368, 372, 376, 384, 435, 448, 449, 451, 452], "deliv": [451, 452], "delv": 448, "demand": 450, "demo": 449, "democraci": 449, "democrat": 449, "demonstr": [449, 452], "denk": 449, "denmark": 449, "denomin": 449, "denot": [13, 30, 398, 399, 403, 429, 450], "dens": [382, 448, 452], "densiti": 448, "depend": [216, 301, 319, 382, 411, 448, 449, 450], "depict": [448, 452], "depth": [2, 10, 12, 16, 17, 26, 28, 33, 59, 417, 418, 426, 428, 432, 448, 449], "depths_for_layout": 411, "derbyshir": 449, "deriv": [332, 333, 337, 359, 362, 365, 449, 451, 452], "descend": 411, "descent": 448, "describ": [47, 54, 70, 93, 96, 97, 119, 120, 122, 123, 125, 126, 128, 129, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 164, 165, 168, 176, 198, 205, 209, 214, 215, 218, 339, 357, 367, 368, 369, 383, 448, 449, 450, 451, 452], "descript": [132, 168, 338, 448, 449, 450], "design": 449, "desir": 449, "desu": 449, "det": [397, 402], "detach": [2, 17, 418], "detail": [338, 448, 449, 450, 451, 452], "detect": [448, 450, 451], "determin": [17, 166, 174, 221, 417, 442, 449, 451, 452], "detmold": 449, "develop": 449, "deviat": [409, 448, 452], "devon": 449, "dez": 449, "dezz": 449, "df": 449, "di": [449, 450], "diagon": [372, 375, 376, 403, 448, 451], "dialogu": 449, "diamet": 441, "dict": [132, 143, 144, 149, 178, 179, 188, 189, 190, 243, 257, 269, 282, 294, 302, 312, 320, 411, 417, 435], "dictionari": [130, 132, 143, 144, 149, 178, 449], "did": [449, 451, 452], "die": 449, "differ": [59, 99, 130, 139, 144, 175, 215, 382, 383, 417, 437, 441, 442, 448, 449, 450, 451, 452], "difficult": [448, 449, 450, 452], "difficulti": [448, 452], "dig": 452, "digit": 449, "digraph": 415, "dimens": 339, "dimension": [34, 270, 381, 399, 402, 403, 437, 442, 448, 450], "dipl": 449, "diplom": 449, "diploma": 449, "dipl\u00f4ma": 449, "direct": [339, 342, 384, 411, 415, 449, 450, 452], "directli": [331, 339, 341, 448, 449], "disabl": 449, "disaccordo": 449, "disagr": 452, "disagre": [449, 452], "disappear": 450, "discard": [60, 211, 212, 450, 451], "discharg": 449, "disconnect": 341, "discourag": 450, "discret": [332, 337, 348, 351, 353, 452], "discrete_deriv": [332, 358, 361, 364], "discuss": [448, 449], "disjoint": [336, 448, 450], "disjunct": [168, 257, 282, 302, 320, 385, 395], "disjunctivenormalform": 385, "disk": 449, "displai": 449, "dissatisfi": 449, "dissimilar": 448, "dissuad": 448, "dist": [381, 400, 450], "dist2sim": 380, "dist_loc_min_sep": 450, "distanc": [377, 380, 381, 382, 383, 384, 397, 400, 401, 441, 448, 450, 451, 452], "distance_matrix": [448, 450], "distance_p": [400, 401], "distinct": [448, 449], "distinguish": [1, 34, 35, 36, 39, 71, 73, 95, 99, 100, 170, 172, 173, 174, 175, 221, 222, 346, 448, 450, 451, 452], "distract": [450, 451], "distribut": [385, 448], "district": 449, "disturb": 452, "dive": 448, "divehi": 449, "divers": 448, "divid": [215, 368, 369, 452], "divis": 449, "divorc": 449, "dj": 449, "djb": 449, "djibouti": 449, "dk": 449, "dk0": 449, "dk01": 449, "dk02": 449, "dk03": 449, "dk04": 449, "dk05": 449, "dkz": 449, "dkzz": 449, "dm": 449, "dnf": [168, 257, 282, 302, 320, 385, 390, 391, 394, 395], "dnipropetrovsk": 449, "do": [75, 98, 176, 448, 449, 450, 451, 452], "doctor": 449, "documen": 448, "document": [131, 448, 449, 451], "doe": [14, 15, 31, 32, 43, 58, 60, 94, 133, 134, 139, 144, 149, 174, 175, 221, 225, 255, 280, 301, 319, 332, 333, 358, 359, 361, 362, 364, 365, 394, 413, 430, 431, 448, 449, 450, 452], "doesn": 452, "dog": 449, "doi": 449, "dolno\u015bl\u0105ski": 449, "domain": [331, 338, 448], "domain_typ": 338, "dominica": 449, "dominican": 449, "don": [124, 137, 138, 144, 146, 147, 148, 149, 152, 441, 448, 449, 450, 451, 452], "done": [346, 391, 448, 449, 450, 452], "donetsk": 449, "dont": [346, 449], "dorset": 449, "dost": 449, "dot": [194, 448, 449, 450], "down": 450, "download": [449, 452], "dpa": 449, "dpi": 450, "dpmnu": 449, "dpsm": 449, "dptm": 449, "dr": 449, "drag": [442, 445, 450], "drastic": 452, "draw": [411, 438, 439, 440, 442, 448, 450, 451, 452], "draw_custom_pick": [442, 451], "draw_edge_label": 449, "draw_edge_label_func": [412, 448, 450, 451], "draw_ellips": [438, 441], "draw_image_zoom_pick": 451, "draw_level": [412, 448, 450, 451], "draw_mona_tangl": 451, "draw_node_label_func": [412, 448, 450, 451], "draw_sep": 450, "draw_side_and_boundari": 438, "draw_stacked_circl": 438, "draw_tangl": [448, 450], "drawn": [441, 448, 450, 451], "drawn_po": 441, "dream": 449, "drenth": 449, "dresden": 449, "drinker": 449, "driven": 448, "driver": 449, "drop": [442, 449], "drug": 449, "dshv": 449, "dss": 449, "dsss": 449, "dtype": [287, 339, 448, 450, 452], "du": 449, "dual": [448, 449], "due": 449, "dui": 449, "dun\u00e1nt\u00fal": 449, "duplic": [335, 448, 449, 450], "durat": 449, "dure": [34, 449], "durham": 449, "dutch": 449, "duti": [449, 452], "dv": 449, "dveri": 449, "dweight": 449, "dx": 445, "dy": 445, "dynam": [448, 449], "dz": 449, "dzongkha": 449, "d\u00e9collet\u00e9": 451, "d\u00e9l": 449, "d\u00fcsseldorf": 449, "e": [57, 70, 73, 139, 147, 168, 173, 175, 212, 249, 254, 274, 279, 300, 318, 339, 380, 384, 395, 398, 400, 401, 448, 449, 450, 451], "e1": 452, "e10": 452, "e2": 452, "e3": 452, "e4": 452, "e5": 452, "e6": 452, "e7": 452, "e8": 452, "e9": 452, "e_quest": 452, "each": [2, 6, 17, 21, 34, 59, 71, 73, 83, 96, 97, 98, 100, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 155, 157, 158, 160, 161, 164, 165, 166, 175, 176, 212, 214, 215, 218, 221, 222, 236, 259, 262, 284, 289, 304, 307, 322, 338, 339, 340, 348, 349, 350, 352, 368, 369, 370, 371, 381, 395, 406, 407, 417, 418, 422, 435, 439, 445, 448, 449, 450, 451, 452], "earli": 449, "earlier": 449, "earn": 449, "earner": 449, "earth": 449, "eas": 452, "easi": [448, 449, 450, 452], "easier": [448, 450], "easiest": [448, 450], "easili": [448, 449, 451, 452], "east": 449, "eastern": 449, "eat": 449, "ec": 449, "ecologi": 449, "econom": 449, "ecuador": 449, "ed": 449, "edexcel": 449, "edg": [1, 17, 34, 64, 65, 71, 367, 368, 369, 370, 371, 379, 383, 415, 435, 439, 440, 441, 448, 449, 450, 451, 452], "edge_annotation_s": 435, "edge_color": [435, 439, 440, 441], "edge_label_func": 449, "edge_label_func_for_meta_data": 449, "edge_label_s": [412, 450, 451], "edgecolor": 448, "educ": [448, 449], "edulvlb": 449, "ee": 449, "ee0": 449, "ee00": 449, "eesti": 449, "eez": 449, "eezz": 449, "effect": [398, 399, 403, 448, 450, 451, 452], "effici": [1, 34, 35, 71, 73, 346, 448, 451, 452], "efficient_distinguisher_id": 346, "efficient_distinguisher_level": 346, "efficient_distinguisher_tree_level_annot": 452, "effort": [448, 449], "eg": 449, "egb": 449, "egp11": 449, "egypt": 449, "egy\u00fctt": 449, "eh": 449, "eigenvalu": [339, 341, 451], "eigenvector": [331, 339, 341, 451], "eight": [449, 452], "either": [104, 108, 117, 170, 197, 216, 349, 380, 382, 383, 384, 385, 390, 391, 394, 398, 437, 442, 445, 448, 451, 452], "el": 449, "el3": 449, "el30": 449, "el4": 449, "el41": 449, "el42": 449, "el43": 449, "el5": 449, "el51": 449, "el52": 449, "el53": 449, "el54": 449, "el6": 449, "el61": 449, "el62": 449, "el63": 449, "el64": 449, "el65": 449, "elabor": 450, "elderli": 449, "elect": 449, "elector": 449, "electr": 449, "electrician": 449, "electron": 449, "eleg": [450, 451], "element": [130, 131, 224, 270, 328, 340, 379, 382, 448, 450], "elementari": 449, "elimin": 449, "ellada": 449, "ellips": [438, 439], "els": [236, 243, 262, 269, 289, 294, 307, 312, 441, 448, 449, 450, 451, 452], "em": 449, "embed": 448, "embedded_feature_factori": [121, 127, 163], "emerg": 448, "emilia": 449, "emir": 449, "emot": 452, "emphas": 448, "empl": 449, "emploi": 449, "employ": 449, "employe": 449, "empti": [34, 57, 58, 88, 346, 413, 450, 452], "emptyset": [448, 450], "en": 449, "encod": [16, 33, 94, 95, 96, 97, 98, 99, 227, 252, 253, 277, 278, 299, 317, 328, 335, 395, 432, 448, 449, 450, 451], "encount": 448, "encourag": 452, "end": [140, 145, 449, 450, 451, 452], "enforc": 450, "engin": 449, "england": 449, "english": 449, "enhanc": 450, "enlarg": 449, "enough": [449, 450, 452], "ensur": [58, 60, 73], "entail": 450, "enter": [236, 243, 262, 269, 289, 294, 307, 312], "enterpris": 449, "entir": [349, 417], "entireti": 449, "entrac": 449, "entranc": 449, "entri": [35, 83, 119, 120, 122, 123, 125, 126, 128, 129, 133, 153, 157, 158, 160, 161, 164, 165, 175, 209, 213, 214, 215, 218, 239, 240, 243, 251, 265, 266, 269, 276, 292, 294, 298, 310, 312, 316, 349, 354, 367, 403, 441, 445, 448, 451, 452], "entropi": [347, 349, 350, 352, 353, 354, 452], "enumer": [448, 451, 452], "environ": 449, "environment": 449, "environmentalist": 449, "eo": 449, "ep": [338, 400, 401], "epiphanii": 449, "epiru": 449, "epsilon": [338, 380], "epsilon_neighborhood_graph": 377, "equal": [23, 36, 39, 64, 65, 100, 168, 214, 230, 236, 254, 262, 279, 289, 300, 307, 318, 382, 400, 401, 403, 449, 450, 451, 452], "equal_data": 17, "equatori": 449, "equi": 449, "equidist": [100, 215, 448], "equival": [336, 449, 452], "er": 449, "era": [448, 449], "erase_exist": 148, "eritrea": 449, "error": [132, 336, 341, 449, 452], "es1": 449, "es11": 449, "es12": 449, "es13": 449, "es2": 449, "es21": 449, "es22": 449, "es23": 449, "es24": 449, "es3": 449, "es30": 449, "es4": 449, "es41": 449, "es42": 449, "es43": 449, "es5": 449, "es51": 449, "es52": 449, "es53": 449, "es6": 449, "es61": 449, "es62": 449, "es63": 449, "es64": 449, "es7": 449, "es70": 449, "esec08": 449, "espac": 449, "especi": [448, 449], "esperanto": 449, "ess": 449, "essenti": [448, 449, 450, 452], "essex": 449, "est": 449, "esti": 449, "estonia": 449, "estonian": 449, "esz": 449, "eszz": 449, "et": 449, "etc": 449, "etel\u00e4": 449, "ethic": 449, "ethiopia": 449, "etud": 449, "eu": 449, "euclidean": [406, 408], "euklid": 381, "eur": 449, "euro": 449, "europ": 449, "european": 449, "eustatiu": 449, "euthanasia": 449, "ev": 449, "evalu": [398, 448, 450], "evangel": 449, "even": [138, 448, 449, 451, 452], "everi": [2, 8, 17, 24, 36, 37, 39, 45, 54, 83, 95, 98, 118, 119, 122, 125, 128, 139, 157, 160, 164, 168, 176, 205, 218, 224, 231, 270, 331, 335, 339, 342, 348, 350, 351, 377, 380, 381, 384, 411, 424, 441, 448, 449, 450, 451, 452], "everyth": [236, 243, 262, 269, 289, 294, 307, 312, 452], "everytim": 450, "ew": 449, "exact": [448, 450, 452], "exactli": [175, 221, 222, 381, 448, 450, 452], "exagger": 449, "exam": 449, "examani": 449, "examin": 449, "exampl": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 194, 287, 435, 448, 449, 450, 451, 452], "excel": 452, "except": [17, 34, 218, 448, 449, 450], "excerpt": [450, 451], "exchang": 449, "exclud": 449, "exclus": 339, "execut": 449, "exhaust": 452, "exist": [35, 60, 94, 95, 99, 148, 179, 247, 272, 297, 315, 346, 413, 448, 450, 451, 452], "exit": [449, 450], "expans": 448, "expect": [120, 123, 126, 129, 158, 161, 165, 448, 449, 451, 452], "expens": 448, "experi": [449, 452], "experienc": 449, "experiment": 449, "expert": 449, "explain": [236, 257, 262, 282, 289, 302, 307, 320, 451, 452], "explain_featur": 166, "explan": [449, 451], "explicit": 450, "explicitli": [83, 124], "explor": [450, 451, 452], "explore_agreement_lower_bound": 59, "explos": 450, "exponenti": 448, "export": 449, "express": [448, 449, 451], "extend": [1, 34, 37, 47, 49, 57, 58, 59, 60, 61, 62, 73, 76, 81, 82, 100, 159, 163, 198, 200, 229, 230, 231, 448, 450, 451, 452], "extend_tangl": 230, "extending_tangl": [228, 230], "extendingtangl": [229, 231], "extens": 450, "extent": [449, 451], "extern": [448, 449], "extra": 449, "extract": [448, 449, 450, 451], "extract_const_answ": [168, 176, 449], "extraordinarili": 451, "extrem": [449, 451, 452], "extremadura": 449, "extremist": 449, "extrovert": 452, "ey": 452, "f": [397, 398, 399, 402, 403, 448, 449, 450, 451, 452], "f108": 449, "f110": 449, "f112_se": 449, "f199_it": 449, "f20": 449, "f24_it": 449, "f252_edulvlb_ch": 449, "f30a": 449, "f45a": 449, "f46_it": 449, "f85": 449, "f96": 449, "f_": 451, "fa": 449, "face": 451, "facecolor": 448, "facet": 452, "facil": 449, "fact": [448, 450, 451, 452], "factor": [441, 451, 453], "factor_weight": 452, "factor_weights_per_particip": 452, "factori": [100, 118, 120, 121, 123, 124, 126, 127, 129, 156, 158, 159, 161, 162, 163, 165, 209, 213, 214, 215, 218, 219, 449, 452], "fade": 448, "fail": [60, 243, 269, 294, 312, 417, 448], "fair": 449, "fairli": 449, "faith": 449, "fake": [450, 451], "falkland": 449, "fall": [61, 81, 215, 448, 449], "fals": [35, 45, 83, 87, 89, 90, 98, 103, 107, 116, 132, 137, 138, 144, 146, 148, 149, 167, 170, 172, 173, 175, 176, 178, 196, 208, 211, 212, 260, 261, 285, 286, 305, 306, 323, 324, 339, 341, 370, 371, 379, 381, 384, 412, 441, 442, 443, 445, 448, 449, 450, 451, 452], "famili": 449, "famou": 451, "far": [101, 103, 105, 107, 114, 116, 194, 196, 448, 449], "fare": 449, "farm": 449, "farmer": 449, "faro": 449, "faroes": 449, "faso": 449, "fast": [448, 451], "faster": [232, 234, 342, 452], "father": 449, "favor": [449, 450], "favorit": 449, "favour": 452, "fda": 449, "fdsc": 449, "fduplic": 449, "feat": [333, 335, 344, 345, 348, 350, 352, 359, 362, 365, 399, 402, 403], "feat_fac": 452, "feat_id": [96, 97, 98, 237, 243, 244, 248, 250, 263, 269, 270, 273, 275], "feat_id_a": [236, 254, 256, 262, 279, 281], "feat_id_b": [236, 254, 256, 262, 279, 281], "feat_si": [96, 97, 98, 226], "feats2seps_invalids_to_both_sid": 100, "featur": [17, 47, 48, 50, 51, 53, 54, 73, 74, 77, 78, 80, 96, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 138, 144, 146, 147, 148, 149, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 194, 197, 198, 199, 201, 202, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 236, 237, 238, 239, 241, 243, 248, 249, 250, 251, 252, 254, 255, 256, 257, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 302, 320, 331, 332, 334, 335, 339, 340, 348, 350, 352, 358, 360, 361, 363, 364, 366, 393, 399, 403, 449, 450, 453], "feature_and_complement_s": [236, 262], "feature_factori": [173, 452], "feature_factory_all_splits_g": 100, "feature_id": [168, 211, 236, 249, 262, 271, 274, 284], "feature_id_1": [255, 280], "feature_id_2": [255, 280], "feature_id_a": [238, 251, 264, 276], "feature_id_b": [238, 251, 264, 276], "feature_label": 393, "feature_metadata": [236, 262], "feature_nam": [119, 122, 125, 128, 157, 160, 164], "feature_s": [236, 262], "feature_system": [166, 211, 227, 452], "features_and_metadata": 170, "features_or_separ": 173, "featuresystem": [90, 96, 97, 98, 169, 198, 210, 211, 221, 222, 235, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 450, 451], "feder": 449, "feel": [448, 449, 450, 452], "fellow": 449, "femal": 449, "fertil": 449, "fesatur": [236, 245], "few": [342, 448, 449, 450, 451], "fewer": 448, "fewest": 452, "ff": 449, "fg_mask": 450, "fg_thresh": 450, "fi": 449, "fi1": 449, "fi19": 449, "fi1b": 449, "fi1c": 449, "fi1d": 449, "fi2": 449, "fi20": 449, "fictiti": [400, 401], "fidesz": 449, "fieldwork": 449, "fig": [448, 450, 451, 452], "fight": 449, "figsiz": [445, 448, 449, 450, 451, 452], "figur": [435, 445, 448, 449, 450, 451, 452], "figurecanvasagg": 448, "fiji": 449, "fijian": 449, "file": [34, 38, 42, 130, 140, 145, 166, 171, 449, 450, 452], "filenam": [34, 38, 42, 140, 145], "fill": 450, "final": [58, 310, 315, 321, 448, 449, 450, 452], "find": [2, 10, 17, 26, 34, 35, 36, 100, 130, 133, 220, 224, 225, 226, 235, 326, 328, 332, 335, 336, 337, 338, 339, 340, 341, 342, 374, 418, 426, 448, 449, 450, 451, 452, 453], "find_contour": 450, "find_peak": 450, "fine": [449, 452], "finish": 449, "finit": 449, "finland": 449, "finn": 449, "finnish": 449, "first": [35, 94, 95, 99, 119, 120, 122, 123, 125, 126, 128, 129, 153, 157, 158, 160, 161, 164, 165, 175, 176, 209, 213, 214, 215, 218, 238, 239, 240, 243, 251, 254, 255, 256, 264, 265, 266, 269, 276, 279, 280, 281, 291, 292, 294, 298, 300, 301, 309, 310, 312, 316, 318, 319, 336, 339, 342, 441, 448, 449, 450, 451, 452], "firstli": 452, "fisher": 449, "fisheri": 449, "fit": [435, 452], "five": [449, 452], "fix": [441, 448, 449, 450, 452], "fixed_stack_dist": 441, "fiz": 449, "fizz": 449, "fj": 449, "fk": 449, "flag": [178, 443, 449], "flat": [448, 451], "flatnonzero": 450, "flatten": 450, "flevoland": 449, "flexibl": 448, "flip": [334, 360, 363, 366], "flip_pos_sid": 441, "float": [211, 212, 336, 338, 340, 342, 353, 378, 379, 380, 381, 382, 383, 399, 400, 401, 403, 417, 435, 445, 446, 450], "flow": 336, "fluctuat": [448, 451], "fm": 449, "fmiss": 449, "fo": 449, "focu": [449, 450, 451, 452], "focus": 452, "focuss": 451, "folder": [130, 140, 145, 449], "folkeh\u00f8gskol": 449, "follow": [139, 411, 417, 448, 449, 450, 451, 452, 453], "fontsiz": 452, "food": 449, "foral": 449, "forbidden": [1, 2, 57, 73], "forbidden_agr": 231, "forbidden_tuple_s": [57, 73, 91, 198, 230], "forbidden_vertic": [370, 371], "forc": [441, 449, 450], "forca": 449, "force_tree_upd": [167, 449, 452], "foreground": 450, "foreign": 449, "foreman": 449, "forestri": 449, "forget": 452, "form": [168, 257, 282, 302, 320, 390, 391, 394, 395, 400, 401, 442, 448, 449, 450, 451, 452], "formal": 449, "format": [382, 448, 449, 451], "former": 449, "formerli": 449, "formul": 448, "formula": 168, "forth": 450, "fortun": [449, 450, 452], "forum": 449, "forward": [49, 55, 76, 84, 200, 206, 219, 384, 450], "found": [10, 26, 73, 83, 130, 132, 140, 144, 166, 174, 337, 370, 371, 426, 448, 449, 450, 451, 452, 453], "foundat": 449, "four": [236, 243, 251, 262, 269, 276, 289, 294, 298, 307, 312, 316, 331, 335, 438, 439, 441, 448, 449, 452], "fourth": 441, "fp\u00f6": 449, "fr": 449, "fr1": 449, "fr10": 449, "frac": [448, 451], "fraction": [212, 398, 435, 451], "frame": [168, 452], "franc": 449, "franch": 449, "frankivsk": 449, "fran\u00e7ais": 449, "frb": 449, "frb0": 449, "frc": 449, "frc1": 449, "frc2": 449, "frd": 449, "frd1": 449, "frd2": 449, "fre": 449, "fre1": 449, "fre2": 449, "free": [448, 449, 450, 451, 452], "freedom": 449, "freiburg": 449, "french": 449, "frequent": 452, "fresh": 452, "frf": 449, "frf1": 449, "frf2": 449, "frf3": 449, "frg": 449, "frg0": 449, "frh": 449, "frh0": 449, "fri": 449, "fri1": 449, "fri2": 449, "fri3": 449, "friend": 449, "friendli": 448, "friesland": 449, "frisian": 449, "frist": 451, "friuli": 449, "frj": 449, "frj1": 449, "frj2": 449, "frk": 449, "frk1": 449, "frk2": 449, "frl": 449, "frl0": 449, "frm": 449, "frm0": 449, "from": [2, 8, 13, 16, 17, 24, 30, 33, 34, 38, 45, 59, 60, 95, 99, 100, 109, 110, 111, 112, 113, 130, 137, 138, 140, 148, 156, 166, 167, 171, 226, 231, 236, 238, 244, 247, 249, 258, 260, 261, 262, 264, 272, 274, 283, 285, 286, 287, 289, 291, 295, 297, 303, 305, 306, 307, 309, 313, 315, 321, 323, 324, 331, 335, 336, 338, 340, 367, 369, 377, 380, 383, 384, 395, 397, 400, 401, 404, 405, 406, 407, 411, 415, 418, 424, 429, 432, 437, 442, 445, 448, 449, 450, 451, 452], "from_indicator_matrix": [2, 17, 418], "from_list": 448, "front": 449, "fruit": [451, 452], "fry": 449, "fry1": 449, "fry2": 449, "fry3": 449, "fry4": 449, "fry5": 449, "frz": 449, "frzz": 449, "fso": 449, "fsu": 449, "ftreenod": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "ftt": [1, 2], "fulah": 449, "full": [448, 449, 452], "fulli": 449, "func": 162, "functino": 220, "function": [1, 2, 4, 57, 73, 86, 88, 92, 93, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 130, 139, 159, 162, 166, 170, 173, 178, 187, 196, 197, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 230, 326, 331, 336, 337, 338, 341, 343, 344, 345, 346, 348, 352, 355, 357, 367, 368, 369, 373, 377, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 406, 410, 417, 418, 420, 435, 436, 437, 442, 445, 446, 449, 450, 453], "further": [342, 448, 449, 450, 451, 452], "furthermor": [75, 442, 452], "futuna": 449, "futur": [448, 449], "fuzzi": 450, "fw": 449, "fw_end": 449, "fw_start": 449, "fy": 449, "f\u00f6r": 449, "f\u00f6rsvara": 449, "g": [70, 342, 355, 372, 376, 439, 448, 449, 450, 451, 452], "g_": [450, 451], "ga": 449, "gabala": 449, "gabon": 449, "gad": 449, "gaelic": 449, "gai": 449, "gain": [348, 350, 352], "gakh": 449, "galicia": 449, "galician": 449, "gambia": 449, "ganda": 449, "ganja": 449, "garment": 449, "gather": 449, "gaussian": [383, 448], "gave": [121, 127, 133, 215, 218, 449, 452], "gazakh": 449, "gb": 449, "gbn": 449, "gca": [448, 449], "gce": 449, "gcse": 449, "gd": 449, "ge": [448, 449], "ge0": 449, "ge01": 449, "ge02": 449, "ge03": 449, "gelderland": 449, "gelski": 449, "gen": 449, "gender": 449, "gener": [221, 236, 247, 257, 260, 261, 262, 272, 282, 285, 286, 287, 289, 297, 302, 305, 306, 307, 315, 320, 323, 324, 331, 339, 340, 397, 403, 410, 411, 448, 449, 450, 451, 452], "gentl": 452, "geometr": 450, "georgia": 449, "georgian": 449, "geq": [448, 452], "german": 449, "germani": 449, "gesi": 449, "get": [12, 28, 236, 237, 244, 247, 249, 258, 262, 263, 272, 274, 283, 289, 295, 297, 303, 307, 313, 315, 321, 339, 383, 384, 406, 407, 411, 413, 414, 428, 448, 449, 451, 452], "get_corn": [236, 262, 289, 307], "get_efficient_distinguish": 34, "get_feature_id": [236, 262], "get_ids_from_label": 411, "get_label": 411, "get_sep_id": [236, 262, 289, 307], "get_tangle_by_path": 224, "gez": 449, "gezz": 449, "gf": 449, "gg": 449, "gh": 449, "ghana": 449, "gi": 449, "gibraltar": 449, "gie\u00dfen": 449, "giorgia": 449, "girchi": 449, "girl": 449, "github": 453, "giulia": 449, "give": [448, 449, 451, 452], "given": [1, 16, 33, 34, 46, 47, 50, 55, 64, 65, 73, 75, 77, 84, 92, 94, 95, 100, 118, 120, 121, 123, 124, 126, 127, 129, 144, 147, 156, 158, 159, 161, 163, 165, 166, 168, 176, 198, 201, 206, 210, 212, 216, 224, 226, 227, 236, 246, 250, 262, 270, 271, 275, 289, 296, 307, 314, 335, 340, 357, 367, 368, 369, 373, 374, 381, 382, 415, 432, 437, 442, 443, 446, 448, 449, 450, 451, 452], "gl": 449, "global": [448, 450, 451], "global_max_ord": [211, 212, 451], "gloucestershir": 449, "gm": 449, "gn": 449, "gnvq": 449, "go": [2, 13, 17, 30, 60, 418, 429, 448, 449, 451, 452], "goal": [448, 449, 450, 452], "gobustan": 449, "god": 449, "goe": [59, 452], "goi": 449, "gomel": 449, "gone": 449, "good": [448, 449, 450, 451, 452], "gor": 449, "goranboi": 449, "gorski": 449, "gospel": 449, "got": 449, "govern": 449, "goychai": 449, "gp": 449, "gq": 449, "gr": 449, "gra": 449, "grad": 449, "grade": [448, 449, 450], "gradual": 452, "graduat": 449, "gradut": 449, "grai": [450, 451], "grain": 452, "grammar": 449, "grand": 449, "graph": [331, 336, 337, 338, 341, 342, 347, 356, 358, 361, 364, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 397, 399, 411, 448, 450, 451, 452], "graphnod": 410, "gray_imag": 451, "grayscal": 383, "great": [449, 451, 452], "greater": [37, 194, 211, 212, 384, 400, 401, 448, 449, 452], "greatest": 339, "greatli": 449, "greec": 449, "greedi": [370, 371], "greedili": [57, 59], "greedy_neighborhood": 355, "greedy_neighborhood_old": 355, "greedy_search": 57, "greek": 449, "green": [449, 452], "greenland": 449, "greenleft": 449, "gregorian": 449, "grei": 452, "grenada": 449, "grenadin": 449, "grid": [377, 381], "grid_distance_graph": [377, 451], "grid_shap": 381, "grodno": 449, "groningen": 449, "ground": [270, 340, 448], "groundset": 340, "group": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 449, 452], "grow": [417, 448, 451], "growth": 449, "grz": 449, "grzz": 449, "gsvq": 449, "gt": 449, "gu": 449, "guadeloup": 449, "guam": 449, "guarante": [39, 45, 54, 205, 403], "guaran\u00ed": 449, "guatemala": 449, "gubinski": 449, "guernsei": 449, "guess": [130, 137, 138, 448, 452], "guess_variable_typ": 130, "guess_variable_value_list": [130, 449, 452], "guiana": 449, "guid": [1, 225, 226, 227], "guided_tangl": 224, "guild": 449, "guinea": 449, "gujarati": 449, "gusar": 449, "guyan": 449, "guyana": 449, "gv": 449, "gw": 449, "gweight": 449, "gweight_no_edu": 449, "gy": 449, "gyg": 449, "gymna": 449, "gymnasia": 449, "gymnasium": 449, "gypsi": 449, "h": [351, 353, 449], "ha": [2, 11, 13, 17, 27, 30, 37, 47, 49, 57, 60, 61, 62, 73, 76, 81, 82, 94, 104, 108, 117, 197, 198, 200, 231, 236, 243, 262, 269, 270, 289, 294, 307, 312, 342, 349, 380, 417, 418, 427, 429, 448, 449, 450, 451, 452], "habilit": 449, "hac": 449, "had": [449, 452], "hafnarfj\u00f6r\u00f0ur": 449, "hair": 451, "haiti": 449, "haitian": 449, "hajikabul": 449, "half": [224, 407, 449], "ham": [377, 382, 452], "hamburg": 449, "hamming_dist": 452, "hamming_similar": 377, "hampshir": 449, "hand": [395, 450, 451, 452], "handcraft": 451, "handicraft": 449, "handl": [124, 338, 448, 450], "handsom": 448, "hannov": 449, "happen": [58, 449, 450], "happi": 449, "hard": [93, 96, 448, 449, 450, 452], "hard_clustering_tuebingen": 93, "harder": 452, "harm": 449, "harmon": 449, "harmoni": 449, "hausa": 449, "haut": 449, "have": [17, 23, 34, 36, 37, 43, 58, 59, 60, 75, 88, 94, 194, 211, 212, 215, 226, 339, 346, 384, 398, 399, 400, 401, 403, 439, 441, 442, 448, 449, 450, 451, 452], "havo": 449, "he": 449, "head": 451, "health": 449, "heard": 449, "heart": 452, "heat": [450, 451], "heatmap": 448, "heaven": 449, "heavi": 449, "hebrew": 449, "hedmark": 449, "height": [34, 46, 383, 417, 435, 449, 450], "height_ratio": 450, "helena": 449, "hell": 449, "help": [332, 333, 358, 359, 361, 362, 364, 365, 448, 449, 450], "helper": [100, 220, 449, 450, 452], "helsinki": 449, "helvet": 449, "henc": [244, 295, 313], "here": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 338, 449, 450, 451, 452], "herefordshir": 449, "herero": 449, "heritag": 449, "hermann": [448, 450, 451], "hertfordshir": 449, "herzegovina": 449, "hessen": 449, "heurist": [449, 450, 451], "hf": 449, "hh": 449, "hi": 449, "hidden": 452, "hierarch": [448, 450], "high": [215, 218, 339, 448, 449, 451, 452], "higher": [60, 175, 448, 449, 450, 451, 452], "highest": [17, 59, 448, 452], "highest_dist": 451, "highland": 449, "highli": [449, 451], "highschool": 449, "hindi": 449, "hindu": 449, "hinduism": 449, "hinduist": 449, "hiri": 449, "hist": 452, "histogram": 452, "hk": 449, "hm": 449, "hn": 449, "hnc": 449, "hnd": 449, "ho": 449, "hobbi": 449, "hold": [73, 450, 452], "holi": 449, "holidai": 449, "holland": 449, "holo": 449, "holstein": 449, "home": 449, "homeland": 449, "homemak": 449, "homosexu": 449, "hondura": 449, "hong": 449, "hop": 450, "hope": 449, "horizont": [441, 448, 450], "horizontalalign": [448, 451], "hospit": 449, "hot": 450, "hour": 449, "hous": 449, "household": 449, "hovedstaden": 449, "how": [93, 94, 95, 98, 99, 166, 175, 332, 334, 338, 349, 358, 360, 361, 363, 364, 366, 448, 449, 450, 451, 452, 453], "howev": [448, 452], "hr": 449, "hr0": 449, "hr03": 449, "hr04": 449, "hramada": 449, "hroisman": 449, "hrvatska": 449, "hrz": 449, "hrzz": 449, "hscrollbar": 449, "hstack": 450, "ht": 449, "hu": 449, "hu1": 449, "hu11": 449, "hu12": 449, "hu2": 449, "hu21": 449, "hu22": 449, "hu23": 449, "hu3": 449, "hu31": 449, "hu32": 449, "hu33": 449, "human": [449, 451], "humanist": 449, "humanitarian": 449, "humankind": 449, "humber": 449, "humili": 449, "hungari": 449, "hungarian": 449, "hunt": 449, "hunter": 449, "hurt": 450, "hussit": 449, "huz": 449, "huzz": 449, "hy": 449, "hz": 449, "h\u00edd": 449, "i": [0, 1, 2, 4, 5, 9, 10, 16, 17, 20, 23, 25, 26, 33, 34, 35, 39, 45, 54, 55, 57, 58, 59, 60, 64, 65, 66, 68, 70, 73, 75, 81, 82, 83, 84, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 108, 114, 117, 119, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 178, 183, 184, 185, 186, 187, 191, 193, 197, 205, 206, 210, 212, 214, 215, 216, 221, 222, 224, 225, 227, 230, 231, 236, 239, 243, 244, 249, 252, 253, 254, 256, 257, 260, 261, 262, 265, 269, 270, 274, 277, 278, 279, 281, 282, 285, 286, 289, 294, 295, 299, 300, 302, 305, 306, 307, 312, 313, 317, 318, 320, 323, 324, 334, 338, 339, 340, 342, 346, 349, 351, 353, 354, 355, 360, 363, 366, 368, 372, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 406, 409, 411, 413, 418, 420, 421, 425, 426, 432, 435, 436, 440, 441, 442, 443, 445, 448, 449, 451, 452, 453], "ia": 449, "ic": 449, "iceland": 449, "iconsist": 449, "id": [34, 35, 39, 44, 45, 47, 48, 50, 51, 54, 57, 58, 60, 73, 74, 75, 77, 78, 92, 96, 97, 98, 168, 174, 198, 199, 201, 202, 205, 211, 221, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 323, 324, 346, 411, 412, 413, 414, 415, 416, 449], "id_at_max_level": 75, "id_coca": 449, "idc": 450, "idea": [448, 449, 451, 452], "ideal": 451, "ident": 175, "identifi": [336, 338, 339, 448, 449, 450, 452], "ido": 449, "idx": [448, 450], "ie": 449, "ig": 449, "igbo": 449, "ignor": [382, 449, 452], "ignore_small_compon": 342, "ihr": 449, "ii": [0, 449, 453], "iii": 449, "iiia": 449, "iiib": 449, "ik": 449, "il": 449, "ilfov": 449, "ill": 449, "illustr": [448, 451], "iloc": 452, "im": [449, 450], "im_idx": 451, "imag": [0, 377, 383, 437, 445, 448, 453], "image_mask": 450, "image_to_similarity_graph": [377, 451], "imagin": [449, 452], "imaginari": 448, "imi": 449, "imishli": 449, "immedi": [448, 450, 451], "immigr": 449, "impact": [449, 452], "implement": [93, 96, 97, 103, 107, 116, 196, 216, 448, 449, 450, 451, 452], "implic": [243, 269, 294, 312], "implicitli": [450, 451], "import": [221, 448, 449, 450, 451, 452], "improv": 452, "imread": 451, "imro": 449, "imshow": [448, 450, 451], "inaccur": 215, "inadequ": 449, "inappropri": 449, "inc": 449, "incarn": 449, "incent": 449, "incid": [65, 71], "incl": 449, "includ": [36, 39, 47, 48, 54, 73, 74, 83, 175, 176, 198, 199, 205, 254, 279, 411, 448, 449, 450, 451], "include_diff0": 450, "include_split": [36, 39, 45, 448, 450, 451], "includi": 449, "inclus": [254, 279, 449], "incom": [260, 261, 285, 286, 305, 306, 323, 324, 449], "incompet": 449, "incomplet": [449, 452], "inconsist": 449, "inconveni": 450, "incorrectli": 215, "increas": [37, 60, 448, 449, 450, 451, 452], "inde": 452, "independ": [340, 448, 449], "index": [44, 94, 95, 99, 139, 151, 172, 221, 336, 381, 411, 415, 441, 449, 450, 451, 452], "index1": 212, "index2": 212, "india": 449, "indian": 449, "indic": [2, 8, 13, 16, 17, 24, 30, 33, 104, 108, 117, 119, 120, 122, 123, 125, 126, 128, 129, 144, 157, 158, 160, 161, 164, 165, 166, 173, 175, 197, 210, 212, 221, 222, 225, 236, 237, 244, 262, 263, 270, 295, 313, 326, 327, 328, 335, 336, 337, 338, 349, 350, 355, 356, 370, 371, 373, 374, 382, 397, 398, 399, 402, 403, 411, 418, 424, 429, 432, 441, 448, 449, 450, 451, 452], "indicator_matrix": [8, 24, 327, 424], "indiffer": 448, "individu": [100, 159, 448, 449], "indonesia": 449, "indonesian": 449, "induc": [450, 451, 452], "industri": 449, "inequ": 449, "inf": [138, 211, 212], "infer": 449, "infimum": [236, 238, 244, 262, 264, 270, 289, 291, 295, 307, 309, 313, 346, 451], "influenc": [448, 450, 451, 452], "info": [151, 236, 243, 262, 269, 287, 289, 294, 307, 312, 449, 452], "info_object": [243, 257, 269, 282, 294, 302, 312, 320], "info_object2": [243, 269, 294, 312], "info_object_1": [243, 269, 294, 312], "inform": [130, 132, 138, 148, 154, 155, 166, 168, 178, 191, 233, 260, 261, 285, 286, 290, 305, 306, 308, 323, 324, 348, 349, 350, 352, 354, 448, 449, 450, 451, 452], "information_gain": 348, "infti": [400, 401], "ing": 449, "ingredi": 450, "inher": 449, "initi": [337, 448, 449, 451, 452], "initialize_search": 166, "inject": [346, 448, 450], "inlin": 449, "inner": [440, 449], "inner_node_color": [440, 441], "inner_node_color_neg": [439, 441], "inner_node_color_po": [439, 441], "inner_node_s": 440, "input": [260, 261, 285, 286, 305, 306, 323, 324, 331, 335, 338, 385, 390, 391, 394, 411, 448, 450, 453], "inquisit": 448, "insemin": 449, "insert": [57, 60, 138, 174, 191, 231], "insert_label": [103, 107, 116, 168, 172, 176, 196, 449, 452], "insert_separ": 57, "insertion_idx": 60, "insid": [138, 214, 236, 244, 253, 262, 277, 278, 289, 295, 299, 307, 313, 317, 448, 449], "insight": [448, 449, 452], "inspect": [449, 451, 452], "inspir": [331, 339, 450, 451], "instanc": [178, 193, 442, 449], "instead": [14, 15, 31, 32, 94, 221, 430, 431, 442, 449, 452], "insti": 449, "institut": [448, 449], "instruct": 453, "insult": 452, "insur": 449, "int": [2, 10, 11, 12, 13, 17, 26, 27, 28, 30, 35, 36, 37, 39, 40, 43, 45, 46, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 73, 76, 77, 81, 82, 83, 84, 88, 91, 104, 108, 117, 119, 122, 124, 125, 128, 135, 137, 138, 139, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 157, 160, 164, 166, 167, 168, 170, 173, 176, 177, 197, 198, 200, 201, 205, 206, 214, 215, 221, 222, 225, 226, 230, 231, 234, 236, 237, 238, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 262, 263, 264, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 287, 290, 291, 294, 296, 297, 298, 300, 301, 302, 303, 304, 308, 309, 312, 314, 315, 316, 318, 319, 320, 321, 322, 333, 337, 339, 340, 341, 342, 346, 359, 362, 365, 370, 371, 378, 379, 381, 384, 407, 408, 409, 411, 413, 414, 416, 417, 426, 427, 428, 429, 442, 443, 448, 450, 451, 452], "int8": [448, 450], "integ": [137, 139, 144, 381, 441, 449, 452], "integr": [449, 450], "intellig": 451, "intens": [450, 451, 452], "intent": 451, "interact": [100, 194, 437, 442, 445, 450, 451, 453], "interest": [130, 154, 243, 269, 294, 312, 448, 449, 450, 451, 452], "interestingli": [448, 449, 451, 452], "interfac": [86, 88, 449], "interim": 449, "interlingu": 449, "interlingua": 449, "intermedi": [448, 449], "intermediari": 449, "intern": [448, 449, 450], "internet": 449, "interpol": 441, "interpret": [119, 122, 125, 128, 130, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 212, 338, 339, 448, 449, 450, 451, 452], "interpret_column_select": [119, 122, 125, 128, 130, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176], "intersect": [221, 222, 244, 257, 262, 270, 282, 295, 302, 313, 320, 448, 449, 450, 452], "interv": [138, 214, 215, 442, 448, 449, 450], "interview": 449, "introduc": [83, 449, 452], "introduct": 448, "introvert": 452, "intuit": [287, 450, 452], "inuktitut": 449, "inupiaq": 449, "invalid": [100, 121, 124, 127, 130, 133, 149, 178, 179, 180, 182, 190, 191, 214, 215, 217, 218, 449], "invalid_valu": [149, 178, 179, 190, 214, 215, 218, 219, 449, 452], "invalid_value_rang": 138, "invalid_values_as_list": 178, "invers": [96, 97, 98, 236, 238, 239, 251, 252, 254, 256, 262, 264, 265, 276, 277, 279, 281, 335, 346, 448, 450, 451, 452], "invert": [101, 102, 105, 106, 114, 115, 194, 195, 255, 280, 397, 400, 417, 449, 452], "invert_op": [101, 105, 114, 194], "investig": [448, 449, 450, 452], "investigs": 451, "involv": [451, 452], "io": [449, 451], "ionian": 449, "ipython": 449, "iq": 449, "ir": 449, "iran": 449, "iraq": 449, "irc": 449, "ireland": 449, "irish": 449, "irrit": 452, "is0": 449, "is00": 449, "is_guid": 224, "is_l": [236, 262, 289, 307, 450], "is_leaf": [2, 17, 66, 418], "is_nest": [236, 262, 289, 307], "is_nominal_typ": 178, "is_numeric_typ": 178, "is_ordinal_typ": 178, "is_subset": [236, 262], "is_us": [178, 449, 452], "is_valid_typ": 178, "is_valid_type_nam": 178, "isc": 449, "isced97": 449, "isco": 449, "isco08": 449, "isei08": 449, "isin": 448, "isl": 449, "islam": 449, "island": 449, "ism": 449, "ismaili": 449, "isnumer": 449, "iso": 449, "isol": [448, 449], "israel": 449, "isto\u010dn": 449, "isto\u010dna": 449, "istrian": 449, "isz": 449, "iszz": 449, "itali": 449, "italian": 449, "itc": 449, "itc1": 449, "itc2": 449, "itc3": 449, "itc4": 449, "item": [131, 143, 149, 179, 190, 449], "iter": [448, 450], "itf": 449, "itf1": 449, "itf2": 449, "itf3": 449, "itf4": 449, "itf5": 449, "itf6": 449, "itg": 449, "itg1": 449, "itg2": 449, "ith": 449, "ith1": 449, "ith2": 449, "ith3": 449, "ith4": 449, "ith5": 449, "iti": 449, "iti1": 449, "iti2": 449, "iti3": 449, "iti4": 449, "its": [2, 7, 16, 17, 22, 29, 33, 35, 94, 96, 97, 98, 99, 167, 173, 175, 176, 209, 221, 222, 231, 238, 239, 240, 243, 248, 254, 256, 264, 265, 266, 269, 273, 279, 281, 292, 294, 310, 312, 349, 350, 380, 384, 398, 399, 403, 406, 407, 418, 423, 432, 448, 449, 450, 451, 452], "itself": [12, 28, 37, 428, 452], "itz": 449, "itzz": 449, "it\u00e4": 449, "iu": 449, "iv": 449, "iva": 449, "ivan": 449, "ivano": 449, "ivb": 449, "ivc": 449, "ivoir": 449, "j": [55, 84, 206, 339, 354, 382, 449, 450, 451, 452], "j_matrix": 405, "ja": 449, "jadranska": 449, "jalilabad": 449, "jamaica": 449, "jan": 449, "japan": 449, "japanes": 449, "javanes": 449, "je": 449, "jehova": 449, "jehovah": 449, "jeovah": 449, "jersei": 449, "jesu": 449, "jew": 449, "jewish": 449, "jihov\u00fdchod": 449, "jihoz\u00e1pad": 449, "jm": 449, "jo": 449, "job": 449, "jobbik": 449, "join": [449, 452], "joint": [348, 353], "joint_entropi": [348, 349], "jordan": 449, "journalist": 449, "jp": 449, "judaic": 449, "judaism": 449, "judaist": 449, "judg": 452, "jug": 449, "jumbl": 450, "junior": 449, "jupyt": 453, "just": [12, 28, 49, 76, 200, 428, 448, 449, 450, 452], "justic": 449, "justifi": 449, "ju\u017en": 449, "ju\u017ena": 449, "jv": 449, "k": [17, 34, 36, 83, 221, 339, 341, 342, 349, 354, 377, 384, 439, 440, 441, 448, 449, 450, 451, 452], "k_nearest_neighbor": [377, 452], "k_nn_matrix": 452, "k_smallest_local_min": 450, "k_tangl": [34, 450], "k_tangle_matrix": 450, "ka": 449, "kalaallisut": 449, "kandidat": 449, "kannada": 449, "kanuri": 449, "karlsruh": 449, "kashmiri": 449, "kassel": 449, "katanga": 449, "kazakh": 449, "kazakhstan": 449, "kdnp": 449, "kdu": 449, "ke": 449, "kedabegski": 449, "keel": 449, "keep": [138, 441, 448, 449, 452], "keep_existing_label": 138, "kei": [178, 449, 452], "kent": 449, "kentriki": 449, "kenya": 449, "kept": 450, "keyboard": 449, "keyed_var_label": 452, "keyed_var_labels_n": 452, "keyed_var_nam": 452, "keyed_var_names_n": 452, "keyed_x": 452, "keying_n": 452, "kg": 449, "kh": 449, "khachmaz": 449, "kharkiv": 449, "kherson": 449, "khmelnytski": 449, "khmer": 449, "khyzi": 449, "ki": 449, "kikuyu": 449, "kind": [2, 4, 418, 420, 448, 449, 450, 451], "kingdom": 449, "kinyarwanda": 449, "kirghiz": 449, "kiribati": 449, "kirovograd": 449, "kirundi": 449, "kitt": 449, "kj": 449, "kk": 449, "kl": 449, "km": 449, "kmbo": 449, "kn": 449, "know": [37, 39, 45, 54, 205, 448, 449, 450, 451, 452], "knowledg": 449, "known": [138, 448, 449, 452], "known_meta_info": [243, 269, 294, 312], "ko": 449, "koblenz": 449, "koll\u00e1r": 449, "komi": 449, "kong": 449, "kongo": 449, "kontinentalna": 449, "korea": 449, "korean": 449, "korwin": 449, "kosovo": 449, "kotar": 449, "kotleba": 449, "kp": 449, "kpv": 449, "kr": 449, "kraj": 449, "krishna": 449, "kriti": 449, "kron": 452, "ks\u010dm": 449, "ktangle_anno": 450, "ku": 449, "kuba": 449, "kujawsko": 449, "kukiz": 449, "kur": 449, "kurdamir": 449, "kurdish": 449, "kurz": 449, "kuwait": 449, "kv": 449, "kw": 449, "kwanyama": 449, "ky": 449, "kyiv": 449, "kyrgyzstan": 449, "kz": 449, "k\u00e4rnten": 449, "k\u00f6ln": 449, "k\u00f6z\u00e9p": 449, "l": [349, 355, 372, 376, 448, 449, 450, 451, 452], "l_": 451, "la": 449, "label": [66, 70, 103, 107, 116, 130, 138, 143, 144, 149, 150, 168, 172, 176, 178, 179, 188, 189, 190, 191, 196, 410, 411, 412, 413, 414, 416, 436, 442, 445, 448, 449, 450, 451, 452], "labelrot": 448, "labor": 449, "labour": 449, "lambda": [448, 449, 450, 451, 452], "lan": 449, "lancashir": 449, "land": 451, "languag": 449, "languedoc": 449, "lanka": 449, "lankaran": 449, "lao": 449, "laplacian": [341, 342, 355, 376, 404, 450, 451], "larg": [339, 448, 449, 452], "larger": [338, 452], "last": [58, 339, 448, 449, 450, 452], "later": [448, 449, 450, 452], "latin": 449, "latter": [254, 279, 449, 450], "latvia": 449, "latvian": 449, "latvija": 449, "law": [391, 449], "layer": [10, 26, 44, 426], "layout": [417, 440, 450], "lazi": [449, 451], "lazio": 449, "lb": 449, "lbo": 449, "lc": 449, "ldp": 449, "ldpr": 449, "le": [254, 279, 300, 318], "le_func": [57, 223, 230], "lead": [339, 452], "leader": 449, "leaf": [2, 9, 17, 25, 66, 68, 418, 425, 448, 450, 451], "leagu": 449, "learn": [448, 449], "least": [1, 34, 35, 36, 39, 43, 45, 47, 54, 58, 59, 60, 75, 83, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 168, 170, 173, 198, 205, 215, 218, 225, 226, 346, 449, 450, 452], "leav": [2, 10, 17, 26, 418, 426, 449, 452], "leaves_in_subtre": [2, 17, 418], "lebanon": 449, "left": [2, 6, 13, 14, 17, 21, 30, 31, 34, 73, 225, 398, 418, 422, 429, 430, 448, 449, 450, 451, 452], "left_child": [2, 17, 418], "leftist": 449, "legal": 449, "legend": [450, 451], "legisl": 449, "leicestershir": 449, "leipzig": 449, "leisur": 449, "lemaniqu": 449, "len": [16, 33, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 432, 448, 449, 450, 452], "length": [191, 212, 239, 240, 260, 261, 265, 266, 285, 286, 292, 305, 306, 310, 323, 324, 399, 402, 403, 406, 408, 448, 449], "lenkaran": 449, "leon": 449, "leq": 448, "ler": 449, "lerik": 449, "lesotho": 449, "less": [43, 45, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 221, 222, 230, 236, 254, 262, 279, 289, 300, 307, 318, 343, 344, 345, 378, 379, 382, 448, 449, 451, 452], "lesser": 452, "lessoreqfunc": [57, 230], "lest": 449, "let": [398, 399, 403, 449, 450, 451, 452], "letter": 450, "letter_img": 450, "letter_upper_left_idx": 450, "letters_help": 450, "leve": 449, "level": [2, 12, 17, 28, 34, 35, 36, 39, 44, 45, 47, 50, 52, 57, 58, 59, 60, 73, 75, 77, 79, 93, 94, 95, 99, 198, 201, 203, 231, 346, 418, 428, 448, 449, 450, 451, 452], "level_in_subtre": [2, 17, 418], "level_label": 449, "level_label_func": [412, 448, 449, 450], "level_label_width": [412, 449], "level_sizes_for_agr": 450, "levica": 449, "lexsort": 450, "le\u00f3n": 449, "lg": 449, "li": [60, 244, 295, 313, 417, 449], "liashko": 449, "liber": 449, "liberia": 449, "liberti": 449, "liber\u00e1lisok": 449, "libra": 449, "librari": [442, 448, 449, 450, 451, 452], "libya": 449, "licanti": 449, "licens": 449, "licenti": 449, "licentiat": 449, "lie": [224, 417, 448, 452], "liechtenstein": 449, "lietuva": 449, "lietuvo": 449, "life": [448, 449, 450, 452], "lifespan": 450, "lifetim": 450, "light": 450, "lightgrai": 448, "liguria": 449, "like": [338, 377, 381, 384, 400, 401, 441, 448, 449, 450, 451, 452], "likelihood": 451, "limburg": 449, "limburgish": 449, "limit": [34, 39, 45, 47, 49, 54, 55, 57, 58, 60, 61, 62, 73, 75, 76, 81, 82, 83, 84, 167, 198, 200, 205, 206, 449, 450, 451, 452], "limousin": 449, "lincolnshir": 449, "line": [448, 450, 451, 452], "linear": 451, "linear_similarity_from_dist": 397, "linear_similarity_from_dist_matrix": [397, 448], "linearli": [397, 400, 448], "linearsegmentedcolormap": 448, "linewis": 382, "lingala": 449, "linguist": 449, "link": [249, 274, 449, 452, 453], "linspac": [448, 450], "lisa": 451, "lisboa": 449, "list": [2, 3, 10, 12, 13, 16, 17, 18, 26, 28, 30, 33, 34, 36, 39, 45, 47, 48, 50, 51, 57, 69, 71, 73, 74, 77, 78, 100, 101, 104, 105, 108, 114, 117, 119, 122, 125, 128, 130, 131, 135, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 160, 164, 166, 172, 173, 174, 175, 176, 178, 180, 182, 191, 192, 194, 197, 198, 199, 201, 202, 209, 211, 212, 213, 214, 215, 218, 219, 221, 222, 230, 231, 236, 237, 244, 247, 249, 257, 258, 262, 263, 270, 272, 274, 282, 283, 289, 290, 295, 297, 302, 303, 307, 308, 313, 315, 320, 321, 326, 327, 328, 329, 330, 336, 370, 371, 379, 386, 387, 393, 410, 411, 413, 418, 419, 426, 428, 429, 432, 441, 442, 448, 449, 450, 452], "listen": [442, 443], "liter": [168, 385, 395, 452], "lithuania": 449, "lithuanian": 449, "littl": [449, 452], "live": [448, 449], "lk": 449, "lmp": 449, "ln": 449, "lo": 449, "load": [34, 130, 166, 449, 452], "load_big_five_data": 452, "loc": 450, "loc_min": 450, "local": [331, 337, 449, 450, 451], "localis": 450, "locat": [450, 451, 452], "location_s": 452, "log": [397, 402], "logcial": [385, 395], "logdet_ord": 397, "logic": [168, 257, 282, 302, 320, 347, 386, 387, 388, 389, 390, 391, 393, 394, 396, 451, 452], "logicterm": 385, "loir": 449, "lombardia": 449, "london": 449, "long": [448, 449], "longer": [449, 450], "longest": 225, "look": [92, 225, 226, 413, 448, 449, 450, 451, 452], "loop": 450, "lorenzin": 449, "lorrain": 449, "loss": [448, 449], "lot": [382, 448, 449, 450, 451, 452], "low": [47, 52, 73, 79, 198, 203, 448, 449, 450, 451, 452], "lower": [166, 167, 170, 173, 177, 343, 344, 345, 346, 448, 449, 450, 451, 452], "lower_agr": [47, 73, 198], "lowest": [339, 449, 450, 452], "lr": 449, "lsv": 449, "lt": 449, "lt0": 449, "lt01": 449, "lt02": 449, "ltz": 449, "ltzz": 449, "lu": 449, "luba": 449, "lubelski": 449, "lubuski": 449, "lucia": 449, "luhansk": 449, "lutheran": 449, "luxembourg": 449, "luxembourgish": 449, "lv": 449, "lv0": 449, "lv00": 449, "lviv": 449, "lvz": 449, "lvzz": 449, "ly": [448, 449], "lyceum": 449, "l\u00e4nsi": 449, "l\u00fcneburg": 449, "m": [55, 83, 84, 206, 339, 382, 398, 399, 400, 401, 403, 448, 449, 450, 451, 452], "m49": 449, "m_a": [397, 402], "m_b": [397, 402], "ma": 449, "maarten": 449, "macao": 449, "macedonia": 449, "macedonian": 449, "machin": [448, 449], "machineri": 449, "macroregiunea": 449, "madagascar": 449, "made": [385, 395, 443, 450, 452], "madeira": 449, "madrid": 449, "mag": 449, "mage": 450, "magist": 449, "magnitud": [339, 451, 452], "magyarorsz\u00e1g": 449, "mai": [167, 447, 448, 451, 452], "mail": 449, "main": [403, 449, 451], "mainli": [441, 448, 449, 450, 451], "mainstream": 449, "maintain": 449, "major": [449, 450, 452], "make": [101, 105, 114, 130, 168, 339, 442, 448, 449, 450, 451, 452], "maker": 449, "makroregion": 449, "malagasi": 449, "malai": 449, "malawi": 449, "malayalam": 449, "malaysia": 449, "maldiv": 449, "male": 449, "mali": 449, "malta": 449, "maltes": 449, "malvina": 449, "man": 449, "manag": [100, 130, 166, 173, 194, 346, 410, 411, 449, 452], "mancha": 449, "manchest": 449, "mandatori": 449, "manhattan": 381, "mani": [448, 449, 450, 451, 452], "manner": [449, 452], "manual": 449, "manufactur": 449, "manx": 449, "map": [130, 143, 144, 178, 188, 189, 338, 450, 451, 452], "mapsto": [450, 451], "marathi": 449, "march": 449, "margin": [397, 400, 401, 448], "mariana": 449, "mariavit": 449, "marino": 449, "marit": 449, "mark": [138, 441, 449], "mark_added_label": [138, 452], "marked_im": 451, "marked_node_s": 441, "marked_nodes_color": 441, "marked_nodes_ind": 441, "marked_nodes_s": 441, "markers": 448, "market": 449, "marri": 449, "marriag": 449, "marshal": 449, "marshalles": 449, "martin": 449, "martiniqu": 449, "masal": 449, "mask": [450, 451], "massiv": 448, "master": 449, "mat": [216, 379], "materi": 449, "materialist": 449, "mathbb": [450, 451, 453], "mathcal": [450, 451], "mathemat": [449, 450, 451], "matplotlib": [435, 436, 440, 441, 442, 445, 448, 449, 450, 451, 452], "matric": [378, 379, 395, 448, 450], "matricul": 449, "matrix": [2, 8, 16, 17, 24, 33, 34, 45, 47, 54, 55, 73, 83, 84, 93, 94, 95, 96, 97, 98, 99, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 166, 170, 173, 175, 198, 205, 206, 216, 220, 236, 237, 239, 240, 252, 253, 257, 260, 261, 262, 263, 265, 266, 270, 277, 278, 282, 285, 286, 289, 290, 292, 299, 302, 305, 306, 307, 308, 310, 317, 320, 323, 324, 326, 327, 329, 330, 331, 336, 338, 339, 341, 342, 348, 349, 350, 354, 355, 356, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 394, 395, 397, 398, 399, 400, 401, 402, 403, 418, 424, 432, 448, 449, 450, 451, 452], "matrix_ord": [347, 398, 399, 400, 401, 402, 404, 405, 448, 452], "matrixordersvd": 397, "matter": 394, "matur": 449, "maturita": 449, "mauritania": 449, "mauritiu": 449, "mavo": 449, "max": [75, 435, 448, 450, 451, 452], "max_": 208, "max_col": 450, "max_column": 449, "max_colwidth": 449, "max_depth": [10, 16, 26, 33, 59, 426, 432], "max_dist": [380, 381, 451], "max_entropi": 349, "max_i": 451, "max_incl": 208, "max_level": [34, 35, 39, 45, 75, 450, 451], "max_neighbour": 378, "max_num_values_for_extensive_sep": 215, "max_number_of_sep": [221, 222], "max_order_factor": [211, 212, 451], "max_p": 448, "max_row": 449, "max_step": 337, "max_valu": 88, "max_width": 59, "max_x": 451, "max_x_valu": 442, "max_y_valu": 442, "maxim": [1, 34, 39, 45, 47, 54, 71, 75, 198, 205, 221, 222, 224, 226, 337, 380, 381, 448, 449, 450, 451], "maximal_tangl": [34, 448, 450, 451], "maximum": [10, 16, 26, 33, 34, 37, 57, 59, 73, 100, 215, 230, 397, 400, 426, 432, 449, 451], "mayb": [448, 449, 451], "mayen": 449, "mayor": 449, "mayott": 449, "mazowiecki": 449, "mazurski": 449, "ma\u0142opolski": 449, "mb": 449, "mba": 449, "mc": 449, "mcdonald": 449, "md": 449, "mddr": 449, "me": 449, "me0": 449, "me00": 449, "mean": [12, 28, 59, 225, 236, 257, 262, 282, 287, 289, 302, 307, 320, 382, 398, 406, 409, 411, 428, 448, 449, 450, 451, 452], "meaning": [178, 448, 449, 450, 451, 452], "meaningfulli": 452, "meant": 448, "meao": 449, "measur": [93, 98, 339, 377, 382, 450, 452], "mechan": [449, 450, 451], "mecklenburg": 449, "med": 449, "medecin": 449, "media": 449, "median": [406, 407, 452], "median_feature_factori": 452, "medic": 449, "medicin": 449, "medium": [449, 452], "meet": 449, "melanesia": 449, "melilla": 449, "mellansverig": 449, "mellersta": 449, "meloni": 449, "member": 448, "membership": [96, 448, 450], "memoiz": [87, 89, 90], "memori": [378, 379, 382], "men": 449, "mention": [448, 449, 451], "mere": [243, 269, 294, 312, 448], "merg": 449, "merit": 449, "merseysid": 449, "mess": 452, "meta": [148, 236, 243, 262, 269, 289, 294, 307, 312, 449], "meta_info": [243, 269, 294, 312], "metadata": [101, 102, 104, 105, 106, 108, 114, 115, 117, 119, 120, 122, 123, 125, 126, 128, 129, 130, 132, 144, 148, 157, 158, 160, 161, 164, 165, 166, 168, 170, 172, 173, 175, 176, 194, 195, 197, 209, 213, 214, 215, 218, 221, 222, 235, 236, 239, 240, 243, 249, 258, 260, 261, 262, 265, 266, 269, 274, 283, 285, 286, 288, 289, 292, 294, 303, 305, 306, 307, 310, 312, 321, 323, 324, 449, 452], "metadata_matrix": [236, 262, 289, 307], "metadata_orient": [104, 108, 117, 197], "metal": 449, "method": [2, 14, 15, 17, 31, 32, 34, 47, 49, 57, 64, 66, 71, 73, 76, 101, 105, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 178, 194, 198, 200, 224, 225, 230, 236, 262, 287, 289, 307, 331, 332, 333, 334, 339, 342, 358, 359, 360, 361, 362, 363, 364, 365, 366, 382, 411, 418, 430, 431, 438, 442, 448, 450, 451, 452], "methodist": 449, "metric": [377, 380, 381, 382, 384, 452], "metropolitan": 449, "metropolitana": 449, "mexico": 449, "mf": 449, "mg": 449, "mgr": 449, "mh": 449, "mi": 449, "michael": [448, 450, 451], "micronesia": 449, "mid": 441, "middl": [449, 450, 451], "midi": 449, "midland": 449, "midtjylland": 449, "might": [37, 341, 342, 346, 384, 398, 399, 403, 411, 448, 449, 450, 451, 452], "milan": 449, "militari": 449, "million": 448, "mimic": [450, 451], "min": [448, 450, 452], "min_": [208, 448], "min_agr": [49, 54, 55, 75, 76, 83, 84, 200, 205, 206, 221, 222, 225, 226, 448, 450, 451], "min_component_size_fract": 342, "min_i": 451, "min_incl": 208, "min_p": 448, "min_s_t_cut": 331, "min_side_s": [211, 212], "min_side_size_is_fract": [211, 212], "min_size_fract": 211, "min_x": 451, "min_x_valu": 442, "min_y_valu": 442, "mind": [449, 452], "mindset": 453, "mine": 449, "mingechaur": 449, "miniatur": 448, "minim": [17, 35, 331, 332, 336, 337, 449, 450], "minima": [337, 450], "minimize_cut": 331, "minimize_weight": [370, 371], "minimum": [100, 211, 212, 215, 221, 222, 346, 379, 448, 449, 450, 451], "mininim": 450, "miniscul": 448, "minkowski": [400, 401], "minor": [355, 374, 449], "minsk": 449, "minut": 449, "miquelon": 449, "miss": [100, 121, 124, 127, 130, 137, 138, 217, 449], "mittelfranken": 449, "mittelland": 449, "mix": [448, 449, 452], "mixtur": 448, "mk": 449, "mk0": 449, "mk00": 449, "mkkp": 449, "mkz": 449, "mkzz": 449, "ml": 449, "mm": [339, 449], "mm_fw_end_fu": 449, "mm_fw_start_fu": 449, "mm_matrix_group": 449, "mm_mixed_mod": 449, "mm_mode_fu": 449, "mm_original_matrix_design_i": 449, "mm_original_matrix_group_i": 449, "mm_select_sampl": 449, "mm_v277_fu": 449, "mm_v278a_fu": 449, "mm_v278b_fu": 449, "mm_v279a_fu": 449, "mm_v279b_fu": 449, "mm_year_fu": 449, "mn": 449, "mo": 449, "mobil": 449, "mod": 449, "mode": [398, 449, 450, 451], "model": 452, "moder": [448, 449, 452], "modern": 449, "modif": 449, "modifi": [449, 452], "modul": [1, 100, 228, 235, 347, 355, 385], "modular": [355, 375], "modularity_matrix": 355, "mogilev": 449, "moldavian": 449, "moldova": 449, "molis": 449, "momentum": 449, "mon": 449, "mona": 451, "monaco": 449, "monalisa": 451, "monarch": 449, "monei": 449, "mongolia": 449, "mongolian": 449, "moniteur": 449, "monitor": 449, "monoton": 450, "montenegrin": 449, "montenegro": 449, "month": 449, "monthli": 449, "montserrat": 449, "mood": 452, "morava": 449, "moravia": 449, "moravskoslezsko": 449, "more": [17, 58, 148, 221, 222, 224, 338, 342, 346, 411, 448, 449, 450, 451, 452, 453], "moreov": [450, 452], "mormon": 449, "morocco": 449, "moscow": 449, "moslem": 449, "most": [34, 39, 59, 215, 380, 398, 435, 448, 449, 450, 451, 452], "mostli": [448, 452], "mother": 449, "motherland": 449, "motiv": [448, 452], "motor": 449, "motu": 449, "mountain": 449, "mous": [445, 450], "move": [436, 450], "movement": 449, "movi": 441, "mozambiqu": 449, "mp": 449, "mpl": 448, "mq": 449, "mr": 449, "mr_contact_mode_d": 449, "mr_detailed_mode_d": 449, "mr_incentive_d": 449, "mrf": 449, "msc": 449, "mszp": 449, "mt": 449, "mu": 449, "much": [93, 98, 232, 234, 448, 449, 451, 452], "mudr": 449, "multi_referenc": 449, "multipl": [144, 215, 384, 448, 449, 450, 451, 452], "multipli": [368, 369, 391], "municip": 449, "munk\u00e1sp\u00e1rt": 449, "muntenia": 449, "murcia": 449, "musavat": 449, "music": 449, "muslim": 449, "must": [140, 332, 346, 400, 401, 417, 435, 443], "mutual": [348, 349, 354, 449], "mv": 449, "mvdr": 449, "mw": 449, "mx": 449, "my": [449, 452], "myanmar": 449, "mykolaiv": 449, "mymap": 448, "myself": 452, "mz": 449, "m\u00fcnster": 449, "m\u0101ori": 449, "n": [270, 339, 382, 398, 448, 449, 450, 452], "n1": 452, "n10": 452, "n2": 452, "n3": 452, "n4": 452, "n5": 452, "n6": 452, "n7": 452, "n8": 452, "n9": 452, "n_center": 448, "n_idx": 452, "na": 449, "naftalan": 449, "naiv": 448, "nam": 449, "name": [100, 103, 107, 116, 130, 139, 140, 145, 151, 152, 162, 168, 172, 173, 176, 178, 191, 196, 216, 220, 339, 377, 382, 448, 449, 452], "namibia": 449, "nan": 449, "narodnai": 449, "narodu": 449, "narrow": 452, "nation": 449, "nationalist": 449, "natur": [144, 448, 449, 450, 451], "nauru": 449, "navajo": 449, "navarra": 449, "navarres": 449, "nb": 449, "nbsp": 449, "nc": 449, "ncol": [448, 451], "ncut": [357, 368], "ncut_ord": 357, "ncutord": [357, 362, 363], "nd": 449, "ndarrai": [8, 16, 24, 33, 34, 35, 45, 48, 50, 51, 54, 55, 57, 66, 71, 73, 83, 84, 94, 95, 96, 97, 98, 99, 109, 110, 111, 112, 113, 119, 120, 122, 123, 125, 126, 128, 129, 133, 135, 136, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 170, 173, 174, 175, 176, 198, 205, 206, 209, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 225, 226, 227, 230, 231, 237, 239, 240, 241, 242, 244, 249, 251, 252, 253, 257, 258, 260, 261, 263, 265, 266, 267, 268, 270, 274, 276, 277, 278, 282, 283, 285, 286, 290, 292, 293, 295, 298, 299, 302, 303, 305, 306, 308, 310, 311, 313, 316, 317, 320, 321, 323, 324, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 374, 375, 376, 378, 380, 382, 383, 384, 386, 387, 390, 391, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 424, 432, 438, 441, 442, 445, 446, 450], "ndebel": 449, "ndonga": 449, "ndp": 449, "ne": 449, "nearest": [377, 384, 452], "nearli": [448, 449, 450, 451], "neatli": 451, "necessari": [73, 167, 449, 450, 451, 452], "necessarili": 452, "necessit": 448, "nederland": 449, "need": [124, 172, 332, 333, 334, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 435, 448, 449, 450, 451, 452], "nef": 449, "neftchala": 449, "neg": [57, 221, 222, 338, 339, 349, 407, 439, 440, 441, 450, 452], "negat": [448, 450, 452], "neglig": 448, "neighbor": [66, 69, 370, 371, 377, 381, 384, 450, 451], "neighbor_skip": 450, "neighborhood": [355, 370, 371, 377, 380, 449, 451], "neighbour": [66, 449, 450, 452], "neighbourhood": 449, "neither": [448, 449], "neo": 449, "nepal": 449, "nepali": 449, "neq": [448, 450], "nest": [236, 255, 262, 280, 289, 301, 307, 319, 346, 448, 451], "net": 449, "netherland": 449, "network": 449, "networkx": [410, 411, 440, 441], "neurot": 452, "neurotic": 452, "never": 449, "nevertheless": [449, 450, 451], "nevi": 449, "new": [2, 4, 5, 14, 15, 17, 19, 20, 31, 32, 34, 43, 49, 55, 57, 58, 60, 61, 62, 76, 81, 82, 84, 130, 144, 146, 147, 150, 151, 167, 200, 206, 236, 238, 239, 251, 260, 261, 262, 264, 265, 276, 285, 286, 289, 291, 298, 305, 306, 307, 309, 316, 323, 324, 346, 416, 418, 420, 421, 430, 431, 441, 448, 449, 450, 452], "new_featur": [239, 265], "new_label": [143, 416], "new_sep": [240, 266, 292, 310], "new_sep_id": [2, 58, 60, 230, 231], "newaxi": [448, 450, 451, 452], "newli": 452, "next": [448, 449, 450, 451, 452], "next_": 208, "nf": 449, "ng": 449, "ni": 449, "nicaragua": 449, "nice": [178, 448, 449, 450, 451, 452], "nichola": 449, "niederbayern": 449, "niedersachsen": 449, "nieder\u00f6sterreich": 449, "niger": 449, "nigeria": 449, "nir": 449, "nissia": 449, "niue": 449, "nk": 449, "nl": 449, "nl1": 449, "nl11": 449, "nl12": 449, "nl13": 449, "nl2": 449, "nl21": 449, "nl22": 449, "nl23": 449, "nl3": 449, "nl31": 449, "nl32": 449, "nl33": 449, "nl34": 449, "nl4": 449, "nl41": 449, "nl42": 449, "nlz": 449, "nlzz": 449, "nn": [384, 449, 452], "no0": 449, "no01": 449, "no02": 449, "no03": 449, "no04": 449, "no05": 449, "no06": 449, "no07": 449, "nodal": [331, 338], "nodal_domain": 331, "node": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 47, 49, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 81, 82, 198, 200, 231, 380, 384, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 438, 439, 440, 441, 448, 449, 450, 451, 452], "node_attr_bin_tree_nod": [448, 450, 451], "node_attr_is_originally_left_child": 450, "node_id": [414, 416, 448, 450, 451], "node_label_s": [412, 448, 450, 451], "node_posit": 440, "node_s": [435, 436, 439, 441, 451, 452], "node_sizes_by_location_s": 452, "nodes_bg": 450, "nodes_fg": 450, "nomin": [100, 101, 105, 114, 118, 152, 178, 183, 219, 449], "nominalvar_features_all_cat": [100, 118], "nominalvariablevalu": [100, 102, 103, 104], "nomvar_func": 118, "non": [57, 156, 175, 221, 222, 349, 441, 448, 449, 452], "none": [2, 7, 8, 10, 14, 15, 17, 22, 24, 26, 31, 32, 35, 39, 45, 46, 49, 54, 55, 57, 58, 59, 60, 61, 62, 71, 75, 76, 81, 82, 83, 84, 99, 119, 121, 122, 125, 127, 128, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 159, 160, 163, 164, 170, 173, 176, 178, 179, 190, 198, 200, 205, 206, 208, 211, 212, 213, 214, 215, 218, 219, 221, 222, 239, 240, 243, 247, 249, 257, 258, 260, 261, 265, 266, 269, 272, 274, 282, 283, 285, 286, 292, 294, 297, 302, 303, 305, 306, 310, 312, 315, 320, 321, 323, 324, 339, 370, 371, 372, 375, 376, 378, 379, 380, 389, 398, 411, 412, 417, 418, 423, 424, 426, 430, 431, 435, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452], "nonetheless": 452, "nonmanu": 449, "nonzero": 379, "noord": 449, "nope": [36, 39], "nor": [448, 449], "nord": 449, "nordjylland": 449, "nordrhein": 449, "nordwestschweiz": 449, "norest": 449, "norfolk": 449, "norg": 449, "norm": [400, 401, 448, 451], "normal": [55, 84, 168, 206, 257, 282, 302, 320, 326, 329, 355, 376, 381, 390, 391, 394, 395, 406, 408, 441, 448, 451], "normal_form": [257, 282, 302, 320], "normalis": 450, "normalize_col": [98, 451], "normalize_length": 406, "normalize_row": 98, "normalized_laplacian": [355, 451], "normandi": 449, "normcut": [216, 220], "noroest": 449, "norra": 449, "norrland": 449, "nors": 449, "nort": 449, "north": 449, "northamptonshir": 449, "northern": 449, "northumberland": 449, "norwai": 449, "norwegian": 449, "notari": 449, "note": [2, 4, 44, 75, 88, 151, 255, 280, 301, 319, 336, 341, 375, 379, 384, 398, 399, 403, 418, 420, 448, 449, 450, 451, 452], "notebook": [448, 449, 450, 451, 452, 453], "noteworthi": 448, "noth": [58, 451], "notic": 452, "notin": 448, "notio": 449, "notion": 448, "nottinghamshir": 449, "now": [448, 449, 452], "noz": 449, "nozz": 449, "np": [16, 33, 34, 35, 45, 54, 55, 57, 73, 84, 94, 95, 96, 97, 98, 99, 119, 120, 122, 123, 125, 126, 128, 129, 133, 135, 136, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 170, 173, 174, 175, 176, 198, 205, 206, 209, 211, 212, 213, 214, 215, 216, 218, 221, 222, 225, 226, 227, 231, 237, 239, 240, 241, 242, 244, 249, 251, 252, 253, 257, 258, 260, 261, 263, 265, 266, 267, 268, 270, 274, 276, 277, 278, 282, 283, 285, 286, 290, 292, 293, 295, 298, 299, 302, 303, 305, 306, 308, 310, 311, 313, 316, 317, 320, 321, 323, 324, 327, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 354, 356, 370, 371, 372, 374, 375, 376, 378, 380, 382, 383, 384, 390, 391, 399, 400, 401, 402, 403, 407, 408, 409, 432, 441, 442, 448, 449, 450, 451, 452], "nr": 449, "nrow": [448, 451], "nsdp": 449, "nsi": 449, "nu": 449, "num_bin": [214, 215], "num_el": 340, "num_featur": [119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 340], "num_k_tangl": 450, "num_nod": [16, 33, 432], "num_pixel": 450, "num_quest": 130, "num_respond": [130, 133, 136, 449], "num_sampl": 448, "num_take_neighbor": 450, "num_unique_answ": [449, 452], "num_valid_answ": [449, 452], "number": [10, 26, 34, 40, 58, 59, 98, 100, 119, 120, 122, 123, 125, 126, 128, 129, 130, 135, 136, 141, 142, 153, 155, 157, 158, 160, 161, 164, 165, 213, 214, 215, 221, 222, 236, 237, 239, 240, 246, 252, 253, 259, 260, 261, 262, 263, 265, 266, 271, 277, 278, 284, 285, 286, 289, 290, 292, 296, 299, 304, 305, 306, 307, 308, 310, 314, 317, 322, 323, 324, 327, 331, 337, 338, 339, 340, 341, 342, 349, 354, 369, 370, 371, 374, 377, 382, 384, 426, 442, 448, 449, 450, 451, 452], "number_of_separ": 34, "numer": [57, 100, 105, 118, 148, 152, 178, 184, 215, 448, 449, 452], "numeric_var_num_bin": 124, "numericalvariablevalu": [100, 106, 107, 108], "numericvar_features_split_regular_g": 118, "numpi": [83, 138, 173, 210, 212, 382, 448, 449, 450, 451, 452], "numvar_func": [118, 452], "nurs": 449, "nurseri": 449, "nut": 449, "nv": 449, "nvq": 449, "nx": 415, "ny": 449, "nynorsk": 449, "nyugat": 449, "nz": 449, "o": [448, 449, 452], "o1": [100, 109, 110, 216, 220, 367, 452], "o10": 452, "o2": [100, 111, 449, 452], "o3": [100, 112, 452], "o4": [100, 113, 452], "o5": [216, 220, 397, 404, 452], "o6": 452, "o7": [397, 405, 452], "o8": 452, "o9": 452, "o_fiv": 397, "o_seven": 397, "obedi": 449, "obei": 449, "oberbayern": 449, "oberfranken": 449, "oberpfalz": 449, "ober\u00f6sterreich": 449, "object": [1, 34, 47, 52, 57, 70, 73, 79, 100, 130, 138, 139, 144, 148, 151, 166, 170, 171, 173, 178, 181, 191, 194, 198, 203, 221, 222, 243, 249, 258, 269, 274, 283, 294, 303, 312, 321, 346, 397, 398, 435, 436, 440, 441, 442, 445, 446, 448, 449, 450, 452], "oblig": 449, "obligatori": 452, "observ": [449, 451], "obstacl": 448, "obtain": [139, 448, 449, 451, 452], "obviou": [448, 450], "obvious": [448, 449, 450], "oc": 449, "occitan": 449, "occup": 449, "ocean": [449, 452], "od": 449, "odd": 452, "odesa": 449, "odontologi": 449, "off": [448, 449, 450, 451], "offic": 449, "offici": 449, "offset": 445, "often": [130, 138, 150, 168, 172, 176, 178, 448, 449, 450, 451, 452], "og": 449, "og_sep": 393, "ogu": 449, "oguz": 449, "oj": 449, "ojibwa": 449, "ok": [448, 449], "okamura": 449, "old": [144, 449], "older": 449, "oleh": 449, "oltenia": 449, "om": 449, "oman": 449, "onc": [448, 449, 452], "one": [2, 13, 17, 30, 34, 37, 55, 83, 84, 119, 120, 122, 123, 125, 126, 127, 128, 129, 134, 140, 145, 157, 158, 160, 161, 164, 165, 168, 176, 194, 206, 215, 218, 221, 222, 230, 255, 270, 280, 326, 329, 338, 346, 350, 382, 384, 395, 417, 418, 429, 438, 439, 440, 441, 449, 450, 451, 452], "ones": [370, 371, 448, 450, 452], "onli": [36, 39, 45, 58, 59, 60, 75, 83, 133, 168, 172, 175, 221, 222, 225, 370, 371, 384, 398, 400, 401, 435, 439, 442, 448, 449, 450, 451, 452, 453], "onlixel": 451, "only_affected_quest": 176, "only_inital_sep": [54, 205], "only_initial_sep": [54, 83, 205, 452], "only_max_level_tangl": [176, 449], "only_original_featur": 174, "only_original_sep": 172, "onufrii": 449, "onward": 449, "oost": 449, "op": [102, 106, 115, 195, 209, 449], "open": [17, 450, 452], "oper": [57, 63, 73, 85, 101, 102, 105, 106, 114, 115, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 194, 195, 209, 448, 449, 450, 451], "opinion": 449, "opolski": 449, "opozytsiina": 449, "opozytsiinyi": 449, "oppland": 449, "opportun": 449, "opposit": [449, 452], "oppress": 449, "optim": [337, 400, 401], "optimis": 450, "option": [35, 39, 45, 57, 58, 59, 60, 75, 92, 99, 144, 149, 198, 221, 225, 239, 240, 260, 261, 265, 266, 285, 286, 292, 305, 306, 310, 323, 324, 337, 339, 370, 371, 375, 379, 380, 411, 418, 442, 443, 449, 452], "orang": 450, "ord": 346, "order": [17, 34, 35, 37, 57, 60, 73, 83, 99, 100, 109, 110, 111, 112, 113, 144, 166, 172, 173, 174, 175, 198, 211, 212, 216, 220, 221, 222, 230, 231, 257, 282, 302, 320, 332, 334, 343, 344, 345, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 366, 367, 368, 369, 397, 398, 399, 400, 401, 402, 403, 441, 449, 450, 453], "order_deriv": 337, "order_fun": [448, 451], "order_func": [73, 211, 212, 222, 325, 450, 451], "order_func_bal": 343, "order_func_min_side_s": [343, 450], "order_func_with_bal": 450, "order_funct": 452, "order_valu": 198, "order_works_on_featur": [100, 216], "ordered_metadata": [166, 449, 452], "orderfuncderiv": [331, 333, 334, 337], "orderfunct": [367, 368, 369], "orderfunctiono1": 100, "orderfunctiono1bias": 100, "orderfunctiono2": 100, "orderfunctiono3": 100, "orderfunctiono4": 100, "ordin": [100, 114, 118, 137, 152, 178, 185, 194, 215, 218, 449, 452], "ordinalvar_features_ge_all_split": 118, "ordinalvariablevalu": [100, 115, 116, 117], "ordinari": 449, "ordvar_func": 118, "org_imag": 451, "organ": 449, "orhodox": 449, "orient": [17, 34, 47, 50, 57, 73, 75, 77, 83, 94, 95, 99, 104, 108, 117, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 166, 172, 175, 176, 194, 197, 198, 201, 210, 212, 230, 231, 236, 240, 244, 253, 260, 261, 266, 278, 285, 286, 287, 289, 291, 292, 295, 298, 299, 300, 301, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 323, 324, 346, 448, 449, 450, 452], "orientation1": [212, 294, 312], "orientation2": [212, 294, 312], "orientation_a": [291, 300, 309, 318], "orientation_b": [291, 300, 309, 318], "oriented_feature_ids_for_agr": [47, 73, 198], "orientedsep": [17, 302, 320], "origin": [5, 20, 172, 175, 212, 335, 421, 449, 450, 451, 452], "original_feature_id": [47, 73, 198], "oriya": 449, "oromo": 449, "orthodox": 449, "orthogon": [339, 451], "oslo": 449, "ossetian": 449, "ostschweiz": 449, "ost\u00f6sterreich": 449, "other": [65, 95, 99, 134, 140, 145, 168, 175, 178, 188, 189, 221, 222, 231, 243, 269, 287, 294, 312, 338, 380, 384, 395, 439, 448, 449, 450, 451, 452], "other_end": 64, "otherwis": [94, 95, 96, 97, 98, 99, 119, 122, 125, 128, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 172, 176, 243, 252, 253, 269, 277, 278, 294, 299, 312, 317, 342, 346, 380, 384, 417, 440, 448, 449, 450, 451, 452], "our": [194, 243, 269, 294, 312, 448, 449, 450, 451, 452, 453], "ourselv": [451, 452], "out": [100, 130, 133, 220, 342, 448, 449, 450, 451, 452], "outdat": 449, "outer": 449, "outli": 449, "outlier": 448, "outsid": [403, 449], "over": [448, 449, 450, 451, 452], "overal": [168, 448, 452], "overflow": 449, "overijssel": 449, "overlap": [221, 222, 449], "overleftarrow": 451, "overrightarrow": [448, 451], "overview": [448, 449, 452], "overwhelm": 452, "overwrit": [138, 332, 333, 358, 359, 361, 362, 364, 365], "overwrite_existing_inform": 138, "overwritten": [120, 123, 126, 129, 138, 148, 158, 161, 165, 179, 332, 333, 334, 358, 359, 360, 361, 362, 363, 364, 365, 366], "ovest": 449, "own": [448, 449], "owner": 449, "ownership": 449, "oxfordshir": 449, "p": [339, 400, 401, 448, 449, 450], "p_": 450, "p_1": 450, "p_i": 450, "p_j": 450, "p_n": 450, "pa": 449, "packag": [130, 148, 449], "page": 453, "pai": [449, 452], "paid": 449, "paint": 451, "pair": [35, 247, 248, 259, 272, 273, 284, 297, 304, 315, 322, 331, 335, 369, 400, 401, 448, 450], "pairwis": [348, 354, 451, 452], "pairwise_mutual_inform": 348, "pakistan": 449, "palau": 449, "palestin": 449, "panama": 449, "panda": [120, 123, 126, 129, 130, 131, 138, 139, 147, 150, 151, 154, 155, 158, 161, 165, 168, 176, 191, 449, 452], "panjabi": 449, "paper": [93, 96, 97, 449, 451], "papi": 449, "papua": 449, "par": 450, "paragraph": 448, "paraguai": 449, "parallel": 449, "paramed": 449, "paramet": [398, 448, 449, 450, 451, 452], "parametris": [448, 450], "parent": [2, 7, 17, 22, 60, 418, 423, 448, 449, 450, 451], "parent_id": 450, "parenthes": 450, "parliament": 449, "parna": 449, "part": [131, 168, 194, 441, 448, 449, 450, 451, 452], "parti": [449, 452], "partial": [57, 449, 451], "particip": 452, "participant_r": 452, "particular": [339, 448, 450], "particularli": [449, 450, 451], "partiia": 449, "partit": [127, 224, 343, 344, 345, 348, 349, 350, 402, 448, 449, 450, 451, 452], "partner": 449, "partnership": 449, "pashto": 449, "pass": [445, 448, 450], "patch": 448, "path": [8, 16, 17, 24, 33, 36, 38, 39, 224, 225, 424, 432, 448, 450, 451], "path_from_root_ind": [2, 17, 418, 448, 450, 451], "patria": 449, "patriot": 449, "patru": 449, "patt": 449, "pattern": 448, "pa\u00ed": 449, "pca": [331, 339], "pca_featur": 331, "pd": [119, 122, 125, 128, 135, 137, 138, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 160, 162, 164, 176, 209, 213, 214, 215, 218, 449, 452], "pdd": 449, "pdist": [380, 384, 452], "pdt": 449, "pe": 449, "peak": 450, "peasant": 449, "pedago": 449, "pedagog": 449, "pef": 449, "peloponnes": 449, "penalti": 449, "pension": 449, "pensionist": 449, "pentecost": 449, "peopl": [449, 452], "per": [350, 448, 449, 450], "perfectli": [448, 449, 452], "perform": [332, 333, 337, 358, 359, 361, 362, 364, 365, 449], "period": 450, "persever": 449, "persian": 449, "persist": 449, "person": [0, 449, 453], "perspect": [448, 450], "peru": 449, "pest": 449, "peter": 449, "petit": 449, "pf": 449, "pfalz": 449, "pg": 449, "ph": 449, "pharmaci": 449, "phase": 449, "phd": 449, "phenomenon": 449, "phil": 449, "philippin": 449, "philosophi": 449, "physic": 449, "pi": 449, "picardi": 449, "pick": [437, 442, 452], "picker": [442, 450, 451], "pictur": [448, 451, 452], "piec": [239, 240, 260, 261, 265, 266, 285, 286, 287, 288, 292, 305, 306, 310, 323, 324], "piemont": 449, "pierr": 449, "pilz": 449, "pipelin": 451, "pirat": 449, "pir\u00e1ti": 449, "pitcairn": 449, "piuxel": 450, "pixel": [377, 381, 383, 445, 450, 451], "pixel_coord_distance_graph": 383, "pixel_graph": 450, "pk": 449, "pl": 449, "pl2": 449, "pl21": 449, "pl22": 449, "pl4": 449, "pl41": 449, "pl42": 449, "pl43": 449, "pl5": 449, "pl51": 449, "pl52": 449, "pl6": 449, "pl61": 449, "pl62": 449, "pl63": 449, "pl7": 449, "pl71": 449, "pl72": 449, "pl8": 449, "pl81": 449, "pl82": 449, "pl84": 449, "pl9": 449, "pl91": 449, "pl92": 449, "plai": [448, 450, 452], "plaid": 449, "plane": 448, "plant": 449, "plateau": 450, "platform": 449, "platforma": 449, "plausibl": 452, "pleas": [221, 448, 449, 450, 451], "plot": [410, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 448, 450, 451], "plot_annot": [437, 446, 448, 450], "plot_big5_tangle_matrix": 452, "plot_edge_annot": [435, 452], "plot_factor_weights_by_score_weighted_particip": 452, "plot_letter_sep_exampl": 450, "plot_margin_exampl": 448, "plot_mindset": 452, "plot_nod": [435, 451, 452], "plot_tangle_matrix": 452, "plot_tangle_search_tre": 449, "plot_tot_nod": 451, "plot_tre": [410, 436, 451, 452], "plot_typical_answ": 452, "plotedgeannotationfunc": 435, "plotnodefunc": 435, "plt": [448, 449, 450, 451, 452], "plu": [449, 452], "plurin": 449, "plz": 449, "plzz": 449, "pm": 449, "pn": 449, "png": [450, 451], "pnr": 449, "po": 441, "podkarpacki": 449, "podlaski": 449, "pohjoi": 449, "point": [0, 14, 15, 31, 32, 55, 84, 93, 96, 97, 98, 194, 206, 236, 239, 240, 246, 259, 260, 261, 262, 265, 266, 270, 271, 284, 285, 286, 289, 292, 296, 304, 305, 306, 307, 310, 314, 322, 323, 324, 339, 377, 379, 400, 401, 415, 417, 430, 431, 437, 442, 449, 450, 452, 453], "point_clouds_help": 448, "pointer": [2, 7, 17, 22, 418, 423], "poitou": 449, "poland": 449, "pole": 449, "polic": 449, "polici": 449, "polish": 449, "polit": 449, "poll": 449, "poltava": 449, "poly_point": 450, "polygon": [450, 452], "polygon2mask": 450, "polynesia": 449, "polytechn": 449, "pomorski": 449, "poor": 449, "popgm": 449, "popul": 449, "popular": 449, "porter": 449, "portug": 449, "portugues": 449, "pos_sid": 440, "posit": [221, 222, 236, 246, 262, 271, 289, 296, 307, 314, 338, 339, 349, 397, 401, 407, 411, 417, 435, 436, 439, 440, 441, 445, 449, 450, 451, 452], "possibl": [101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 132, 178, 194, 196, 197, 243, 257, 269, 282, 294, 302, 312, 320, 395, 448, 449, 450, 451, 452], "possible_values_represent": [101, 105, 114, 194], "possibli": [156, 172, 173, 178, 221, 222, 384, 448, 451], "post": [449, 451], "postgradu": 449, "postmaterialist": 449, "postpaid": 449, "potenti": [382, 448, 449, 450, 451, 452], "power": [448, 449, 450, 451, 452], "po\u0142udniowi": 449, "po\u0142udniowo": 449, "ppp": 449, "pr": [449, 452], "practic": [448, 449, 450, 451], "pragmat": 451, "praha": 449, "prai": 449, "praxi": [448, 451], "pre": 449, "precis": [1, 17, 71, 452], "precomput": [99, 377, 380, 384], "predefin": 450, "prefer": [398, 399, 403, 448, 449, 451], "prefix": [175, 449], "preliminari": 449, "premier": 449, "prepaid": 449, "prepar": [100, 130, 450, 452, 453], "preparatori": 449, "preprimari": 449, "preprocess": [347, 407, 408, 409, 450], "presbyterian": 449, "preschool": 449, "presenc": [448, 450], "present": [138, 445, 452], "presid": 449, "press": 449, "prev": 208, "prev_po": 441, "prevent": [167, 449, 451], "previou": [14, 15, 31, 32, 346, 430, 431, 441, 449, 452], "previous": [60, 450, 452], "price": 449, "primair": 449, "primari": [449, 451], "primarili": [448, 449], "princip": [331, 339, 398, 449], "principado": 449, "print": [132, 379, 448, 449, 450, 452], "print_node_label": [410, 435], "printer": 449, "prioriti": 449, "prioritis": [236, 243, 262, 269, 289, 294, 307, 312], "privat": 449, "privolzhski": 449, "pro": 449, "probabl": [340, 449, 452], "problem": [132, 448, 449, 451, 452], "problemat": 448, "proce": [379, 448, 451], "procedur": [370, 371], "proceed": 452, "process": [448, 449, 450, 451, 452], "prod": 450, "produc": 336, "product": 449, "profe": 449, "profess": 449, "profession": 449, "professionnel": 449, "professor": 449, "proffesion": 449, "profil": 452, "profit": 449, "program": 449, "programm": 449, "progress": [81, 166, 173, 221, 222, 228, 233, 234, 449, 450, 451], "progress_callback": [49, 61, 62, 76, 81, 82, 166, 173, 200, 221, 222, 448, 449, 450, 451, 452], "prohibit": [254, 279], "project": [435, 452], "proletariat": 449, "promis": [448, 451], "promot": 449, "proof": [448, 451], "prop": 449, "propaedeut": 449, "properli": [449, 452], "properti": [34, 37, 40, 41, 44, 47, 48, 51, 52, 53, 56, 57, 63, 66, 69, 73, 74, 78, 79, 80, 85, 130, 141, 142, 148, 153, 166, 169, 177, 198, 199, 202, 203, 204, 207, 411, 415, 448, 449, 451, 452], "proport": [97, 441, 450, 451], "propos": [448, 451, 452], "proprietor": 449, "propto": 451, "prosper": 449, "prostitut": 449, "protect": 449, "protest": 449, "protestant": 449, "prototyp": 448, "proud": 449, "provenc": 449, "provid": [73, 100, 130, 144, 166, 173, 221, 222, 243, 269, 294, 312, 445, 448, 449, 450, 451, 452], "provinc": 449, "provincia": 449, "psg": 449, "psyco": 449, "pt": 449, "pt1": 449, "pt11": 449, "pt15": 449, "pt16": 449, "pt17": 449, "pt18": 449, "pt2": 449, "pt20": 449, "pt3": 449, "pt30": 449, "ptp": 449, "ptu": 449, "ptz": 449, "ptzz": 449, "public": 449, "publica": 449, "puerto": 449, "puglia": 449, "pup": 449, "purpl": 451, "purpos": [448, 449, 451, 452], "put": [448, 451, 452], "pw": 449, "pweight": 449, "py": 449, "pyplot": [448, 449, 450, 451, 452], "pyreadstat": [130, 148, 449], "pyr\u00e9n\u00e9": 449, "python": [130, 148, 449], "p\u00f3\u0142nocni": 449, "p\u00f3\u0142nocno": 449, "p\u0101li": 449, "q": [450, 452], "q10": 449, "q100": 449, "q100a": 449, "q101": 449, "q102": 449, "q103": 449, "q104a": 449, "q104b": 449, "q104c": 449, "q104d": 449, "q104e": 449, "q104f": 449, "q104g": 449, "q104h": 449, "q105": 449, "q106": 449, "q107": 449, "q108": 449, "q109": 449, "q11": 449, "q110": 449, "q111": 449, "q11a": 449, "q11b": 449, "q11c": 449, "q11d": 449, "q11e": 449, "q11f": 449, "q12": 449, "q12a": 449, "q12b": 449, "q12c": 449, "q12d": 449, "q12e": 449, "q13": 449, "q13a": 449, "q14": 449, "q15": 449, "q16": 449, "q17": 449, "q18a": 449, "q18b": 449, "q18c": 449, "q18d": 449, "q19": 449, "q1a": 449, "q1b": 449, "q1c": 449, "q1d": 449, "q1e": 449, "q1f": 449, "q2": 449, "q20": 449, "q21": 449, "q22": 449, "q23a": 449, "q23b": 449, "q23c": 449, "q23d": 449, "q23e": 449, "q23f": 449, "q24": 449, "q25a": 449, "q25b": 449, "q25c": 449, "q25d": 449, "q25e": 449, "q25f": 449, "q25g": 449, "q25h": 449, "q26a": 449, "q26b": 449, "q27a": 449, "q27b": 449, "q27c": 449, "q28": 449, "q28a": 449, "q28b": 449, "q28c": 449, "q28d": 449, "q28e": 449, "q28f": 449, "q28g": 449, "q28h": 449, "q28i": 449, "q28j": 449, "q28k": 449, "q29": 449, "q3": 449, "q30a": 449, "q30b": 449, "q30c": 449, "q30d": 449, "q31": 449, "q32a": 449, "q32b": 449, "q32c": 449, "q32d": 449, "q32e": 449, "q33": 449, "q33a": 449, "q34": 449, "q35": 449, "q36": 449, "q37a": 449, "q37b": 449, "q38a": 449, "q38b": 449, "q38c": 449, "q38d": 449, "q38e": 449, "q38f": 449, "q38g": 449, "q38h": 449, "q38i": 449, "q38j": 449, "q38k": 449, "q38l": 449, "q38m": 449, "q38n": 449, "q38o": 449, "q38p": 449, "q38q": 449, "q38r": 449, "q39a": 449, "q39b": 449, "q39c": 449, "q39d": 449, "q39e": 449, "q39f": 449, "q39g": 449, "q39h": 449, "q39i": 449, "q4": 449, "q40": 449, "q41": 449, "q42": 449, "q43a": 449, "q43b": 449, "q43c": 449, "q43d": 449, "q44a": 449, "q44b": 449, "q44c": 449, "q44d": 449, "q44e": 449, "q44f": 449, "q44g": 449, "q44h": 449, "q44i": 449, "q44j": 449, "q44k": 449, "q44l": 449, "q44m": 449, "q44n": 449, "q44o": 449, "q45a": 449, "q45b": 449, "q45c": 449, "q45d": 449, "q45e": 449, "q46": 449, "q47": 449, "q48a": 449, "q48b": 449, "q48c": 449, "q49": 449, "q49a": 449, "q4a": 449, "q4b": 449, "q4c": 449, "q4d": 449, "q4e": 449, "q4f": 449, "q4g": 449, "q4h": 449, "q4i": 449, "q4j": 449, "q4k": 449, "q5": 449, "q50a": 449, "q50b": 449, "q50c": 449, "q50d": 449, "q50e": 449, "q50f": 449, "q50g": 449, "q50h": 449, "q51": 449, "q52a": 449, "q52b": 449, "q52c": 449, "q52d": 449, "q53a": 449, "q53b": 449, "q53c": 449, "q53d": 449, "q53e": 449, "q54a": 449, "q54b": 449, "q54c": 449, "q54d": 449, "q55": 449, "q56": 449, "q56a": 449, "q56b": 449, "q56c": 449, "q56d": 449, "q56e": 449, "q57": 449, "q58a": 449, "q58b": 449, "q58c": 449, "q59a": 449, "q59b": 449, "q59c": 449, "q59d": 449, "q6": 449, "q60a": 449, "q60b": 449, "q60c": 449, "q60d": 449, "q60e": 449, "q61a": 449, "q61b": 449, "q61c": 449, "q61d": 449, "q62a": 449, "q62b": 449, "q62c": 449, "q62d": 449, "q63": 449, "q64": 449, "q65": 449, "q66": 449, "q67": 449, "q68": 449, "q69": 449, "q6a": 449, "q6b": 449, "q6c": 449, "q6d": 449, "q6e": 449, "q6f": 449, "q6g": 449, "q6h": 449, "q6i": 449, "q7": 449, "q70": 449, "q71": 449, "q72": 449, "q73": 449, "q74": 449, "q75": 449, "q76": 449, "q77": 449, "q77a": 449, "q77b": 449, "q78": 449, "q79": 449, "q80": 449, "q81": 449, "q81a": 449, "q81b": 449, "q82": 449, "q83": 449, "q84a": 449, "q85": 449, "q86": 449, "q86a": 449, "q87": 449, "q88": 449, "q88a": 449, "q89": 449, "q89a": 449, "q89b": 449, "q8a": 449, "q8b": 449, "q8c": 449, "q8d": 449, "q8e": 449, "q8f": 449, "q9": 449, "q90": 449, "q91": 449, "q92a": 449, "q93": 449, "q94": 449, "q95": 449, "q96": 449, "q97": 449, "q98": 449, "q99": 449, "q99a": 449, "q99b": 449, "q_": 450, "q_1": 450, "q_i": 450, "q_j": 450, "q_k": 450, "qa": 449, "qab": 449, "qatar": 449, "qax": 449, "qaz": 449, "qba": 449, "qob": 449, "qu": 449, "quadrat": [397, 400, 401, 403, 448, 450, 451], "qualif": 449, "qualit": 448, "qualiti": 449, "quantifi": 448, "quantiz": 450, "quechua": 449, "queri": 448, "question": [120, 123, 126, 129, 130, 133, 136, 137, 138, 141, 144, 146, 147, 148, 149, 150, 152, 153, 155, 158, 161, 165, 168, 172, 173, 176, 178, 187, 214, 215, 287, 448, 449, 451, 452], "questionnair": [287, 449, 452], "questions_select": 452, "questionselector": [119, 122, 125, 128, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176], "quick": [449, 452], "quickli": [449, 452], "quiet": 452, "quit": [448, 449, 450, 451, 452], "r": [439, 440, 441, 449, 450, 451, 452, 453], "r_": 450, "race": 449, "radar": 452, "radar_factori": 452, "radar_plot": 452, "radar_plot_util": 452, "radic": 449, "radio": 449, "raeto": 449, "ram": 449, "random": [448, 451], "random_featur": 331, "randomli": [331, 340], "rang": [100, 118, 119, 122, 125, 128, 135, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 211, 214, 215, 218, 249, 258, 274, 283, 303, 321, 379, 400, 401, 442, 448, 449, 450, 451, 453], "rank": 449, "rare": 448, "rate": 453, "rather": [449, 451], "rating_interval_util": 452, "ratio": 449, "ratiocut": [216, 220, 357, 369], "ratiocut_ord": 357, "ratiocutord": [357, 365, 366], "raw": [178, 179, 180, 182, 190, 192, 449, 451], "re": [449, 450], "read": [449, 450, 451, 452, 453], "read_lett": 450, "read_sav": 449, "readabl": 449, "readi": [448, 452], "real": [331, 338, 448, 449], "realis": 450, "realist": [449, 451], "realist\u00e9": 449, "realiti": 450, "realiz": 450, "realli": [384, 448, 449, 451, 452], "realskol": 449, "reason": [448, 449, 450, 451, 452], "rebuild": 448, "recal": 452, "recap": 450, "receiv": 449, "recent": 448, "recod": 449, "recogn": [448, 449, 452], "recognis": 452, "recommend": [218, 449, 451, 452], "record": 449, "recreat": 449, "rectangl": 448, "rectilinear": 435, "recursionlog": 392, "red": [448, 449, 450, 452], "redo": 452, "redraw": [442, 443, 444], "reduc": [146, 147, 448, 449, 451], "reduced_tangl": [66, 451], "reduced_tangle_mat": 223, "refer": [0, 131, 166, 173, 221, 222], "refin": [448, 451, 452], "reflect": [448, 449, 452], "reform": 449, "refus": 449, "regard": [339, 448], "regio": 449, "region": [448, 449, 450, 451], "regiona": 449, "regionalni": 449, "regist": [449, 452], "regi\u00e3o": 449, "regi\u00f3n": 449, "regular": [214, 215, 448], "regularli": 118, "rel": [59, 448, 452], "relabel": 411, "relat": [448, 449, 450, 451, 452], "relationship": [448, 449, 450], "relax": 452, "relev": 448, "religi": 449, "religion": 449, "remain": [194, 342, 448, 449, 450, 451, 452], "remark": 452, "rememb": [448, 452], "remind": 448, "remov": [2, 7, 17, 22, 29, 60, 175, 176, 231, 335, 338, 383, 418, 423, 448, 449, 450, 451], "remove_duplicate_row": 175, "remove_prefixing_tangl": 175, "remove_rows_with_zero_std": 452, "renaiss": 449, "render": 448, "renew": 449, "reorgan": 449, "repeat": [448, 449, 451], "repeatedli": [236, 257, 262, 282, 289, 302, 307, 320], "replac": [2, 6, 17, 21, 103, 107, 116, 130, 143, 144, 148, 151, 168, 172, 176, 178, 188, 189, 196, 346, 418, 422, 448, 449, 452], "replace_valu": 178, "replace_variable_valu": [130, 452], "replace_variable_value_label": 130, "repositori": [449, 452], "repres": [17, 34, 97, 99, 100, 101, 102, 105, 106, 114, 115, 130, 194, 195, 239, 240, 243, 260, 261, 265, 266, 269, 285, 286, 292, 294, 305, 306, 310, 312, 323, 324, 338, 349, 350, 381, 395, 397, 398, 411, 414, 448, 449, 450, 451, 452], "represent": [101, 103, 105, 107, 114, 116, 168, 194, 196, 410, 411, 448, 450, 451], "republ": 449, "republica": 449, "republicain": 449, "republican": 449, "republika": 449, "requalif": 449, "request": 450, "requir": [346, 448, 449, 450], "research": 449, "reshap": [448, 450, 451], "resort": 451, "respect": [178, 179, 221, 222, 448, 449, 452], "respon": 449, "respond": [120, 121, 123, 126, 127, 129, 130, 133, 136, 142, 147, 153, 158, 161, 165, 168, 214, 215, 218, 449], "respons": [229, 230, 410, 411, 449, 452], "respresent": 170, "restaur": 449, "restor": 450, "restrict": 449, "result": [34, 60, 81, 82, 83, 100, 139, 147, 155, 168, 172, 174, 176, 212, 221, 222, 244, 257, 282, 295, 302, 313, 320, 341, 351, 353, 356, 383, 384, 394, 442, 448, 449, 450, 451, 452], "resurrect": 449, "retail": 449, "retain": [144, 188], "retir": 449, "retire": 449, "retrain": 449, "retriev": [130, 131], "return": [1, 2, 17, 34, 47, 57, 64, 66, 71, 73, 88, 100, 101, 103, 105, 107, 114, 116, 130, 148, 166, 178, 193, 194, 196, 198, 236, 262, 289, 307, 332, 334, 357, 358, 360, 361, 363, 364, 366, 377, 418, 435, 448, 449, 450, 451, 452], "return_center_assign": 448, "return_eigenvector": [341, 451], "return_id": 35, "return_label": 452, "return_metadata": 175, "return_nod": 45, "return_sep_info": [260, 261, 285, 286, 305, 306, 323, 324], "return_spars": [378, 382], "reveal": 452, "revers": [441, 452], "reviv": 449, "revolutionari": 449, "reykjavik": 449, "rgb2grai": 451, "rheinhessen": 449, "rheinland": 449, "rh\u00f4ne": 449, "rica": 449, "rich": [449, 450, 451, 452], "richard": [377, 382], "rico": 449, "rid": 448, "right": [2, 6, 13, 15, 17, 21, 30, 32, 34, 225, 398, 418, 422, 429, 431, 448, 449, 450, 451, 452, 453], "right_child": [2, 17, 418], "rightarrow": [448, 450, 451], "rightist": 449, "rilski": 449, "rioja": 449, "rise": 449, "rivn": 449, "rm": 449, "rn": 449, "ro": 449, "ro1": 449, "ro11": 449, "ro12": 449, "ro2": 449, "ro21": 449, "ro22": 449, "ro3": 449, "ro31": 449, "ro32": 449, "ro4": 449, "ro41": 449, "ro42": 449, "robust": 450, "rodina": 449, "rogaland": 449, "roma": 449, "romagna": 449, "roman": [449, 450], "romanc": 449, "romania": 449, "romanian": 449, "root": [1, 2, 5, 8, 11, 13, 16, 17, 20, 24, 27, 30, 33, 34, 43, 44, 59, 223, 415, 418, 421, 424, 427, 429, 432, 448, 450], "rotat": [448, 452], "rough": 452, "roughli": 452, "round": 448, "roussillon": 449, "routin": 449, "row": [16, 33, 55, 73, 83, 84, 130, 133, 136, 147, 168, 173, 175, 178, 191, 206, 257, 282, 302, 320, 326, 327, 328, 330, 336, 350, 351, 353, 377, 378, 382, 395, 398, 432, 449, 450, 452], "row_label": [386, 387], "row_select": 147, "rowselector": 147, "roz": 449, "rozz": 449, "rp": 449, "rs1": 449, "rs11": 449, "rs12": 449, "rs2": 449, "rs21": 449, "rs22": 449, "rsz": 449, "rszz": 449, "ru": 449, "ru1": 449, "ru11": 449, "ru2": 449, "ru21": 449, "ru3": 449, "ru31": 449, "ru4": 449, "ru41": 449, "ru5": 449, "ru51": 449, "ru6": 449, "ru61": 449, "ru7": 449, "ru71": 449, "ru8": 449, "ru81": 449, "rule": [449, 452], "ruler": 449, "rumanian": 449, "run": [448, 449, 450, 451], "rup": 449, "russia": 449, "russian": 449, "rutland": 449, "rw": 449, "rwanda": 449, "r\u00e9gion": 449, "r\u00e9union": 449, "s_": [448, 451, 452], "s_0": 448, "s_1": [448, 451, 452], "s_2": [448, 451, 452], "s_3": [451, 452], "s_4": 452, "s_ax": 448, "s_i": [448, 452], "s_n": 448, "s_order": 450, "s_spec": 451, "sa": 449, "saarland": 449, "saatli": 449, "sab": 449, "saba": 449, "sabirabad": 449, "sachsen": 449, "sahara": 449, "sai": [448, 449, 450, 452], "said": [385, 395, 448], "saint": 449, "sak": 449, "sal": 449, "sale": 449, "salient": 450, "salvador": 449, "salvat": 449, "salyan": 449, "salzburg": 449, "same": [16, 17, 19, 23, 33, 37, 60, 83, 139, 144, 175, 212, 214, 215, 230, 231, 243, 257, 269, 282, 287, 288, 294, 302, 312, 320, 332, 334, 346, 358, 360, 361, 363, 364, 366, 390, 391, 394, 409, 432, 439, 448, 449, 450, 451, 452], "sami": 449, "samoa": 449, "samoan": 449, "sampl": 449, "samukh": 449, "san": 449, "sandwich": 449, "sango": 449, "sanskrit": 449, "sao": 449, "sardegna": 449, "sardinian": 449, "sat": 449, "satisfact": 449, "satisfi": [448, 449, 450], "satisfyingli": 448, "saudi": 449, "sav": 449, "sava": 449, "save": [34, 38, 130, 243, 269, 287, 294, 312, 449], "saw": 452, "sb": 449, "sbn": 449, "sc": 449, "scale": [148, 379, 436, 445, 448, 449, 451, 452], "scarc": 449, "scatter": 448, "scenario": 452, "schedul": 452, "scheme": 448, "schleswig": 449, "school": 449, "schoool": 449, "schwaben": 449, "scienc": 449, "scientif": 449, "scikit": 450, "scilli": 449, "scipi": [166, 173, 261, 286, 306, 324, 372, 376, 378, 379, 380, 384, 448, 449, 450, 452], "scope": [448, 449], "score": [47, 55, 73, 84, 93, 97, 98, 198, 206, 339, 450, 451, 452], "scores_al": 450, "scotland": 449, "scottish": 449, "scratch": 449, "scroll": 449, "scrollabl": 449, "sd": 449, "sda": 449, "sdam": 449, "sdp": 449, "se": 449, "se1": 449, "se11": 449, "se12": 449, "se2": 449, "se21": 449, "se22": 449, "se23": 449, "se3": 449, "se31": 449, "se32": 449, "se33": 449, "seamstress": 449, "search": [1, 10, 17, 26, 34, 37, 38, 40, 41, 42, 43, 47, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 71, 73, 76, 79, 81, 82, 83, 84, 85, 100, 166, 167, 170, 172, 175, 198, 200, 203, 206, 207, 221, 222, 224, 225, 226, 230, 233, 234, 331, 336, 337, 346, 355, 370, 371, 415, 426, 435, 448, 449, 450, 451], "search_cent": [435, 451], "search_object": [47, 73, 198], "search_tangl": [100, 448], "search_tangles_uncross": [100, 221], "search_tre": 34, "sec": 449, "second": [35, 119, 120, 122, 123, 125, 126, 128, 129, 153, 157, 158, 160, 161, 164, 165, 168, 175, 176, 209, 213, 214, 215, 218, 238, 239, 240, 243, 251, 254, 255, 256, 264, 265, 266, 269, 276, 279, 280, 281, 291, 292, 294, 298, 300, 301, 309, 310, 312, 316, 318, 319, 336, 441, 448, 449, 450, 451], "secondari": 449, "secondli": 452, "secretari": 449, "section": [214, 215, 448, 449, 450, 452], "sector": 449, "secundari": 449, "secur": 449, "see": [118, 148, 166, 173, 216, 220, 221, 222, 244, 295, 313, 338, 380, 384, 395, 398, 435, 442, 445, 448, 449, 450, 451, 452], "seed": 448, "seem": [448, 449, 450, 451, 452], "seen": [101, 103, 105, 107, 114, 116, 194, 196, 448, 449, 450], "segment": [450, 451], "sel": 448, "sel_callback": 442, "sel_i": [443, 451], "sel_x": [443, 451], "sel_xi": 451, "seldom": 452, "select": [130, 131, 135, 139, 144, 149, 150, 151, 155, 211, 370, 371, 442, 443, 450, 451, 453], "select_quest": [130, 449, 452], "select_respond": [130, 449], "select_row": 449, "selected_i": 442, "selected_x": 442, "selector": 449, "self": 449, "selfempl": 449, "semant": [450, 451], "semantictextterm": 395, "semest": 449, "semi": 449, "semiskil": 449, "seneg": 449, "senior": 449, "sens": [168, 339, 448, 449, 450, 451, 452], "sensibl": 450, "sep": [39, 92, 175, 253, 260, 261, 278, 285, 286, 294, 299, 302, 305, 306, 312, 317, 320, 323, 324, 327, 328, 330, 360, 363, 366, 399, 403, 438, 441, 448], "sep_id": [34, 57, 64, 71, 198, 223, 231, 236, 244, 246, 247, 258, 259, 262, 272, 283, 289, 290, 294, 295, 296, 297, 303, 304, 307, 308, 312, 313, 314, 315, 321, 322, 448, 450, 451], "sep_id_1": [301, 319], "sep_id_2": [301, 319], "sep_id_a": [289, 291, 298, 300, 307, 309, 316, 318], "sep_id_b": [289, 291, 298, 300, 307, 309, 316, 318], "sep_idx": [64, 223, 450], "sep_metadata": [104, 108, 117, 197, 221, 222], "sep_orient": [104, 108, 117, 197], "sep_si": [47, 73, 87, 89, 90, 92, 198, 325, 448, 450, 451, 452], "sep_to_term": [385, 393], "separ": [1, 17, 34, 35, 40, 44, 45, 47, 48, 50, 51, 53, 54, 57, 58, 60, 73, 74, 75, 77, 78, 80, 83, 92, 94, 95, 99, 100, 104, 108, 117, 119, 120, 121, 122, 123, 125, 126, 128, 129, 156, 157, 158, 159, 160, 161, 164, 165, 166, 169, 170, 172, 173, 175, 176, 194, 197, 198, 199, 201, 202, 204, 205, 210, 211, 212, 217, 221, 222, 230, 231, 236, 240, 242, 243, 244, 246, 247, 253, 257, 258, 259, 260, 261, 262, 266, 268, 269, 271, 272, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 367, 368, 369, 398, 400, 401, 448, 449, 450, 451, 452], "separation_metadata": [236, 262, 289, 307], "seps_atom": 329, "seps_to_atom": 326, "sequenc": [247, 272, 297, 315], "sequenti": [378, 382, 449], "serb": 449, "serbia": 449, "serbian": 449, "serbo": 449, "seri": [119, 120, 122, 123, 125, 126, 128, 129, 135, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 165, 176, 209, 213, 214, 215, 218, 219], "serif": 450, "serv": 448, "servant": 449, "servic": 449, "set": [1, 2, 14, 15, 17, 31, 32, 34, 39, 45, 54, 59, 66, 70, 75, 100, 101, 105, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 178, 190, 205, 212, 216, 217, 224, 226, 260, 261, 270, 285, 286, 305, 306, 323, 324, 326, 327, 328, 336, 338, 339, 340, 370, 371, 378, 398, 400, 401, 418, 430, 431, 435, 442, 443, 448, 449, 450, 451, 452], "set_anchor": 450, "set_aspect": 451, "set_factoryfunc": 159, "set_label": 66, "set_left_child": [2, 17, 418], "set_opt": 449, "set_properti": 449, "set_pyreadstat_meta_data": [130, 449], "set_right_child": [2, 17, 418], "set_table_styl": 449, "set_tick": 448, "set_ticklabel": 448, "set_titl": [448, 450, 451, 452], "set_uncrossing_strategy_only_most_balanced_corn": 451, "set_valid_and_invalid_variable_valu": 130, "set_valu": 178, "set_value_label": 178, "set_variable_label": [130, 452], "set_variable_nam": [130, 452], "set_variable_typ": [130, 449, 452], "set_vis": [448, 451], "set_xlim": [448, 450, 451], "set_xtick": 452, "set_ylabel": 448, "set_ylim": [448, 450, 451], "setminu": 448, "setseparationorderfunct": [73, 166, 173, 211, 212, 216, 221, 222], "setseparationsystem": [89, 169, 198, 210, 211, 221, 222, 235, 236, 260, 261, 262, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 323, 324], "setseparationsystembas": [73, 92, 170, 198, 211, 221, 222, 235, 260, 261, 285, 286, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "setseparationsystemorderfunc": [235, 346], "setup": 452, "seven": 448, "seventh": 449, "sever": 449, "severen": 449, "severna": 449, "severoiztochen": 449, "severov\u00fdchod": 449, "severozapaden": 449, "severoz\u00e1pad": 449, "sex": 449, "seychel": 449, "sez": 449, "sezz": 449, "sg": 449, "sh": 449, "shabran": 449, "shamkir": 449, "shape": [16, 33, 119, 120, 122, 123, 125, 126, 128, 129, 130, 133, 136, 157, 158, 160, 161, 164, 165, 237, 239, 240, 252, 253, 260, 261, 263, 265, 266, 277, 278, 285, 286, 290, 292, 299, 305, 306, 308, 310, 317, 323, 324, 327, 332, 334, 339, 349, 354, 358, 360, 361, 363, 364, 366, 378, 381, 398, 399, 402, 403, 432, 448, 450, 451, 452], "share": [448, 449], "sharii": 449, "shatter": 448, "she": 449, "shed": 450, "sheet": 449, "sheki": 449, "shemakha": 449, "shia": 449, "shield": 449, "shift": [398, 399, 403], "shirk": 452, "shirvan": 449, "shona": 449, "shop": 449, "short": [448, 449], "shortcut": 339, "shorter": 449, "shortli": [448, 450], "should": [61, 73, 75, 81, 88, 132, 137, 147, 148, 175, 221, 222, 239, 240, 260, 261, 265, 266, 285, 286, 292, 305, 306, 310, 323, 324, 370, 371, 411, 448, 449, 450, 452], "show": [137, 138, 144, 146, 147, 148, 149, 152, 442, 445, 448, 449, 450, 451, 452], "show_idx": 451, "show_info_while_run": [233, 448, 450, 451], "show_level": 451, "showcas": 449, "shown": [448, 450, 452], "shropshir": 449, "si": 449, "si0": 449, "si03": 449, "si04": 449, "siberian": 449, "sichuan": 449, "sicilia": 449, "sick": 449, "side": [2, 13, 17, 30, 100, 121, 217, 221, 222, 224, 236, 246, 259, 262, 271, 284, 289, 296, 304, 307, 314, 322, 336, 338, 342, 348, 349, 368, 369, 400, 401, 417, 418, 429, 438, 439, 440, 441, 449, 450, 451], "side_count": [236, 262, 289, 307], "sidmennt": 449, "sierra": 449, "sigma": [113, 367, 448, 452], "sigma_c": 383, "sigma_d": 383, "sign": [449, 450, 451], "signal": 450, "signific": [398, 448, 451], "significantli": 448, "sii": 449, "sikh": 449, "silli": 450, "sim": 451, "sim_im": 451, "sim_matrix": 448, "sim_thresh": [378, 379, 382], "similar": [166, 173, 216, 355, 378, 379, 380, 381, 382, 383, 384, 397, 400, 401, 449, 450, 452, 453], "similarity_matrix": [166, 173, 452], "similarli": 448, "simpl": [100, 118, 121, 124, 127, 213, 450, 452, 453], "simple_unique_value_featur": 219, "simpleprogresscallback": 232, "simpler": [232, 234], "simplest": [448, 450, 451], "simplesurveyfeaturefactori": [100, 119, 120, 163, 452], "simplesurveyfeaturefactorymissingvaluesbothsid": [100, 122, 123], "simplesurveyfeaturefactorymissingvaluesimplicit": [100, 125, 126], "simplesurveyfeaturefactorymissingvaluesownfeatur": [100, 128, 129], "simpli": [60, 243, 269, 294, 312, 397, 401, 448, 449, 450, 451, 452], "simplic": [448, 449, 450, 451], "simplifi": [257, 282, 302, 320, 385, 452], "simultan": 449, "sinc": [417, 452], "sindhi": 449, "singapor": 449, "singl": [139, 152, 340, 348, 350, 448, 449, 450, 451, 452], "single_col": 452, "single_col_data": [209, 213, 214, 215, 218, 219], "singular": [397, 398], "sinhales": 449, "sint": 449, "siops08": 449, "situat": [448, 449, 450, 451], "six": [449, 452], "siyazan": 449, "siz": 449, "size": [57, 73, 100, 211, 212, 214, 215, 221, 222, 230, 246, 248, 250, 259, 271, 273, 275, 284, 296, 304, 314, 322, 340, 370, 371, 378, 379, 382, 400, 401, 435, 439, 440, 441, 445, 448, 449, 450, 451, 452], "sizz": 449, "sj": 449, "sj\u00e6lland": 449, "sk": 449, "sk0": 449, "sk01": 449, "sk02": 449, "sk03": 449, "sk04": 449, "skill": 449, "skimag": [450, 451], "skip": [448, 450], "skr": 449, "skz": 449, "skzz": 449, "sl": 449, "slavic": 449, "slavonia": 449, "slice": [95, 130, 131], "slight": [448, 449, 451], "slightli": [448, 449, 450, 452], "slope": 450, "slovak": 449, "slovakia": 449, "slovakian": 449, "sloven": 449, "slovenia": 449, "slovenian": 449, "slovenija": 449, "slovensko": 449, "slower": [378, 449], "slowli": 451, "sluha": 449, "sm": 449, "small": [100, 163, 213, 339, 342, 378, 435, 448, 449, 450, 451, 452], "smaller": [75, 194, 211, 212, 338, 342, 378, 384, 403, 448, 450, 451, 452], "smallest": [94, 95, 218, 370, 371, 448, 450, 451], "smart": 449, "smc": 449, "smi": 449, "smx": 449, "sm\u00e1rakirkja": 449, "sm\u00e5land": 449, "sn": 449, "so": [73, 101, 103, 105, 107, 114, 116, 134, 194, 196, 384, 417, 435, 448, 449, 450, 451, 452], "social": 449, "socialdemocrat": 449, "socialist": 449, "societi": 449, "soft": [93, 97, 449, 450, 452, 453], "soft_clustering_tuebingen": [93, 452], "soft_max": 452, "soft_max_sc": 452, "soft_maxed_scor": 452, "softwar": [448, 450, 453], "sole": [448, 452], "solid": 449, "solidar": 449, "solidarnist": 449, "solomon": 449, "solv": 448, "somali": 449, "somalia": 449, "some": [57, 73, 130, 154, 178, 194, 254, 279, 397, 400, 448, 449, 450, 451, 452], "some_quest": 449, "some_tree_nod": 435, "somehow": [448, 450], "someon": [449, 452], "somerset": 449, "someth": [139, 377, 384, 448, 449, 451], "sometim": [448, 449], "somewhat": [449, 452], "soon": [449, 450], "sophist": 451, "sort": [16, 33, 144, 166, 172, 174, 231, 346, 432, 448, 449, 450, 451, 452], "sostin\u0117": 449, "sotho": 449, "sourc": 448, "south": 449, "southern": 449, "soviet": 449, "sp": [449, 450], "space": [448, 449], "spain": 449, "spanish": 449, "sparrai": 372, "spars": [166, 173, 236, 261, 262, 286, 289, 306, 307, 324, 326, 327, 336, 341, 342, 356, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 399, 400, 401, 403, 448, 450, 452], "sparse_mat": [400, 401, 448], "sparsiti": 452, "spatial": [380, 384, 448, 450, 451, 452], "spawn": [450, 451], "spd": 449, "speak": 449, "speci": 449, "special": [384, 449], "specialis": [103, 107, 116, 196, 449], "specialist": 449, "specif": [101, 103, 104, 105, 107, 108, 114, 116, 117, 139, 166, 168, 175, 194, 196, 197, 238, 243, 244, 251, 252, 254, 264, 269, 270, 276, 277, 279, 294, 312, 448, 449, 450, 451, 452], "specifi": [1, 12, 28, 34, 36, 39, 43, 45, 47, 49, 54, 57, 59, 60, 61, 73, 76, 81, 104, 108, 117, 118, 119, 121, 122, 124, 125, 127, 128, 130, 147, 152, 156, 157, 159, 160, 163, 164, 166, 168, 172, 174, 175, 176, 194, 197, 198, 200, 205, 224, 225, 227, 236, 254, 262, 270, 279, 289, 300, 307, 318, 331, 337, 338, 346, 406, 407, 408, 409, 411, 413, 414, 428, 442, 445, 448, 449, 450, 451, 452], "specification1": [243, 269], "specification2": [243, 269], "specification_a": [238, 254, 256, 264, 279, 281], "specification_b": [238, 254, 256, 264, 279, 281], "specified_featur": 166, "spectral": [331, 341, 342, 451], "spectral_bipartit": 342, "spectral_featur": [331, 451], "spectral_features_split": 331, "speech": 449, "spend": [451, 452], "spent": 449, "spirit": 449, "split": [100, 118, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 214, 215, 218, 331, 342, 349, 441, 448, 449, 450, 451, 452], "split_at_median": 452, "splitgraph": [437, 439, 440, 441], "spm": 449, "spmatrix": [113, 166, 173, 341, 342, 356, 358, 361, 364, 372, 376, 399, 403, 404, 405], "spo": 449, "spontan": 449, "spontani": 449, "sport": 449, "spot": 450, "spous": 449, "sprase": 383, "spread": 383, "spss": 449, "sp\u00f6": 449, "sq": 449, "squar": [381, 402], "squareform": [380, 384], "sr": 449, "srbija": 449, "srbije": 449, "src": 452, "sri": 449, "srpska": 449, "ss": 449, "st": 449, "stabl": 451, "stack": 441, "staffordshir": 449, "stage": 449, "stai": [130, 233, 448], "stan": 449, "standard": [57, 73, 100, 216, 406, 448, 449, 450, 452], "standardize_r": 452, "star": [346, 449, 452], "start": [2, 5, 6, 17, 20, 21, 57, 59, 95, 140, 145, 166, 167, 170, 175, 331, 337, 370, 371, 418, 421, 422, 448, 449, 450, 451, 452], "start_neighborhood": [370, 371], "start_nod": 59, "starting_featur": [331, 337], "stata": 449, "state": [449, 450, 451], "statement": [449, 452], "static": [16, 33, 38, 102, 106, 115, 140, 171, 178, 187, 195, 432, 449], "stationari": 449, "statist": 449, "statu": 449, "steadi": 449, "steiermark": 449, "step": [58, 60, 221, 337, 346, 370, 371, 382, 448, 449, 450, 451, 452], "sterea": 449, "still": [448, 449, 450, 451, 452], "stockholm": 449, "stop": [225, 452], "storag": 448, "store": [171, 241, 242, 267, 268, 293, 311, 448, 449, 450], "sto\u0142eczni": 449, "str": [36, 38, 39, 42, 55, 84, 102, 106, 115, 119, 122, 125, 128, 135, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 160, 162, 164, 171, 173, 176, 178, 187, 195, 206, 209, 216, 220, 257, 282, 302, 320, 338, 380, 381, 384, 386, 387, 389, 393, 411, 413, 414, 416, 435, 442, 445, 452], "straight": [448, 450, 451], "straightforward": 452, "strain": 449, "strang": 452, "stranger": 452, "strategi": [448, 449, 451], "stredn\u00e9": 449, "street": 449, "stress": 452, "strict": 451, "strida": 449, "strike": 449, "string": [70, 102, 106, 115, 138, 139, 148, 152, 178, 186, 187, 195, 411, 445, 452], "strong": [338, 449, 451, 452], "stronger": 452, "strongli": [449, 451], "structur": [130, 151, 448, 449, 450, 451, 453], "struggl": 449, "stud": 449, "student": 449, "studi": 449, "studyno": 449, "studynoc": 449, "stuff": [243, 257, 269, 282, 294, 302, 312, 320, 448, 450], "stuttgart": 449, "style": [215, 449], "styled_bar_plot": 452, "styled_df": 449, "st\u0159edn\u00ed": 449, "su": 449, "sub": [120, 123, 126, 129, 158, 161, 165, 398, 399, 403, 448, 449, 450], "subclass": [103, 107, 116, 178, 193, 196], "submodular": [346, 403, 451, 452], "suboptim": 448, "subpath": 225, "subplot": [448, 450, 451, 452], "subsampl": 449, "subset": [100, 101, 105, 114, 119, 122, 125, 128, 130, 131, 135, 137, 138, 139, 143, 144, 146, 147, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 211, 214, 215, 218, 224, 226, 227, 236, 256, 262, 281, 336, 448, 449, 450, 451, 452], "subseteq": [448, 451], "subsid": 449, "subsist": 449, "substack": 451, "substructur": [448, 450], "subtli": 450, "subtract": [406, 407], "subtre": [2, 5, 6, 17, 20, 21, 417, 418, 421, 422, 448, 450, 452], "success": 448, "successor": 411, "sud": 449, "sudan": 449, "suffer": 449, "suffici": [451, 452], "suhh": 449, "suicid": 449, "suit": 451, "suitabl": 346, "sum": [367, 368, 369, 383, 391, 448, 450, 451, 452], "sum_": [451, 452], "sumgait": 449, "sumi": 449, "summar": [130, 448, 449], "summari": [130, 154, 453], "sun": 449, "sundanes": 449, "sunni": 449, "suomi": 449, "sup": 451, "superior": 449, "supermodular": [398, 399, 403], "superpixel": 450, "superset": 231, "supervis": 449, "supervisor": 449, "supervisori": 449, "supplementari": 449, "support": [216, 220, 448, 449], "suppos": [448, 450], "suppress_check_var_warn": [137, 138, 144, 146, 147, 148, 149, 152, 449, 452], "supremum": 451, "suptitl": [448, 450], "sur": 449, "sure": [130, 178, 449, 450], "surfac": 449, "surinam": 449, "surpris": 452, "surprisingli": 451, "surrei": 449, "survei": [0, 100, 101, 105, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 170, 173, 176, 178, 179, 190, 194, 215, 453], "surveil": 449, "survey_feature_factori": 173, "survey_n": 452, "survey_tangles_visu": 449, "survey_vari": 138, "surveyfeaturefactori": [100, 121, 127, 157, 158, 159, 163, 173, 452], "surveyfeaturefactorycherrypick": [100, 160, 161, 162], "surveyfeaturefactorydecor": [100, 164, 165], "surveytangl": [100, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 449, 452], "surveyvari": [100, 101, 105, 114, 119, 120, 122, 123, 125, 126, 128, 129, 135, 137, 138, 139, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 165, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "surveyvariablevalu": [100, 101, 105, 114, 178, 181, 193, 195, 196, 197], "suspect": 452, "sussex": 449, "sv": 449, "svalbard": 449, "svd_arg": 398, "sverig": 449, "svm": 449, "svoboda": 449, "svobodn\u00ed": 449, "svp": 449, "svq": 449, "sw": 449, "swahili": 449, "swati": 449, "swaziland": 449, "sweden": 449, "swedish": 449, "sweep": [39, 45, 54, 75, 100, 166, 167, 198, 205, 450, 452], "sweep_below": [49, 57, 73, 76, 200, 450], "sweep_on": [57, 73], "swing": 452, "swiss": 449, "switzerland": 449, "sx": 449, "sy": [346, 449], "syddanmark": 449, "sydsverig": 449, "syla": 449, "symbol": 452, "symmetr": 452, "symmetri": 452, "sympath": 452, "sync": 449, "synchron": 130, "syrian": 449, "sys_ord": 346, "system": [1, 47, 53, 73, 80, 92, 96, 97, 98, 100, 166, 169, 198, 204, 211, 221, 226, 227, 236, 238, 239, 240, 244, 245, 251, 252, 253, 260, 261, 262, 264, 265, 266, 276, 277, 278, 285, 286, 289, 291, 292, 295, 298, 299, 305, 306, 307, 309, 310, 313, 316, 317, 323, 324, 339, 346, 417, 449, 450, 451], "sz": 449, "sz\u0161": 449, "s\u00f6dra": 449, "s\u00f8r": 449, "s\u00fcd\u00f6sterreich": 449, "t": [124, 137, 138, 144, 146, 147, 148, 149, 152, 331, 336, 339, 397, 398, 399, 403, 441, 448, 449, 450, 451, 452], "t_mat": 450, "ta": 449, "tab": 452, "tabl": [449, 452], "tag": 452, "tagalog": 449, "tahitian": 449, "tail": 449, "taiwan": 449, "tajik": 449, "tajikistan": 449, "take": [2, 13, 17, 30, 57, 100, 101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 121, 124, 127, 194, 196, 197, 213, 215, 218, 225, 236, 238, 254, 256, 257, 262, 264, 279, 281, 282, 289, 302, 307, 320, 343, 344, 345, 370, 371, 379, 380, 384, 400, 401, 418, 429, 435, 442, 446, 448, 449, 450, 451, 452], "taken": [34, 45, 119, 122, 125, 128, 135, 137, 138, 143, 144, 146, 149, 150, 151, 152, 154, 155, 157, 160, 164, 176, 226, 370, 371, 400, 401, 450, 451], "talent": 449, "talk": 452, "tamil": 449, "tangl": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 47, 49, 54, 55, 56, 57, 58, 59, 60, 64, 66, 71, 73, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 105, 109, 110, 111, 112, 113, 114, 118, 121, 124, 127, 130, 132, 138, 156, 159, 163, 166, 167, 170, 172, 173, 174, 175, 176, 178, 194, 198, 200, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 233, 234, 236, 262, 287, 289, 307, 325, 327, 328, 329, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 358, 361, 364, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 418, 433, 434, 435, 436, 438, 442, 445, 446, 447, 453], "tangle_idx": [66, 451, 452], "tangle_mat": [83, 450], "tangle_matrix": [34, 47, 73, 94, 95, 96, 97, 98, 99, 166, 198, 450, 451, 452], "tangle_scor": [47, 73, 93, 198, 448, 450, 451], "tanglesearchprogresstyp": 81, "tanglesearchtre": [1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 57, 63, 73, 85, 167, 205, 225, 226, 449], "tanglesearchwidget": [1, 48, 49, 50, 51, 52, 53, 54, 55, 56], "tanglesweep": [1, 49, 58, 59, 60, 61, 62, 63, 73, 76, 85, 200, 346, 448, 449, 450], "tanglesweepfeaturesi": [100, 166, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221], "tanzania": 449, "task": [167, 448, 449, 450], "tatar": 449, "tau": [448, 450], "tax": 449, "tc": 449, "tcc": 449, "td": 449, "te": [449, 450], "teach": 449, "teacher": 449, "tec": 449, "techn": 449, "technic": [448, 449, 452], "technician": 449, "technikum": 449, "techniqu": [448, 449, 452], "technolog": 449, "technologi": 449, "tee": 449, "tehnic": 449, "televis": 449, "tell": [395, 452], "telugu": 449, "ten": [450, 452], "tend": 448, "tendenc": [451, 452], "term": [257, 282, 302, 320, 385, 390, 391, 396, 449, 452], "terma": [390, 391], "termb": [390, 391], "terminologi": 452, "ternopil": 449, "territori": 449, "terror": 449, "tertiari": 449, "test": [448, 449], "text": [130, 150, 168, 172, 176, 178, 389, 396, 437, 445, 448, 449, 450, 451], "textterm": [385, 396], "tf": 449, "tg": 449, "th": [34, 36, 172, 221, 270, 448, 449, 452], "thai": 449, "thailand": 449, "than": [17, 37, 43, 45, 59, 60, 75, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 194, 211, 212, 221, 222, 224, 230, 236, 254, 262, 279, 289, 300, 307, 318, 338, 342, 346, 378, 379, 384, 400, 401, 411, 448, 449, 450, 451, 452], "thankfulli": 448, "thecnolog": 449, "thei": [35, 60, 168, 255, 260, 261, 280, 285, 286, 305, 306, 323, 324, 400, 401, 417, 448, 449, 450, 451, 452], "them": [210, 211, 384, 448, 449, 450, 452], "themselv": [385, 395, 453], "theorem": 451, "theoret": [449, 451], "theori": [448, 450, 451], "thereaft": 450, "therebi": 450, "therefor": [448, 449, 450, 451], "thessali": 449, "thi": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 32, 35, 37, 39, 43, 45, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 79, 80, 83, 85, 94, 95, 100, 101, 104, 105, 108, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 138, 139, 141, 142, 144, 145, 148, 149, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 178, 179, 181, 183, 184, 185, 186, 190, 191, 193, 194, 197, 198, 200, 203, 204, 205, 207, 211, 212, 214, 215, 216, 219, 221, 222, 225, 226, 231, 233, 236, 238, 243, 245, 257, 262, 264, 269, 270, 282, 289, 291, 294, 302, 307, 309, 312, 320, 332, 333, 334, 339, 341, 342, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 378, 379, 382, 383, 384, 391, 398, 399, 400, 401, 403, 407, 411, 417, 418, 419, 420, 421, 422, 425, 427, 428, 429, 430, 431, 443, 448, 449, 450, 451, 452, 453], "thick": [448, 450], "thing": [448, 449, 450, 451, 452], "think": [449, 452], "thinnest": 450, "third": [441, 448, 450], "those": [59, 243, 269, 294, 312, 338, 346, 452, 453], "thousand": 448, "thrace": 449, "threat": 449, "threaten": 449, "three": [221, 222, 448, 449, 450, 451, 452], "threhold": [100, 218], "thresh": 450, "threshhold": 382, "threshold": [100, 215, 218, 383, 400, 401, 448, 449, 450], "thrift": 449, "through": [59, 445, 448, 450], "thu": [346, 395, 448, 452], "thumb": 452, "th\u00fcringen": 449, "ti": [384, 449], "tibetan": 449, "ticino": 449, "tick": [442, 452], "tick_param": 448, "tide": 449, "ties_al": 384, "tight_layout": [448, 451, 452], "tightli": 448, "tigrinya": 449, "tile": 448, "time": [60, 94, 95, 167, 211, 212, 342, 448, 449, 450, 451, 452], "timor": 449, "tini": 448, "tirol": 449, "titl": [445, 448, 449, 452], "tj": 449, "tk": 449, "tl": 449, "tm": 449, "tmf": 450, "tn": 449, "to_indicator_matrix": [2, 17, 418], "to_row": 178, "tobago": 449, "todo": 346, "togeth": [349, 449, 451, 452], "togo": 449, "toi": 448, "tokelau": 449, "toler": 449, "tome": 449, "tomio": 449, "ton": 450, "tonga": 449, "too": [448, 449, 450, 451, 452], "tool": [449, 450, 452], "top": [448, 449, 451, 453], "topic": 451, "torso": 451, "toscana": 449, "tot": [451, 452], "total": [368, 369, 398, 435, 448, 449, 450, 452], "total_count": 234, "totedg": [1, 65, 71], "totnod": [1, 65, 67, 68, 69, 70, 71, 72], "touch": 449, "tour": 448, "tov": 449, "tovuz": 449, "toward": [417, 449], "town": 449, "tr": 449, "tractabl": 448, "tractor": 449, "trade": 449, "tradit": 449, "train": 449, "trait": [0, 453], "transfer": 452, "transform": 380, "transit": 449, "translat": 449, "transport": 449, "transpos": 449, "travers": [448, 450], "treat": [159, 448], "treatment": 448, "tree": [1, 2, 5, 8, 10, 17, 20, 24, 26, 34, 38, 40, 41, 42, 43, 46, 47, 48, 49, 51, 57, 58, 59, 60, 61, 62, 64, 66, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 167, 173, 198, 199, 200, 202, 221, 224, 225, 226, 346, 347, 411, 412, 413, 415, 416, 417, 418, 421, 424, 426, 433, 434, 435, 436, 448, 449, 450, 451, 453], "tree_height_for_agr": 34, "treenod": [410, 435, 436], "treeoftangl": [1, 72, 75], "trei": 449, "trento": 449, "tri": 452, "trial": 452, "triangl": 452, "trick": 452, "trie": 452, "trier": 449, "trigger": 449, "trinidad": 449, "tripl": [57, 73, 346, 448, 449, 452], "tristan": 449, "trivial": 450, "true": [6, 21, 35, 54, 73, 83, 103, 107, 116, 133, 137, 138, 139, 144, 146, 147, 148, 149, 152, 155, 167, 168, 170, 172, 173, 174, 175, 176, 178, 188, 196, 205, 212, 220, 233, 260, 261, 285, 286, 305, 306, 323, 324, 342, 370, 371, 378, 381, 382, 384, 400, 401, 422, 435, 440, 441, 445, 448, 449, 450, 451, 452], "trust": 449, "try": [448, 449, 451, 452], "tr\u00f8ndelag": 449, "tsarukyan": 449, "tsentralen": 449, "tsentralna": 449, "tsonga": 449, "tst": 448, "tst_layout": 411, "tswana": 449, "tt": 449, "tuebingen": [93, 96, 97], "tunisia": 449, "tupl": [1, 2, 17, 35, 45, 57, 73, 92, 101, 102, 104, 105, 106, 108, 114, 115, 117, 119, 120, 122, 123, 125, 126, 128, 129, 153, 157, 158, 160, 161, 162, 164, 165, 168, 170, 175, 176, 194, 195, 197, 209, 212, 213, 214, 215, 218, 219, 230, 238, 239, 240, 243, 247, 248, 251, 252, 253, 257, 259, 260, 261, 264, 265, 266, 269, 272, 273, 276, 277, 278, 282, 284, 285, 286, 291, 292, 294, 297, 298, 299, 302, 304, 305, 306, 309, 310, 312, 315, 316, 317, 320, 322, 323, 324, 336, 339, 341, 346, 381, 417, 435, 442, 445, 448], "turc": 449, "turk": 449, "turkei": 449, "turkish": 449, "turkmen": 449, "turkmenistan": 449, "turn": [2, 8, 16, 17, 24, 33, 100, 173, 217, 326, 327, 329, 397, 400, 401, 418, 424, 432, 449, 450, 452], "tutori": [0, 450, 451], "tuvalu": 449, "tv": 449, "tw": 449, "tweak": [451, 452], "twi": 449, "twice": [243, 257, 269, 282, 294, 302, 312, 320, 449], "two": [17, 23, 35, 36, 39, 71, 100, 140, 145, 168, 170, 173, 176, 194, 211, 212, 218, 221, 222, 236, 238, 243, 247, 251, 255, 262, 264, 269, 272, 276, 280, 289, 291, 294, 297, 298, 301, 307, 309, 312, 315, 316, 319, 346, 348, 349, 381, 394, 395, 411, 417, 437, 439, 442, 448, 449, 450, 451, 452], "ty": 449, "tyne": 449, "type": [70, 130, 131, 137, 138, 144, 148, 152, 170, 173, 178, 183, 184, 185, 186, 191, 216, 221, 222, 435, 441, 445, 449, 450, 451, 452], "type_nam": 187, "type_of_scale_vari": [148, 449], "typenam": [178, 187], "typic": [152, 166, 176, 449, 450, 453], "typical_answ": [166, 449, 452], "typifi": 448, "tz": 449, "t\u00fcbingen": 449, "u": [338, 398, 448, 449, 450, 451, 452], "ua": 449, "ua1": 449, "ua11": 449, "ua12": 449, "ua13": 449, "ua14": 449, "ua2": 449, "ua21": 449, "ua22": 449, "ua23": 449, "ua24": 449, "ua3": 449, "ua31": 449, "ua4": 449, "ua41": 449, "ua42": 449, "ua43": 449, "ua5": 449, "ua51": 449, "ua52": 449, "ua53": 449, "ua6": 449, "ua61": 449, "ua62": 449, "ua63": 449, "ua7": 449, "ua71": 449, "ua72": 449, "ua73": 449, "ua8": 449, "ua81": 449, "ua82": 449, "ua83": 449, "ua84": 449, "uca": 449, "uchilish": 449, "udc": 449, "ug": 449, "uganda": 449, "ui": [347, 438, 442, 445, 446, 448, 449, 450, 451], "uighur": 449, "ujar": 449, "uk": 449, "ukc": 449, "ukc1": 449, "ukc2": 449, "ukd": 449, "ukd1": 449, "ukd3": 449, "ukd4": 449, "ukd6": 449, "ukd7": 449, "uke1": 449, "uke2": 449, "uke3": 449, "uke4": 449, "ukf": 449, "ukf1": 449, "ukf2": 449, "ukf3": 449, "ukg": 449, "ukg1": 449, "ukg2": 449, "ukg3": 449, "ukh": 449, "ukh1": 449, "ukh2": 449, "ukh3": 449, "uki": 449, "uki3": 449, "uki4": 449, "uki5": 449, "uki6": 449, "uki7": 449, "ukip": 449, "ukj": 449, "ukj1": 449, "ukj2": 449, "ukj3": 449, "ukj4": 449, "ukk": 449, "ukk1": 449, "ukk2": 449, "ukk3": 449, "ukk4": 449, "ukl": 449, "ukl1": 449, "ukl2": 449, "ukm": 449, "ukm5": 449, "ukm6": 449, "ukm7": 449, "ukm8": 449, "ukm9": 449, "ukn": 449, "ukn0": 449, "ukrain": 449, "ukrainian": 449, "ukz": 449, "ukzz": 449, "ultrap\u00e9riph\u00e9riqu": 449, "um": 449, "umbria": 449, "unambigu": 449, "unbalanc": [448, 450, 451, 452], "unchang": 73, "uncommon": [435, 449], "unconceiv": 448, "uncross": [1, 73, 81, 82, 83, 100, 170, 172, 173, 174, 175, 221, 222, 346, 451, 452], "uncross_distinguish": 1, "uncrossingsweep": [1, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 166, 222, 451], "uncrosweep": 451, "under": [448, 449, 451], "undergradu": 449, "underli": [134, 411, 415, 451], "understand": [448, 450, 451, 452], "unemploi": 449, "unemploy": 449, "unfinish": 449, "unfortun": [449, 450, 452], "uni": 449, "uniat": 449, "unifi": 449, "uniformli": [448, 452], "uninterest": 452, "union": [257, 282, 302, 320, 448, 449], "unionofinterv": [100, 138], "unioun": 449, "uniqu": [100, 130, 135, 155, 209, 213, 218, 221, 222, 448], "unique_col": [448, 450], "unique_valu": [209, 213], "unit": [441, 445, 449], "uniteti": 449, "uniti": 449, "univers": [449, 451], "unknown": [178, 448, 449], "unlabel": 448, "unless": 449, "unoffici": 449, "unori": 450, "unselfish": 449, "unskil": 449, "unspecif": 452, "unspecifi": 449, "unsubmiss": 449, "unsupervis": 448, "unterfranken": 449, "until": [47, 49, 57, 61, 62, 73, 76, 81, 82, 95, 198, 200, 448, 449, 450, 451], "unu": 449, "unus": [137, 138, 144, 146, 147, 148, 149, 152, 449], "unwant": 451, "unweight": 380, "up": [75, 92, 385, 395, 397, 400, 417, 448, 449, 450, 451, 452], "updat": [101, 104, 105, 108, 114, 117, 167, 194, 197, 441, 442, 449], "update_scor": 450, "update_values_for_specif": [101, 105, 114, 194], "update_zoom_img": 451, "upper": [448, 449, 450, 452], "upset": 452, "ur": 449, "ural": 449, "urc": 449, "urdu": 449, "uruguai": 449, "us": [47, 52, 53, 56, 57, 59, 73, 79, 80, 83, 100, 118, 130, 132, 148, 156, 159, 166, 169, 172, 173, 175, 198, 203, 204, 207, 209, 211, 212, 215, 216, 218, 221, 222, 233, 244, 287, 295, 313, 331, 332, 339, 341, 346, 378, 381, 382, 383, 391, 397, 398, 400, 401, 435, 440, 441, 445, 446, 448, 449, 450, 451, 452, 453], "usabl": [191, 449], "use_j": 339, "user": [236, 243, 262, 269, 289, 294, 307, 312, 437, 442, 449, 452], "user_miss": 449, "usual": [70, 215, 342, 448, 449, 450, 451, 452], "util": [1, 235, 344, 345, 349, 350, 351, 352, 353, 354, 356, 358, 361, 364, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 418, 433, 434, 435, 436, 438, 442, 445, 446, 448, 450, 451, 452], "utilis": 452, "utrecht": 449, "uusimaa": 449, "uv": 451, "uz": 449, "uzbek": 449, "uzbekistan": 449, "v": [127, 349, 367, 448, 449, 450, 451], "v1": 449, "v10": 449, "v100": 449, "v101": 449, "v102": 449, "v103": 449, "v104": 449, "v105": 449, "v106": 449, "v107": 449, "v108": 449, "v109": 449, "v11": 449, "v110": 449, "v111": 449, "v111_4": 449, "v112": 449, "v113": 449, "v114": 449, "v115": 449, "v116": 449, "v117": 449, "v118": 449, "v119": 449, "v12": 449, "v120": 449, "v121": 449, "v122": 449, "v123": 449, "v124": 449, "v125": 449, "v126": 449, "v127": 449, "v128": 449, "v129": 449, "v13": 449, "v130": 449, "v131": 449, "v132": 449, "v133": 449, "v133_11c": 449, "v134": 449, "v134_11c": 449, "v135": 449, "v135_11c": 449, "v136": 449, "v136_11c": 449, "v137": 449, "v137_11c": 449, "v138": 449, "v138_11c": 449, "v139": 449, "v139_11c": 449, "v14": 449, "v140": 449, "v140_11c": 449, "v141": 449, "v141_11c": 449, "v142": 449, "v143": 449, "v144": 449, "v145": 449, "v146": 449, "v147": 449, "v148": 449, "v149": 449, "v15": 449, "v150": 449, "v151": 449, "v152": 449, "v153": 449, "v154": 449, "v155": 449, "v156": 449, "v157": 449, "v158": 449, "v159": 449, "v16": 449, "v160": 449, "v161": 449, "v162": 449, "v163": 449, "v164": 449, "v165": 449, "v166": 449, "v167": 449, "v168": 449, "v169": 449, "v17": 449, "v170": 449, "v171": 449, "v172": 449, "v173": 449, "v174_c": 449, "v174_lr": 449, "v175_c": 449, "v175_lr": 449, "v176": 449, "v176_dk": 449, "v177": 449, "v177_dk": 449, "v178": 449, "v178_dk": 449, "v179": 449, "v179_dk": 449, "v18": 449, "v180": 449, "v180_dk": 449, "v181": 449, "v181_dk": 449, "v182": 449, "v182_dk": 449, "v183": 449, "v183_dk": 449, "v184": 449, "v185": 449, "v186": 449, "v187": 449, "v188": 449, "v189": 449, "v19": 449, "v190": 449, "v191": 449, "v192": 449, "v193": 449, "v194": 449, "v195": 449, "v196": 449, "v197": 449, "v198": 449, "v199": 449, "v2": 449, "v20": 449, "v200": 449, "v201": 449, "v202": 449, "v203": 449, "v204": 449, "v205": 449, "v206": 449, "v207": 449, "v208": 449, "v209": 449, "v20a": 449, "v20b": 449, "v21": 449, "v210": 449, "v211": 449, "v212": 449, "v213": 449, "v214": 449, "v215": 449, "v216": 449, "v217": 449, "v218": 449, "v219": 449, "v22": 449, "v220": 449, "v221": 449, "v221_dk": 449, "v222": 449, "v222_dk": 449, "v223": 449, "v223_dk": 449, "v224": 449, "v224_dk": 449, "v225": 449, "v225_weight": 449, "v226": 449, "v227": 449, "v228b": 449, "v228b_r": 449, "v229": 449, "v23": 449, "v230": 449, "v231b": 449, "v231b_r": 449, "v232": 449, "v233b": 449, "v233b_r": 449, "v234": 449, "v235": 449, "v236": 449, "v237": 449, "v238": 449, "v239_r": 449, "v239a": 449, "v239b": 449, "v24": 449, "v240": 449, "v241": 449, "v242": 449, "v242_r": 449, "v243_8cat": 449, "v243_c": 449, "v243_cs_de1": 449, "v243_cs_de2": 449, "v243_cs_de3": 449, "v243_cs_gb1": 449, "v243_cs_gb2": 449, "v243_edulvlb": 449, "v243_edulvlb_1": 449, "v243_edulvlb_2": 449, "v243_eisc": 449, "v243_isced97": 449, "v243_isced_1": 449, "v243_isced_2": 449, "v243_isced_2b": 449, "v243_isced_3": 449, "v243_r": 449, "v243_r_weight": 449, "v244": 449, "v245": 449, "v246_egp": 449, "v246_esec": 449, "v246_isco_2": 449, "v246_isei": 449, "v246_siop": 449, "v247": 449, "v248": 449, "v248a": 449, "v249": 449, "v24a_it": 449, "v24b_it": 449, "v25": 449, "v250": 449, "v251b": 449, "v251b_r": 449, "v252_8cat": 449, "v252_c": 449, "v252_cs_de1": 449, "v252_cs_de2": 449, "v252_cs_de3": 449, "v252_cs_gb1": 449, "v252_cs_gb2": 449, "v252_edulvlb": 449, "v252_edulvlb_1": 449, "v252_edulvlb_2": 449, "v252_eisc": 449, "v252_isced97": 449, "v252_isced_1": 449, "v252_isced_2": 449, "v252_isced_2b": 449, "v252_isced_3": 449, "v252_r": 449, "v253": 449, "v254": 449, "v255_egp": 449, "v255_esec": 449, "v255_isco_2": 449, "v255_isei": 449, "v255_siop": 449, "v256": 449, "v257": 449, "v258": 449, "v259": 449, "v26": 449, "v260": 449, "v261": 449, "v261_ppp": 449, "v261_r": 449, "v262_8cat": 449, "v262_c": 449, "v262_cs_de1": 449, "v262_cs_de2": 449, "v262_cs_de3": 449, "v262_cs_gb1": 449, "v262_cs_gb2": 449, "v262_edulvlb": 449, "v262_edulvlb_1": 449, "v262_edulvlb_2": 449, "v262_eisc": 449, "v262_isced97": 449, "v262_isced_1": 449, "v262_isced_2": 449, "v262_isced_2b": 449, "v262_isced_3": 449, "v262_r": 449, "v263_8cat": 449, "v263_c": 449, "v263_cs_de1": 449, "v263_cs_de2": 449, "v263_cs_de3": 449, "v263_cs_gb1": 449, "v263_cs_gb2": 449, "v263_edulvlb": 449, "v263_edulvlb_1": 449, "v263_edulvlb_2": 449, "v263_eisc": 449, "v263_isced97": 449, "v263_isced_1": 449, "v263_isced_2": 449, "v263_isced_2b": 449, "v263_isced_3": 449, "v263_r": 449, "v264": 449, "v265": 449, "v266": 449, "v267": 449, "v268": 449, "v269": 449, "v27": 449, "v270": 449, "v271": 449, "v272": 449, "v273": 449, "v274": 449, "v275b_n1": 449, "v275b_n2": 449, "v275c_n1": 449, "v275c_n2": 449, "v276_r": 449, "v277": 449, "v278a": 449, "v278b": 449, "v278c_r": 449, "v279a": 449, "v279b": 449, "v279c_r": 449, "v279d_r": 449, "v28": 449, "v280": 449, "v281a": 449, "v281a_r": 449, "v282": 449, "v29": 449, "v3": 449, "v30": 449, "v30a": 449, "v30b": 449, "v30c": 449, "v31": 449, "v32": 449, "v33": 449, "v34": 449, "v35": 449, "v36": 449, "v37": 449, "v38": 449, "v39": 449, "v4": 449, "v40": 449, "v41": 449, "v42": 449, "v43": 449, "v44": 449, "v45": 449, "v45a": 449, "v45b": 449, "v45c": 449, "v46": 449, "v47": 449, "v48": 449, "v49": 449, "v5": 449, "v50": 449, "v51": 449, "v52": 449, "v52_c": 449, "v53": 449, "v54": 449, "v55": 449, "v56": 449, "v57": 449, "v58": 449, "v59": 449, "v6": 449, "v60": 449, "v61": 449, "v62": 449, "v63": 449, "v64": 449, "v65": 449, "v66": 449, "v67": 449, "v68": 449, "v69": 449, "v7": 449, "v70": 449, "v71": 449, "v72": 449, "v72_de": 449, "v73": 449, "v73_de": 449, "v74": 449, "v74_de": 449, "v75": 449, "v75_de": 449, "v76": 449, "v76_de": 449, "v77": 449, "v77_de": 449, "v78": 449, "v78_de": 449, "v79": 449, "v79_de": 449, "v8": 449, "v80": 449, "v81": 449, "v82": 449, "v83": 449, "v84": 449, "v85": 449, "v86": 449, "v87": 449, "v88": 449, "v89": 449, "v9": 449, "v90": 449, "v91": 449, "v92": 449, "v93": 449, "v94": 449, "v95": 449, "v96": 449, "v96a": 449, "v96b": 449, "v97": 449, "v98": 449, "v99": 449, "va": 449, "vagu": 448, "vakar\u0173": 449, "val": 449, "valenciana": 449, "valid": [127, 130, 133, 136, 149, 155, 166, 173, 178, 179, 180, 186, 187, 190, 191, 192, 449, 450], "valid_agreement_lower_bound": 166, "valid_valu": [149, 178, 179, 190, 449, 452], "valid_values_as_list": 178, "validli": 136, "vall": 449, "vallei": 449, "vall\u00e9": 449, "valu": [1, 13, 17, 19, 23, 30, 34, 35, 36, 37, 39, 43, 45, 46, 49, 54, 57, 58, 59, 60, 61, 73, 75, 76, 81, 83, 92, 96, 97, 100, 101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 143, 144, 149, 157, 158, 160, 161, 164, 165, 167, 178, 179, 180, 182, 188, 189, 190, 191, 192, 194, 196, 197, 200, 205, 209, 211, 212, 213, 214, 215, 218, 221, 222, 225, 226, 227, 230, 231, 257, 265, 282, 302, 320, 334, 338, 339, 343, 344, 345, 346, 360, 363, 366, 381, 383, 390, 391, 397, 398, 399, 400, 401, 403, 407, 429, 445, 448, 449, 450, 451, 452], "valuabl": 452, "value_class": 178, "vanuatu": 449, "var": [101, 105, 114, 194, 449], "var_label": 452, "var_labels_n": 452, "var_nam": [162, 452], "var_names_n": 452, "var_typ": 178, "vari": [448, 449, 452], "variabl": [100, 101, 103, 104, 105, 107, 108, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 137, 138, 139, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 172, 176, 178, 179, 181, 183, 184, 185, 186, 187, 190, 191, 193, 194, 196, 197, 209, 213, 214, 215, 218, 219, 395, 448, 449, 452], "variable_info": [130, 144, 449, 452], "varianc": 398, "variance_explain": 398, "variat": [449, 451], "variou": [131, 449], "vasco": 449, "vast": 452, "vc": 449, "ve": 449, "vec": [448, 450], "vector": [83, 119, 120, 122, 123, 125, 126, 128, 129, 157, 158, 160, 161, 164, 165, 210, 212, 236, 237, 244, 263, 295, 313, 335, 337, 338, 339, 349, 350, 355, 356, 398, 399, 402, 403, 406, 407, 441, 448, 450, 451], "venda": 449, "veneto": 449, "venezia": 449, "venezuela": 449, "venstr": 449, "verbos": [132, 379], "verd": 449, "veri": [448, 449, 450, 451, 452], "verifi": 453, "versa": [17, 34, 452], "version": [100, 110, 178, 448, 449, 450, 451, 453], "versionc": 449, "vertex": [336, 377, 381, 452], "vertic": [331, 336, 338, 342, 368, 369, 370, 371, 374, 381, 448, 450, 451, 452], "verticalalign": [448, 451], "vest": 449, "vestlandet": 449, "vet": 449, "veterinari": 449, "vg": 449, "vi": 449, "vice": [17, 34, 452], "video": 449, "vidurio": 449, "viet": 449, "vietnames": 449, "view": [448, 449, 450], "viewpoint": 452, "viia": 449, "viib": 449, "vincent": 449, "vinnytsia": 449, "violenc": 449, "virgin": 449, "visibl": [93, 448], "vision": 451, "visual": [448, 449, 451, 452], "visualis": [70, 438, 439, 441, 448, 449, 450, 451, 452], "vitebsk": 449, "vitro": 449, "vivid": 452, "vk1": 449, "vk2": 449, "vk3": 449, "vmax": [448, 450, 451], "vmbo": 449, "vmin": [448, 450, 451], "vmro": 449, "vn": 449, "vo": 449, "voc": 449, "vocabulari": 452, "vocat": 449, "vojvodin": 449, "vojvodina": 449, "volap\u00fck": 449, "volum": 368, "volunt": 449, "voluntari": 449, "volya": 449, "volyn": 449, "vorarlberg": 449, "voreia": 449, "voreio": 449, "vorpommern": 449, "vote": 449, "voter": 449, "vscrollbar": 449, "vstack": 450, "vt": 398, "vu": 449, "vwo": 449, "vzhodna": 449, "v\u00e4stsverig": 449, "v\u00fdchodn\u00e9": 449, "w": [367, 448, 449, 450, 451, 452], "wa": [83, 214, 215, 287, 334, 360, 363, 366, 448, 449, 452], "wai": [16, 33, 83, 130, 139, 346, 384, 411, 417, 432, 448, 449, 450, 451, 452], "waitress": 449, "wale": 449, "walk": 448, "walli": 449, "walloon": 449, "want": [398, 442, 445, 448, 449, 450, 451, 452], "warmi\u0144sko": 449, "warn": [137, 138, 144, 146, 147, 148, 149, 152, 450], "warszawski": 449, "warwickshir": 449, "we": [34, 37, 130, 132, 137, 138, 144, 146, 147, 148, 149, 152, 178, 194, 215, 225, 243, 269, 294, 312, 339, 346, 349, 384, 395, 398, 441, 448, 449, 450, 451, 452], "weak": 338, "wear": 449, "web": 449, "web_german": 449, "websit": [449, 453], "week": 449, "weight": [331, 336, 357, 367, 368, 369, 370, 371, 379, 448, 449, 450, 451, 452], "weight_bg": 450, "weight_fg": 450, "weight_rang": 379, "welfar": 449, "well": [34, 60, 170, 335, 448, 449, 450, 451, 452], "welsh": 449, "went": [212, 449], "were": [47, 48, 51, 73, 74, 78, 95, 174, 175, 176, 198, 199, 202, 448, 449, 452], "weser": 449, "west": 449, "western": 449, "westfalen": 449, "west\u00f6sterreich": 449, "wf": 449, "what": [59, 244, 287, 295, 313, 327, 339, 374, 449, 450, 451, 452], "whatev": 449, "when": [88, 418, 448, 449, 452], "whenev": [73, 167, 175, 442, 445, 452], "where": [16, 33, 55, 84, 94, 136, 140, 145, 171, 206, 339, 349, 354, 355, 372, 376, 377, 381, 382, 384, 397, 399, 402, 432, 435, 436, 448, 449, 450, 451, 452], "wherea": 452, "whether": [2, 9, 17, 23, 25, 35, 54, 68, 73, 96, 97, 98, 132, 148, 175, 183, 184, 185, 186, 187, 191, 205, 224, 225, 227, 230, 236, 238, 244, 251, 254, 255, 256, 260, 261, 262, 264, 270, 276, 279, 280, 281, 285, 286, 287, 289, 295, 300, 301, 305, 306, 307, 313, 318, 319, 323, 324, 378, 382, 400, 401, 418, 425, 435, 441, 442], "which": [1, 8, 10, 17, 24, 26, 34, 35, 36, 37, 39, 57, 58, 59, 60, 61, 63, 71, 73, 75, 81, 85, 88, 92, 94, 95, 98, 99, 130, 133, 150, 166, 173, 174, 212, 221, 225, 226, 230, 231, 257, 282, 302, 320, 327, 339, 340, 346, 374, 382, 385, 394, 395, 400, 401, 407, 408, 409, 411, 413, 424, 426, 435, 437, 442, 448, 449, 450, 451, 452], "while": [1, 34, 174, 448, 450, 451, 452], "whit": 449, "white": 450, "who": [121, 127, 215, 218, 346, 452], "whole": [448, 449], "whose": [214, 243, 269, 294, 312], "why": [448, 452], "wide": 450, "widget": [47, 53, 56, 73, 80, 198, 204, 207], "widow": 449, "width": [383, 435, 450], "wielkopolski": 449, "wien": 449, "wight": 449, "willing": 449, "wiltshir": 449, "wing": 449, "wit": 449, "with_arrai": [236, 262, 289, 307, 450, 451], "with_callback": [443, 450, 451], "with_sparse_arrai": [236, 262, 289, 307], "within": [17, 93, 97, 98, 265, 270, 340, 448, 449, 450, 451, 452], "withing": 265, "without": [47, 51, 73, 78, 198, 202, 448, 449, 450, 451, 452], "withrecognit": 449, "withstand": 450, "wo": 449, "wojew\u00f3dztwo": 449, "wolof": 449, "woman": 449, "women": 449, "woodwork": 449, "worcestershir": 449, "word": [168, 175, 448, 449, 451, 452], "work": [100, 220, 346, 379, 417, 449, 450, 451, 452], "worker": 449, "workflow": [449, 452], "workingon": 448, "world": 449, "worri": 452, "wors": 449, "worst": 448, "worth": [448, 451], "would": [95, 334, 360, 363, 366, 395, 448, 449, 450, 451, 452], "wouldn": [449, 452], "wrap": [1, 73, 450], "wrap_annotation_func_ax": [437, 445], "write": 449, "wschodni": 449, "wv": 449, "w\u00fcrttemberg": 449, "x": [94, 95, 96, 97, 98, 99, 348, 351, 353, 380, 382, 384, 417, 442, 443, 445, 448, 449, 450, 452], "x1000": 449, "x_1": [351, 353], "x_2": 353, "x_k": [351, 353], "x_n": 452, "xa0": 449, "xa0evangel": 449, "xa0iceland": 449, "xa0left": 449, "xa0lukashenko": 449, "xa0oth": 449, "xac": 449, "xb": 448, "xh": 449, "xhosa": 449, "xiz": 449, "xk": 449, "xlabel": [442, 445, 448, 450, 451], "xmax": 448, "xmin": 448, "xr": 448, "xrang": 442, "xtick": [442, 448, 452], "xxx": 449, "xypick": [437, 443, 444, 450, 451], "y": [417, 442, 443, 445, 448, 449, 450], "yabloko": 449, "yar": 449, "yardimli": 449, "yazidi": 449, "ye": [449, 452], "year": [448, 449], "yellow": [451, 452], "yemen": 449, "yerevan": 449, "yet": [34, 37, 59, 448, 449, 452], "yev": 449, "yevlakh": 449, "yevropeiska": 449, "yi": 449, "yiddish": 449, "yield": [37, 452], "ylabel": [442, 445, 448, 450], "ymax": 448, "ymin": 448, "yo": 449, "yorkshir": 449, "yoruba": 449, "you": [12, 28, 75, 167, 221, 395, 428, 442, 445, 448, 449, 450, 451, 452, 453], "younger": 449, "youngest": 449, "your": [446, 449, 450, 451], "yr": 449, "yrang": 442, "yt": 449, "ytick": [442, 448], "yuc": 449, "yugoiztochen": 449, "yugoiztochna": 449, "yugoslavia": 449, "yugozapaden": 449, "yugozapadna": 449, "yuzhen": 449, "yuzhna": 449, "za": 449, "za7500_v5": 449, "zaab": 449, "zachodni": 449, "zachodniopomorski": 449, "zagreb": 449, "zahodna": 449, "zakarpattya": 449, "zakatala": 449, "zambia": 449, "zapadn": 449, "zapadna": 449, "zaporizhya": 449, "zaq": 449, "zar": 449, "zardob": 449, "zealand": 449, "zeeland": 449, "zentralschweiz": 449, "zero": [94, 175, 338, 409, 441, 448, 450, 451, 452], "zgodi": 449, "zh": 449, "zhuang": 449, "zhytomyr": 449, "zhyttia": 449, "zimbabw": 449, "zip": [448, 449, 452], "zl": 449, "zm": 449, "zoom": 450, "zoom_half_s": [450, 451], "zu": 449, "zuid": 449, "zuism": 449, "zulu": 449, "zw": 449, "zyalyoniya": 449, "zz\u0161": 449, "z\u00e1padn\u00e9": 449, "z\u00fcrich": 449, "\u00e1rea": 449, "\u00e5land": 449, "\u00e9": 449, "\u00e9cole": 449, "\u00e9ducateur": 449, "\u00e9l\u00e9mentair": 449, "\u00e9szak": 449, "\u00e9tude": 449, "\u00ed": 449, "\u00edsland": 449, "\u00eele": 449, "\u00f6arna": 449, "\u00f6stra": 449, "\u00f6vp": 449, "\u00f6vre": 449, "\u00f8stlandet": 449, "\u00fasvit": 449, "\u010dechi": 449, "\u010desk\u00e1": 449, "\u010dsl": 449, "\u010dssd": 449, "\u0142\u00f3dzkie": 449, "\u015bl\u0105skie": 449, "\u015bwi\u0119tokrzyski": 449, "\u0161umadij": 449, "\u0161umadija": 449}, "titles": ["Tangle Software Documentation", "tangles", "FTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "Tangle", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "equal_data", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "open", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "TangleSearchTree", "get_efficient_distinguishers", "k_tangles", "limit", "load", "maximal_tangles", "number_of_separations", "root", "save", "search_tree", "sep_ids", "tangle_matrix", "tree_height_for_agreement", "TangleSearchWidget", "all_oriented_feature_ids", "lower_agreement", "oriented_feature_ids_for_agreement", "original_feature_ids", "search_object", "sep_sys", "tangle_matrix", "tangle_score", "tree", "TangleSweep", "append_separation", "greedy_search", "insert_separation", "sweep_below", "sweep_one", "tree", "ToTEdge", "other_end", "ToTNode", "degree", "is_leaf", "neighbours", "set_label", "TreeOfTangles", "any_node", "UncrossingSweep", "all_oriented_feature_ids", "create_tot", "lower_agreement", "oriented_feature_ids_for_agreement", "original_feature_ids", "search_object", "sep_sys", "sweep_below", "sweep_one", "tangle_matrix", "tangle_score", "tree", "tangles.agreement", "AdvancedAgreementFunc", "AgreementFunc", "AgreementFuncBitarray", "AgreementFuncBitarrayBips", "CalculateAgreement", "agreement_func", "tangles.analysis", "coherence_levels", "complexity_levels", "hard_clustering_tuebingen", "soft_clustering_tuebingen", "tangle_score", "visibility", "tangles.convenience", "NominalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "NumericalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "OrderFunctionO1", "OrderFunctionO1biased", "OrderFunctionO2", "OrderFunctionO3", "OrderFunctionO4", "OrdinalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "SimpleSurveyFeatureFactory", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactoryMissingValuesBothSides", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactoryMissingValuesImplicit", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactoryMissingValuesOwnFeatures", "create_features", "create_features_for_single_col", "Survey", "__getitem__", "check_variables", "complete_rows", "copy", "count_number_of_unique_answers", "count_valid_answers_per_respondent", "guess_variable_types", "guess_variable_value_lists", "interpret_column_selection", "load", "num_questions", "num_respondents", "replace_variable_value_labels", "replace_variable_values", "save", "select_questions", "select_respondents", "set_pyreadstat_meta_data", "set_valid_and_invalid_variable_values", "set_variable_labels", "set_variable_names", "set_variable_types", "shape", "summarize", "variable_info", "SurveyFeatureFactory", "create_features", "create_features_for_single_col", "SurveyFeatureFactoryCherryPicker", "create_features", "create_features_for_single_col", "set_factoryfunc", "SurveyFeatureFactoryDecorator", "create_features", "create_features_for_single_col", "SurveyTangles", "change_agreement", "explain_feature", "feature_system", "initialize_search", "load", "ordered_metadata", "search", "specified_features", "tangle_matrix", "typical_answers", "valid_agreement_lower_bound", "SurveyVariable", "add_values", "all_values_as_list", "create_values", "invalid_values_as_list", "is_nominal_type", "is_numeric_type", "is_ordinal_type", "is_valid_type", "is_valid_type_name", "replace_values", "set_value_labels", "set_values", "to_row", "valid_values_as_list", "value_class", "SurveyVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "TangleSweepFeatureSys", "all_oriented_feature_ids", "lower_agreement", "oriented_feature_ids_for_agreement", "original_feature_ids", "search_object", "sep_sys", "tangle_matrix", "tangle_score", "tree", "UnionOfIntervals", "binary_unique_value_features", "tangles.convenience.convenience_features", "append_corner_features", "compute_corner_features", "create_features_all_unique_values", "create_features_split_regular_bins", "create_features_split_regular_ge", "create_order_function", "feats2seps_invalids_to_both_sides", "feature_factory_all_splits_ge", "nominalvar_features_all_cats", "order_works_on_features", "search_tangles", "search_tangles_uncrossed", "create_tot", "tangles.guiding", "get_tangle_by_path", "guided_tangle", "is_guiding", "tangles.search", "tangles.search.extending_tangles", "ExtendingTangles", "extend_tangles", "tangles.search.progress", "DefaultProgressCallback", "SimpleProgressCallback", "tangles.separations", "AdvancedFeatureSystem", "__getitem__", "add_corner", "add_features", "add_seps", "all_feature_ids", "all_sep_ids", "assemble_meta_info", "compute_infimum", "copy", "count_big_side", "crossing_seps", "feature_and_complement_size", "feature_metadata", "feature_size", "get_corners", "get_feature_ids", "get_sep_ids", "is_le", "is_nested", "is_subset", "metadata_matrix", "separation_metadata", "side_counts", "with_array", "with_sparse_array", "FeatureSystem", "__getitem__", "add_corner", "add_features", "add_seps", "all_feature_ids", "all_sep_ids", "assemble_meta_info", "compute_infimum", "count_big_side", "crossing_seps", "feature_and_complement_size", "feature_metadata", "feature_size", "get_corners", "get_feature_ids", "get_sep_ids", "is_le", "is_nested", "is_subset", "metadata_matrix", "separation_metadata", "side_counts", "with_array", "with_sparse_array", "MetaData", "append", "SetSeparationSystem", "__getitem__", "add_corner", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "count_big_side", "crossing_seps", "get_corners", "get_sep_ids", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "side_counts", "with_array", "with_sparse_array", "SetSeparationSystemBase", "__getitem__", "add_corner", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "count_big_side", "crossing_seps", "get_corners", "get_sep_ids", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "side_counts", "with_array", "with_sparse_array", "SetSeparationSystemOrderFunc", "tangles.separations.atomic_sets", "atomic_set_indicators", "atomic_sets", "atomic_to_seps", "seps_to_atomic", "tangles.separations.finding", "OrderFuncDerivative", "change_discrete_derivative", "discrete_derivative", "add_all_corners_of_features", "min_S_T_cut", "minimize_cut", "nodal_domains", "pca_features", "random_features", "spectral_features", "spectral_features_splitted", "tangles.separations.util", "order_func_balance", "order_func_min_side_size", "uncross_distinguishers", "tangles.util", "tangles.util.entropy", "colsplit_mutual_information", "datapointwise_information_gains", "entropy", "information_gain", "joint_entropy", "pairwise_mutual_information", "tangles.util.graph", "connected_component_indicators", "tangles.util.graph.cut_weight", "CutWeightOrder", "change_discrete_derivative", "discrete_derivative", "NCutOrder", "change_discrete_derivative", "discrete_derivative", "RatioCutOrder", "change_discrete_derivative", "discrete_derivative", "cut_weight_order", "ncut_order", "ratiocut_order", "greedy_neighborhood", "greedy_neighborhood_old", "laplacian", "tangles.util.graph.minor", "contract_graph", "modularity_matrix", "normalized_laplacian", "tangles.util.graph.similarity", "cosine_similarity", "cosine_similarity_graph_csr_data", "epsilon_neighborhood_graph", "grid_distance_graph", "hamming_similarity", "image_to_similarity_graph", "k_nearest_neighbors", "tangles.util.logic", "ConjunctiveNormalForm", "DisjunctiveNormalForm", "LogicTerm", "TextTerm", "append", "distribute", "tangles.util.logic.sep_to_term", "RecursionLogic", "simplify", "tangles.util.logic.term", "SemanticTextTerm", "tangles.util.matrix_order", "MatrixOrderSVD", "covariance_order", "linear_similarity_from_dist_matrix", "linear_similarity_from_distances", "logdet_order", "matrix_order", "o_five", "o_seven", "tangles.util.preprocessing", "balance", "normalize_length", "standardize", "tangles.util.tree", "BinTreeNetworkX", "draw", "get_ids_from_label", "get_label", "graph", "relabel", "tst_layout", "BinTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "GraphNode", "TreeNode", "plot_tree", "print_node_label", "tangles.util.ui", "SplitGraph", "draw_ellipses", "draw_side_and_boundary", "draw_stacked_circles", "XYPicker", "show", "update", "plot_annotated", "wrap_annotation_func_ax", "API reference", "Point Cloud Tangles", "Survey Tangles", "Tangles in Images I", "Tangles in Images II", "Tangles of Personality Traits", "Tutorials"], "titleterms": {"": 448, "1": [448, 449, 451, 452], "2": [448, 449, 451, 452], "3": [448, 449, 451, 452], "4": [448, 451, 452], "5": [448, 452], "6": [448, 452], "7": 448, "A": [449, 452], "The": [451, 452], "__getitem__": [131, 237, 263, 290, 308], "add_all_corners_of_featur": 335, "add_corn": [238, 264, 291, 309], "add_featur": [239, 265], "add_sep": [240, 266, 292, 310], "add_valu": 179, "advancedagreementfunc": 87, "advancedfeaturesystem": 236, "agre": 448, "agreement": 86, "agreement_func": 92, "agreementfunc": 88, "agreementfuncbitarrai": 89, "agreementfuncbitarraybip": 90, "all": [448, 452], "all_feature_id": [241, 267], "all_oriented_feature_id": [48, 74, 199], "all_sep_id": [242, 268, 293, 311], "all_values_as_list": 180, "an": [448, 451, 452], "analysi": [93, 449], "any_nod": 72, "api": 447, "append": [288, 390], "append_corner_featur": 211, "append_separ": 58, "ar": 448, "assemble_meta_info": [243, 269, 294, 312], "atomic_set": [326, 328], "atomic_set_ind": 327, "atomic_to_sep": 329, "attribut": [17, 118, 163, 166, 198, 418, 442], "back": 448, "balanc": [407, 452], "base": [448, 451], "binary_unique_value_featur": 209, "bintreenetworkx": 411, "bintreenod": 418, "calculateagr": 91, "change_agr": 167, "change_discrete_deriv": [333, 359, 362, 365], "check_vari": 132, "children": [3, 18, 419], "choos": 448, "clean": 449, "cloud": 448, "cluster": 448, "coher": 452, "coherence_level": 94, "colsplit_mutual_inform": 349, "complete_row": 133, "complexity_level": 95, "compute_corner_featur": 212, "compute_infimum": [244, 270, 295, 313], "conclus": 452, "conjunctivenormalform": 386, "connected_component_ind": 356, "consist": 448, "contract_graph": 374, "conveni": [100, 210], "convenience_featur": 210, "copi": [4, 19, 134, 245, 420], "copy_subtre": [5, 20, 421], "copy_subtree_into_children": [6, 21, 422], "cosine_similar": 378, "cosine_similarity_graph_csr_data": 379, "count_big_sid": [246, 271, 296, 314], "count_number_of_unique_answ": 135, "count_valid_answers_per_respond": 136, "covariance_ord": 399, "creat": 448, "create_featur": [119, 122, 125, 128, 157, 160, 164], "create_features_all_unique_valu": 213, "create_features_for_single_col": [120, 123, 126, 129, 158, 161, 165], "create_features_split_regular_bin": 214, "create_features_split_regular_g": 215, "create_order_funct": 216, "create_tot": [75, 223], "create_valu": 181, "crossing_sep": [247, 272, 297, 315], "cut_weight": 357, "cut_weight_ord": 367, "cutweightord": 358, "data": [448, 449, 452], "datapointwise_information_gain": 350, "defaultprogresscallback": 233, "defin": 452, "degre": 67, "detach": [7, 22, 423], "discrete_deriv": [334, 360, 363, 366], "disjunctivenormalform": 387, "distribut": 391, "divid": 448, "document": 0, "draw": 412, "draw_ellips": 439, "draw_side_and_boundari": 440, "draw_stacked_circl": 441, "e": 452, "entropi": [348, 351], "epsilon_neighborhood_graph": 380, "equal": 448, "equal_data": 23, "explain_featur": 168, "extend_tangl": 231, "extending_tangl": 229, "extendingtangl": 230, "extravers": 452, "factor": 452, "feats2seps_invalids_to_both_sid": 217, "featur": [448, 451, 452], "feature_and_complement_s": [248, 273], "feature_factory_all_splits_g": 218, "feature_metadata": [249, 274], "feature_s": [250, 275], "feature_system": 169, "featuresystem": 262, "find": 331, "from_indicator_matrix": [8, 24, 424], "ftreenod": 2, "function": [448, 451, 452], "fuzzi": 448, "get_corn": [251, 276, 298, 316], "get_efficient_distinguish": 35, "get_feature_id": [252, 277], "get_ids_from_label": 413, "get_label": 414, "get_sep_id": [253, 278, 299, 317], "get_tangle_by_path": 225, "graph": [355, 357, 373, 377, 415], "graphnod": 433, "greedy_neighborhood": 370, "greedy_neighborhood_old": 371, "greedy_search": 59, "grid_distance_graph": 381, "guess_variable_typ": 137, "guess_variable_value_list": 138, "guid": 224, "guided_tangl": 226, "hamming_similar": 382, "hard_clustering_tuebingen": 96, "i": 450, "id": 452, "ii": 451, "imag": [450, 451], "image_to_similarity_graph": 383, "information_gain": 352, "initialize_search": 170, "input": 451, "insert_separ": 60, "interpret_column_select": 139, "interv": 452, "invalid_values_as_list": 182, "invert_op": [102, 106, 115, 195], "is_guid": 227, "is_l": [254, 279, 300, 318], "is_leaf": [9, 25, 68, 425], "is_nest": [255, 280, 301, 319], "is_nominal_typ": 183, "is_numeric_typ": 184, "is_ordinal_typ": 185, "is_subset": [256, 281], "is_valid_typ": 186, "is_valid_type_nam": 187, "joint_entropi": 353, "k_nearest_neighbor": 384, "k_tangl": 36, "laplacian": 372, "least": 448, "leaves_in_subtre": [10, 26, 426], "let": 448, "level": [11, 27, 427], "level_in_subtre": [12, 28, 428], "limit": 37, "linear_similarity_from_dist": 401, "linear_similarity_from_dist_matrix": 400, "load": [38, 140, 171], "logdet_ord": 402, "logic": [385, 392, 395], "logicterm": 388, "lower_agr": [49, 76, 200], "mathbb": 448, "matrix_ord": [397, 403], "matrixordersvd": 398, "maximal_tangl": 39, "member": 398, "metadata": 287, "metadata_matrix": [257, 282, 302, 320], "min_s_t_cut": 336, "mindset": 452, "minimize_cut": 337, "minor": 373, "modularity_matrix": 375, "ncut_ord": 368, "ncutord": 361, "neighbour": 69, "nodal_domain": 338, "nominalvar_features_all_cat": 219, "nominalvariablevalu": 101, "normalize_length": 408, "normalized_laplacian": 376, "num_quest": 141, "num_respond": 142, "number_of_separ": 40, "numericalvariablevalu": 105, "o_fiv": 404, "o_seven": 405, "one": 448, "open": 29, "order": [448, 451, 452], "order_func_bal": 344, "order_func_min_side_s": 345, "order_works_on_featur": 220, "ordered_metadata": 172, "orderfuncderiv": 332, "orderfunctiono1": 109, "orderfunctiono1bias": 110, "orderfunctiono2": 111, "orderfunctiono3": 112, "orderfunctiono4": 113, "ordinalvariablevalu": 114, "oriented_feature_ids_for_agr": [50, 77, 201], "original_feature_id": [51, 78, 202], "other_end": 65, "pairwise_mutual_inform": 354, "paramet": [8, 10, 12, 14, 15, 16, 24, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 43, 45, 46, 49, 54, 55, 57, 58, 59, 60, 61, 65, 70, 73, 75, 76, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 187, 188, 189, 190, 194, 195, 196, 197, 200, 205, 206, 209, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 230, 231, 237, 238, 239, 240, 243, 244, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 353, 354, 356, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 390, 391, 399, 400, 401, 402, 403, 407, 408, 409, 411, 413, 414, 416, 417, 418, 424, 426, 428, 430, 431, 432, 435, 436, 439, 440, 441, 442, 443, 445, 446], "path_from_root_ind": [13, 30, 429], "pca_featur": 339, "person": 452, "plot": 452, "plot_annot": 445, "plot_tre": 435, "point": [448, 451], "possible_values_represent": [103, 107, 116, 196], "prefer": 452, "prepar": 449, "preprocess": 406, "print_node_label": 436, "progress": 232, "r": 448, "random_featur": 340, "rang": 452, "rate": 452, "ratiocut_ord": 369, "ratiocutord": 364, "recursionlog": 393, "refer": 447, "relabel": 416, "replace_valu": 188, "replace_variable_valu": 144, "replace_variable_value_label": 143, "return": [3, 5, 8, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 43, 45, 46, 54, 55, 58, 61, 62, 65, 67, 68, 72, 75, 81, 82, 83, 84, 92, 94, 95, 96, 97, 98, 99, 102, 106, 115, 119, 120, 122, 123, 125, 126, 128, 129, 131, 132, 133, 136, 139, 141, 142, 146, 147, 153, 154, 155, 157, 158, 160, 161, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 195, 205, 206, 209, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 346, 349, 350, 351, 353, 354, 356, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 390, 391, 399, 400, 401, 402, 403, 407, 408, 409, 413, 414, 415, 417, 419, 421, 424, 426, 427, 428, 429, 432, 441, 446], "root": 41, "sampl": 448, "save": [42, 145], "score": 448, "search": [173, 228, 229, 232, 452], "search_object": [52, 79, 203], "search_tangl": 221, "search_tangles_uncross": 222, "search_tre": 43, "select": 449, "select_quest": 146, "select_respond": 147, "semantictextterm": 396, "sep_id": 44, "sep_si": [53, 80, 204], "sep_to_term": 392, "separ": [235, 326, 331, 343], "separation_metadata": [258, 283, 303, 321], "seps_to_atom": 330, "set_factoryfunc": 162, "set_label": 70, "set_left_child": [14, 31, 430], "set_pyreadstat_meta_data": 148, "set_right_child": [15, 32, 431], "set_valid_and_invalid_variable_valu": 149, "set_valu": 190, "set_value_label": 189, "set_variable_label": 150, "set_variable_nam": 151, "set_variable_typ": 152, "setseparationsystem": 289, "setseparationsystembas": 307, "setseparationsystemorderfunc": 325, "shape": 153, "show": 443, "side": 448, "side_count": [259, 284, 304, 322], "similar": [377, 448, 451], "simpl": [448, 449], "simpleprogresscallback": 234, "simplesurveyfeaturefactori": 118, "simplesurveyfeaturefactorymissingvaluesbothsid": 121, "simplesurveyfeaturefactorymissingvaluesimplicit": 124, "simplesurveyfeaturefactorymissingvaluesownfeatur": 127, "simplifi": 394, "soft": 448, "soft_clustering_tuebingen": 97, "softwar": 0, "specified_featur": 174, "spectral_featur": 341, "spectral_features_split": 342, "splitgraph": 438, "standard": 409, "structur": 452, "summar": 154, "summari": [448, 449], "survei": [130, 449, 452], "surveyfeaturefactori": 156, "surveyfeaturefactorycherrypick": 159, "surveyfeaturefactorydecor": 163, "surveytangl": 166, "surveyvari": 178, "surveyvariablevalu": 194, "sweep": 448, "sweep_below": [61, 81], "sweep_on": [62, 82], "system": 448, "tangl": [0, 1, 17, 86, 93, 100, 210, 224, 228, 229, 232, 235, 326, 331, 343, 347, 348, 355, 357, 373, 377, 385, 392, 395, 397, 406, 410, 437, 448, 449, 450, 451, 452], "tangle_matrix": [45, 54, 83, 175, 205], "tangle_scor": [55, 84, 98, 206], "tanglesearchtre": 34, "tanglesearchwidget": 47, "tanglesweep": 57, "tanglesweepfeaturesi": 198, "term": 395, "textterm": 389, "threshold": 452, "to_indicator_matrix": [16, 33, 432], "to_row": 191, "togeth": 448, "totedg": 64, "totnod": 66, "trait": 452, "tree": [56, 63, 85, 207, 410, 452], "tree_height_for_agr": 46, "treenod": 434, "treeoftangl": 71, "tst_layout": 417, "tutori": 453, "typic": 452, "typical_answ": 176, "typical_mindset": 452, "ui": 437, "uncross_distinguish": 346, "uncrossingsweep": 73, "unionofinterv": 208, "updat": 444, "update_values_for_specif": [104, 108, 117, 197], "util": [343, 347, 348, 355, 357, 373, 377, 385, 392, 395, 397, 406, 410, 437], "valid_agreement_lower_bound": 177, "valid_values_as_list": 192, "value_class": 193, "variable_info": 155, "verifi": 452, "visibl": 99, "with_arrai": [260, 285, 305, 323], "with_sparse_arrai": [261, 286, 306, 324], "work": 448, "world": 448, "wrap_annotation_func_ax": 446, "xypick": 442, "your": 448}})