Search.setIndex({"docnames": ["index", "reference/api/tangles", "reference/api/tangles.FTreeNode", "reference/api/tangles.FTreeNode.children", "reference/api/tangles.FTreeNode.copy", "reference/api/tangles.FTreeNode.copy_subtree", "reference/api/tangles.FTreeNode.copy_subtree_into_children", "reference/api/tangles.FTreeNode.detach", "reference/api/tangles.FTreeNode.from_indicator_matrix", "reference/api/tangles.FTreeNode.is_leaf", "reference/api/tangles.FTreeNode.leaves_in_subtree", "reference/api/tangles.FTreeNode.level", "reference/api/tangles.FTreeNode.level_in_subtree", "reference/api/tangles.FTreeNode.path_from_root_indicator", "reference/api/tangles.FTreeNode.set_left_child", "reference/api/tangles.FTreeNode.set_right_child", "reference/api/tangles.FTreeNode.to_indicator_matrix", "reference/api/tangles.Tangle", "reference/api/tangles.Tangle.children", "reference/api/tangles.Tangle.copy", "reference/api/tangles.Tangle.copy_subtree", "reference/api/tangles.Tangle.copy_subtree_into_children", "reference/api/tangles.Tangle.detach", "reference/api/tangles.Tangle.equal_data", "reference/api/tangles.Tangle.from_indicator_matrix", "reference/api/tangles.Tangle.is_leaf", "reference/api/tangles.Tangle.leaves_in_subtree", "reference/api/tangles.Tangle.level", "reference/api/tangles.Tangle.level_in_subtree", "reference/api/tangles.Tangle.open", "reference/api/tangles.Tangle.path_from_root_indicator", "reference/api/tangles.Tangle.set_left_child", "reference/api/tangles.Tangle.set_right_child", "reference/api/tangles.Tangle.to_indicator_matrix", "reference/api/tangles.TangleSearchTree", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers", "reference/api/tangles.TangleSearchTree.k_tangles", "reference/api/tangles.TangleSearchTree.limit", "reference/api/tangles.TangleSearchTree.load", "reference/api/tangles.TangleSearchTree.maximal_tangles", "reference/api/tangles.TangleSearchTree.number_of_separations", "reference/api/tangles.TangleSearchTree.root", "reference/api/tangles.TangleSearchTree.save", "reference/api/tangles.TangleSearchTree.search_tree", "reference/api/tangles.TangleSearchTree.sep_ids", "reference/api/tangles.TangleSearchTree.tangle_matrix", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement", "reference/api/tangles.TangleSweep", "reference/api/tangles.TangleSweep.append_separation", "reference/api/tangles.TangleSweep.greedy_search", "reference/api/tangles.TangleSweep.insert_separation", "reference/api/tangles.TangleSweep.sweep_below", "reference/api/tangles.TangleSweep.sweep_one", "reference/api/tangles.TangleSweep.tree", "reference/api/tangles.ToTEdge", "reference/api/tangles.ToTEdge.other_end", "reference/api/tangles.ToTNode", "reference/api/tangles.ToTNode.degree", "reference/api/tangles.ToTNode.is_leaf", "reference/api/tangles.ToTNode.neighbours", "reference/api/tangles.ToTNode.set_label", "reference/api/tangles.TreeOfTangles", "reference/api/tangles.TreeOfTangles.any_node", "reference/api/tangles.UncrossingSweep", "reference/api/tangles.UncrossingSweep.sweep_below", "reference/api/tangles.UncrossingSweep.sweep_one", "reference/api/tangles.UncrossingSweep.tangle_matrix", "reference/api/tangles.UncrossingSweep.tree", "reference/api/tangles.agreement", "reference/api/tangles.agreement.AgreementFunc", "reference/api/tangles.agreement.AgreementFuncBitarray", "reference/api/tangles.agreement.AgreementFuncBitarrayBips", "reference/api/tangles.agreement.CalculateAgreement", "reference/api/tangles.agreement_func", "reference/api/tangles.analysis", "reference/api/tangles.analysis.coherence_levels", "reference/api/tangles.analysis.complexity_levels", "reference/api/tangles.analysis.hard_clustering_tuebingen", "reference/api/tangles.analysis.soft_clustering_tuebingen", "reference/api/tangles.analysis.tangle_score", "reference/api/tangles.analysis.visibility", "reference/api/tangles.convenience", "reference/api/tangles.convenience.NominalVariableValues", "reference/api/tangles.convenience.NominalVariableValues.invert_op", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.NumericalVariableValues", "reference/api/tangles.convenience.NumericalVariableValues.invert_op", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.OrderFunctionO1", "reference/api/tangles.convenience.OrderFunctionO1biased", "reference/api/tangles.convenience.OrderFunctionO2", "reference/api/tangles.convenience.OrderFunctionO3", "reference/api/tangles.convenience.OrderFunctionO4", "reference/api/tangles.convenience.OrdinalVariableValues", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col", "reference/api/tangles.convenience.Survey", "reference/api/tangles.convenience.Survey.__getitem__", "reference/api/tangles.convenience.Survey.check_variables", "reference/api/tangles.convenience.Survey.complete_rows", "reference/api/tangles.convenience.Survey.copy", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent", "reference/api/tangles.convenience.Survey.guess_missing_variable_ranges", "reference/api/tangles.convenience.Survey.guess_missing_variable_types", "reference/api/tangles.convenience.Survey.interpret_column_selection", "reference/api/tangles.convenience.Survey.load", "reference/api/tangles.convenience.Survey.num_questions", "reference/api/tangles.convenience.Survey.num_respondents", "reference/api/tangles.convenience.Survey.replace_variable_names", "reference/api/tangles.convenience.Survey.replace_variable_value_labels", "reference/api/tangles.convenience.Survey.replace_variable_values", "reference/api/tangles.convenience.Survey.save", "reference/api/tangles.convenience.Survey.select_questions", "reference/api/tangles.convenience.Survey.select_respondents", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data", "reference/api/tangles.convenience.Survey.set_variable_labels", "reference/api/tangles.convenience.Survey.set_variable_types", "reference/api/tangles.convenience.Survey.set_variable_value_lists", "reference/api/tangles.convenience.Survey.shape", "reference/api/tangles.convenience.Survey.summarize", "reference/api/tangles.convenience.Survey.variable_info", "reference/api/tangles.convenience.SurveyFeatureFactory", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc", "reference/api/tangles.convenience.SurveyTangles", "reference/api/tangles.convenience.SurveyTangles.change_agreement", "reference/api/tangles.convenience.SurveyTangles.feature_system", "reference/api/tangles.convenience.SurveyTangles.initialize_search", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata", "reference/api/tangles.convenience.SurveyTangles.search", "reference/api/tangles.convenience.SurveyTangles.sepcified_features", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix", "reference/api/tangles.convenience.SurveyTangles.typical_answers", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound", "reference/api/tangles.convenience.SurveyVariable", "reference/api/tangles.convenience.SurveyVariable.add_values", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list", "reference/api/tangles.convenience.SurveyVariable.create_values", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name", "reference/api/tangles.convenience.SurveyVariable.replace_values", "reference/api/tangles.convenience.SurveyVariable.set_value_labels", "reference/api/tangles.convenience.SurveyVariable.set_values", "reference/api/tangles.convenience.SurveyVariable.to_row", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list", "reference/api/tangles.convenience.SurveyVariable.value_class", "reference/api/tangles.convenience.SurveyVariableValues", "reference/api/tangles.convenience.SurveyVariableValues.invert_op", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification", "reference/api/tangles.convenience.TangleSweepFeatureSys", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.append_separation", "reference/api/tangles.convenience.TangleSweepFeatureSys.greedy_search", "reference/api/tangles.convenience.TangleSweepFeatureSys.insert_separation", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_sep_ids", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_below", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_one", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree", "reference/api/tangles.convenience.UnionOfIntervals", "reference/api/tangles.convenience.binary_unique_value_features", "reference/api/tangles.convenience.extensive_numericvar_features", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides", "reference/api/tangles.convenience.nominalvar_features_all_cats", "reference/api/tangles.convenience.numericvar_features_inside_regular_bins", "reference/api/tangles.convenience.numericvar_features_split_regular_ge", "reference/api/tangles.convenience.ordinalvar_features_ge_all_splits", "reference/api/tangles.convenience.search_tangles", "reference/api/tangles.convenience.search_tangles_uncrossed", "reference/api/tangles.convenience.simple_unique_value_features", "reference/api/tangles.guiding", "reference/api/tangles.guiding.get_tangle_by_path", "reference/api/tangles.guiding.guided_tangle", "reference/api/tangles.guiding.is_guiding", "reference/api/tangles.search", "reference/api/tangles.search.extending_tangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles", "reference/api/tangles.search.progress", "reference/api/tangles.search.progress.DefaultProgressCallback", "reference/api/tangles.separations", "reference/api/tangles.separations.FeatureSystem", "reference/api/tangles.separations.FeatureSystem.__getitem__", "reference/api/tangles.separations.FeatureSystem.add_features", "reference/api/tangles.separations.FeatureSystem.add_seps", "reference/api/tangles.separations.FeatureSystem.all_feature_ids", "reference/api/tangles.separations.FeatureSystem.all_sep_ids", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info", "reference/api/tangles.separations.FeatureSystem.compute_infimum", "reference/api/tangles.separations.FeatureSystem.crossing_seps", "reference/api/tangles.separations.FeatureSystem.feature_metadata", "reference/api/tangles.separations.FeatureSystem.get_corners", "reference/api/tangles.separations.FeatureSystem.get_feature_ids", "reference/api/tangles.separations.FeatureSystem.get_sep_ids", "reference/api/tangles.separations.FeatureSystem.infimum_of_two", "reference/api/tangles.separations.FeatureSystem.is_le", "reference/api/tangles.separations.FeatureSystem.is_nested", "reference/api/tangles.separations.FeatureSystem.is_subset", "reference/api/tangles.separations.FeatureSystem.metadata_matrix", "reference/api/tangles.separations.FeatureSystem.separation_metadata", "reference/api/tangles.separations.FeatureSystem.with_array", "reference/api/tangles.separations.FeatureSystem.with_sparse_array", "reference/api/tangles.separations.MetaData", "reference/api/tangles.separations.MetaData.append", "reference/api/tangles.separations.SetSeparationSystem", "reference/api/tangles.separations.SetSeparationSystem.__getitem__", "reference/api/tangles.separations.SetSeparationSystem.add_seps", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps", "reference/api/tangles.separations.SetSeparationSystem.get_corners", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystem.infimum_of_two", "reference/api/tangles.separations.SetSeparationSystem.is_le", "reference/api/tangles.separations.SetSeparationSystem.is_nested", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata", "reference/api/tangles.separations.SetSeparationSystem.with_array", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemBase", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids", "reference/api/tangles.separations.SetSeparationSystemBase.infimum_of_two", "reference/api/tangles.separations.SetSeparationSystemBase.is_le", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata", "reference/api/tangles.separations.SetSeparationSystemBase.with_array", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array", "reference/api/tangles.separations.SetSeparationSystemOrderFunc", "reference/api/tangles.separations.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators", "reference/api/tangles.separations.atomic_sets.atomic_sets", "reference/api/tangles.separations.atomic_sets.atomic_to_seps", "reference/api/tangles.separations.atomic_sets.seps_to_atomic", "reference/api/tangles.separations.finding", "reference/api/tangles.separations.finding.OrderFuncDerivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative", "reference/api/tangles.separations.finding.add_all_corners_of_features", "reference/api/tangles.separations.finding.min_S_T_cut", "reference/api/tangles.separations.finding.minimize_cut", "reference/api/tangles.separations.finding.nodal_domains", "reference/api/tangles.separations.finding.pca_features", "reference/api/tangles.separations.finding.random_features", "reference/api/tangles.separations.finding.spectral_features", "reference/api/tangles.separations.finding.spectral_features_splitted", "reference/api/tangles.separations.util", "reference/api/tangles.separations.util.order_func_balance", "reference/api/tangles.separations.util.order_func_min_side_size", "reference/api/tangles.uncross_distinguishers", "reference/api/tangles.util", "reference/api/tangles.util.entropy", "reference/api/tangles.util.entropy.colsplit_mutual_information", "reference/api/tangles.util.entropy.datapointwise_information_gains", "reference/api/tangles.util.entropy.entropy", "reference/api/tangles.util.entropy.information_gain", "reference/api/tangles.util.entropy.joint_entropy", "reference/api/tangles.util.entropy.pairwise_mutual_information", "reference/api/tangles.util.graph", "reference/api/tangles.util.graph.connected_component_indicators", "reference/api/tangles.util.graph.cut_weight", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative", "reference/api/tangles.util.graph.cut_weight.cut_weight_order", "reference/api/tangles.util.graph.cut_weight.ncut_order", "reference/api/tangles.util.graph.cut_weight.ratiocut_order", "reference/api/tangles.util.graph.greedy_neighborhood", "reference/api/tangles.util.graph.greedy_neighborhood_old", "reference/api/tangles.util.graph.laplacian", "reference/api/tangles.util.graph.minor", "reference/api/tangles.util.graph.minor.contract_graph", "reference/api/tangles.util.graph.modularity_matrix", "reference/api/tangles.util.graph.normalized_laplacian", "reference/api/tangles.util.graph.similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph", "reference/api/tangles.util.graph.similarity.grid_distance_graph", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors", "reference/api/tangles.util.logic", "reference/api/tangles.util.logic.ConjunctiveNormalForm", "reference/api/tangles.util.logic.DisjunctiveNormalForm", "reference/api/tangles.util.logic.LogicTerm", "reference/api/tangles.util.logic.TextTerm", "reference/api/tangles.util.logic.append", "reference/api/tangles.util.logic.distribute", "reference/api/tangles.util.logic.sep_to_term", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic", "reference/api/tangles.util.logic.simplify", "reference/api/tangles.util.logic.term", "reference/api/tangles.util.logic.term.SemanticTextTerm", "reference/api/tangles.util.matrix_order", "reference/api/tangles.util.matrix_order.MatrixOrderSVD", "reference/api/tangles.util.matrix_order.covariance_order", "reference/api/tangles.util.matrix_order.logdet_order", "reference/api/tangles.util.matrix_order.margin_order_matrix", "reference/api/tangles.util.matrix_order.matrix_order", "reference/api/tangles.util.matrix_order.o_five", "reference/api/tangles.util.matrix_order.o_seven", "reference/api/tangles.util.preprocessing", "reference/api/tangles.util.preprocessing.balance", "reference/api/tangles.util.preprocessing.normalize_length", "reference/api/tangles.util.preprocessing.standardize", "reference/api/tangles.util.tree", "reference/api/tangles.util.tree.BinTreeNetworkX", "reference/api/tangles.util.tree.BinTreeNetworkX.draw", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label", "reference/api/tangles.util.tree.BinTreeNetworkX.graph", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout", "reference/api/tangles.util.tree.BinTreeNode", "reference/api/tangles.util.tree.BinTreeNode.children", "reference/api/tangles.util.tree.BinTreeNode.copy", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children", "reference/api/tangles.util.tree.BinTreeNode.detach", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix", "reference/api/tangles.util.tree.BinTreeNode.is_leaf", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.level", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator", "reference/api/tangles.util.tree.BinTreeNode.set_left_child", "reference/api/tangles.util.tree.BinTreeNode.set_right_child", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix", "reference/api/tangles.util.tree.GraphNode", "reference/api/tangles.util.tree.TreeNode", "reference/api/tangles.util.tree.plot_tree", "reference/api/tangles.util.tree.print_node_label", "reference/api/tangles.util.ui", "reference/api/tangles.util.ui.SplitGraph", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles", "reference/api/tangles.util.ui.XYPicker", "reference/api/tangles.util.ui.XYPicker.show", "reference/api/tangles.util.ui.XYPicker.update", "reference/api/tangles.util.ui.plot_annotated", "reference/api/tangles.util.ui.wrap_annotation_func_ax", "reference/index", "tutorials/EuropeanValueStudies", "tutorials/index"], "filenames": ["index.rst", "reference/api/tangles.rst", "reference/api/tangles.FTreeNode.rst", "reference/api/tangles.FTreeNode.children.rst", "reference/api/tangles.FTreeNode.copy.rst", "reference/api/tangles.FTreeNode.copy_subtree.rst", "reference/api/tangles.FTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.FTreeNode.detach.rst", "reference/api/tangles.FTreeNode.from_indicator_matrix.rst", "reference/api/tangles.FTreeNode.is_leaf.rst", "reference/api/tangles.FTreeNode.leaves_in_subtree.rst", "reference/api/tangles.FTreeNode.level.rst", "reference/api/tangles.FTreeNode.level_in_subtree.rst", "reference/api/tangles.FTreeNode.path_from_root_indicator.rst", "reference/api/tangles.FTreeNode.set_left_child.rst", "reference/api/tangles.FTreeNode.set_right_child.rst", "reference/api/tangles.FTreeNode.to_indicator_matrix.rst", "reference/api/tangles.Tangle.rst", "reference/api/tangles.Tangle.children.rst", "reference/api/tangles.Tangle.copy.rst", "reference/api/tangles.Tangle.copy_subtree.rst", "reference/api/tangles.Tangle.copy_subtree_into_children.rst", "reference/api/tangles.Tangle.detach.rst", "reference/api/tangles.Tangle.equal_data.rst", "reference/api/tangles.Tangle.from_indicator_matrix.rst", "reference/api/tangles.Tangle.is_leaf.rst", "reference/api/tangles.Tangle.leaves_in_subtree.rst", "reference/api/tangles.Tangle.level.rst", "reference/api/tangles.Tangle.level_in_subtree.rst", "reference/api/tangles.Tangle.open.rst", "reference/api/tangles.Tangle.path_from_root_indicator.rst", "reference/api/tangles.Tangle.set_left_child.rst", "reference/api/tangles.Tangle.set_right_child.rst", "reference/api/tangles.Tangle.to_indicator_matrix.rst", "reference/api/tangles.TangleSearchTree.rst", "reference/api/tangles.TangleSearchTree.get_efficient_distinguishers.rst", "reference/api/tangles.TangleSearchTree.k_tangles.rst", "reference/api/tangles.TangleSearchTree.limit.rst", "reference/api/tangles.TangleSearchTree.load.rst", "reference/api/tangles.TangleSearchTree.maximal_tangles.rst", "reference/api/tangles.TangleSearchTree.number_of_separations.rst", "reference/api/tangles.TangleSearchTree.root.rst", "reference/api/tangles.TangleSearchTree.save.rst", "reference/api/tangles.TangleSearchTree.search_tree.rst", "reference/api/tangles.TangleSearchTree.sep_ids.rst", "reference/api/tangles.TangleSearchTree.tangle_matrix.rst", "reference/api/tangles.TangleSearchTree.tree_height_for_agreement.rst", "reference/api/tangles.TangleSweep.rst", "reference/api/tangles.TangleSweep.append_separation.rst", "reference/api/tangles.TangleSweep.greedy_search.rst", "reference/api/tangles.TangleSweep.insert_separation.rst", "reference/api/tangles.TangleSweep.sweep_below.rst", "reference/api/tangles.TangleSweep.sweep_one.rst", "reference/api/tangles.TangleSweep.tree.rst", "reference/api/tangles.ToTEdge.rst", "reference/api/tangles.ToTEdge.other_end.rst", "reference/api/tangles.ToTNode.rst", "reference/api/tangles.ToTNode.degree.rst", "reference/api/tangles.ToTNode.is_leaf.rst", "reference/api/tangles.ToTNode.neighbours.rst", "reference/api/tangles.ToTNode.set_label.rst", "reference/api/tangles.TreeOfTangles.rst", "reference/api/tangles.TreeOfTangles.any_node.rst", "reference/api/tangles.UncrossingSweep.rst", "reference/api/tangles.UncrossingSweep.sweep_below.rst", "reference/api/tangles.UncrossingSweep.sweep_one.rst", "reference/api/tangles.UncrossingSweep.tangle_matrix.rst", "reference/api/tangles.UncrossingSweep.tree.rst", "reference/api/tangles.agreement.rst", "reference/api/tangles.agreement.AgreementFunc.rst", "reference/api/tangles.agreement.AgreementFuncBitarray.rst", "reference/api/tangles.agreement.AgreementFuncBitarrayBips.rst", "reference/api/tangles.agreement.CalculateAgreement.rst", "reference/api/tangles.agreement_func.rst", "reference/api/tangles.analysis.rst", "reference/api/tangles.analysis.coherence_levels.rst", "reference/api/tangles.analysis.complexity_levels.rst", "reference/api/tangles.analysis.hard_clustering_tuebingen.rst", "reference/api/tangles.analysis.soft_clustering_tuebingen.rst", "reference/api/tangles.analysis.tangle_score.rst", "reference/api/tangles.analysis.visibility.rst", "reference/api/tangles.convenience.rst", "reference/api/tangles.convenience.NominalVariableValues.rst", "reference/api/tangles.convenience.NominalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NominalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NominalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.NumericalVariableValues.rst", "reference/api/tangles.convenience.NumericalVariableValues.invert_op.rst", "reference/api/tangles.convenience.NumericalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.NumericalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.OrderFunctionO1.rst", "reference/api/tangles.convenience.OrderFunctionO1biased.rst", "reference/api/tangles.convenience.OrderFunctionO2.rst", "reference/api/tangles.convenience.OrderFunctionO3.rst", "reference/api/tangles.convenience.OrderFunctionO4.rst", "reference/api/tangles.convenience.OrdinalVariableValues.rst", "reference/api/tangles.convenience.OrdinalVariableValues.invert_op.rst", "reference/api/tangles.convenience.OrdinalVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.OrdinalVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features.rst", "reference/api/tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col.rst", "reference/api/tangles.convenience.Survey.rst", "reference/api/tangles.convenience.Survey.__getitem__.rst", "reference/api/tangles.convenience.Survey.check_variables.rst", "reference/api/tangles.convenience.Survey.complete_rows.rst", "reference/api/tangles.convenience.Survey.copy.rst", "reference/api/tangles.convenience.Survey.count_number_of_unique_answers.rst", "reference/api/tangles.convenience.Survey.count_valid_answers_per_respondent.rst", "reference/api/tangles.convenience.Survey.guess_missing_variable_ranges.rst", "reference/api/tangles.convenience.Survey.guess_missing_variable_types.rst", "reference/api/tangles.convenience.Survey.interpret_column_selection.rst", "reference/api/tangles.convenience.Survey.load.rst", "reference/api/tangles.convenience.Survey.num_questions.rst", "reference/api/tangles.convenience.Survey.num_respondents.rst", "reference/api/tangles.convenience.Survey.replace_variable_names.rst", "reference/api/tangles.convenience.Survey.replace_variable_value_labels.rst", "reference/api/tangles.convenience.Survey.replace_variable_values.rst", "reference/api/tangles.convenience.Survey.save.rst", "reference/api/tangles.convenience.Survey.select_questions.rst", "reference/api/tangles.convenience.Survey.select_respondents.rst", "reference/api/tangles.convenience.Survey.set_pyreadstat_meta_data.rst", "reference/api/tangles.convenience.Survey.set_variable_labels.rst", "reference/api/tangles.convenience.Survey.set_variable_types.rst", "reference/api/tangles.convenience.Survey.set_variable_value_lists.rst", "reference/api/tangles.convenience.Survey.shape.rst", "reference/api/tangles.convenience.Survey.summarize.rst", "reference/api/tangles.convenience.Survey.variable_info.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactory.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col.rst", "reference/api/tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc.rst", "reference/api/tangles.convenience.SurveyTangles.rst", "reference/api/tangles.convenience.SurveyTangles.change_agreement.rst", "reference/api/tangles.convenience.SurveyTangles.feature_system.rst", "reference/api/tangles.convenience.SurveyTangles.initialize_search.rst", "reference/api/tangles.convenience.SurveyTangles.ordered_metadata.rst", "reference/api/tangles.convenience.SurveyTangles.search.rst", "reference/api/tangles.convenience.SurveyTangles.sepcified_features.rst", "reference/api/tangles.convenience.SurveyTangles.tangle_matrix.rst", "reference/api/tangles.convenience.SurveyTangles.typical_answers.rst", "reference/api/tangles.convenience.SurveyTangles.valid_agreement_lower_bound.rst", "reference/api/tangles.convenience.SurveyVariable.rst", "reference/api/tangles.convenience.SurveyVariable.add_values.rst", "reference/api/tangles.convenience.SurveyVariable.all_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.create_values.rst", "reference/api/tangles.convenience.SurveyVariable.invalid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.is_nominal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_numeric_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_ordinal_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type.rst", "reference/api/tangles.convenience.SurveyVariable.is_valid_type_name.rst", "reference/api/tangles.convenience.SurveyVariable.replace_values.rst", "reference/api/tangles.convenience.SurveyVariable.set_value_labels.rst", "reference/api/tangles.convenience.SurveyVariable.set_values.rst", "reference/api/tangles.convenience.SurveyVariable.to_row.rst", "reference/api/tangles.convenience.SurveyVariable.valid_values_as_list.rst", "reference/api/tangles.convenience.SurveyVariable.value_class.rst", "reference/api/tangles.convenience.SurveyVariableValues.rst", "reference/api/tangles.convenience.SurveyVariableValues.invert_op.rst", "reference/api/tangles.convenience.SurveyVariableValues.possible_values_representation.rst", "reference/api/tangles.convenience.SurveyVariableValues.update_values_for_specification.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.append_separation.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.greedy_search.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.insert_separation.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.lower_agreement.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.original_sep_ids.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_below.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.sweep_one.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tangle_matrix.rst", "reference/api/tangles.convenience.TangleSweepFeatureSys.tree.rst", "reference/api/tangles.convenience.UnionOfIntervals.rst", "reference/api/tangles.convenience.binary_unique_value_features.rst", "reference/api/tangles.convenience.extensive_numericvar_features.rst", "reference/api/tangles.convenience.feats2seps_invalids_to_both_sides.rst", "reference/api/tangles.convenience.nominalvar_features_all_cats.rst", "reference/api/tangles.convenience.numericvar_features_inside_regular_bins.rst", "reference/api/tangles.convenience.numericvar_features_split_regular_ge.rst", "reference/api/tangles.convenience.ordinalvar_features_ge_all_splits.rst", "reference/api/tangles.convenience.search_tangles.rst", "reference/api/tangles.convenience.search_tangles_uncrossed.rst", "reference/api/tangles.convenience.simple_unique_value_features.rst", "reference/api/tangles.guiding.rst", "reference/api/tangles.guiding.get_tangle_by_path.rst", "reference/api/tangles.guiding.guided_tangle.rst", "reference/api/tangles.guiding.is_guiding.rst", "reference/api/tangles.search.rst", "reference/api/tangles.search.extending_tangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.rst", "reference/api/tangles.search.extending_tangles.ExtendingTangles.extend_tangles.rst", "reference/api/tangles.search.progress.rst", "reference/api/tangles.search.progress.DefaultProgressCallback.rst", "reference/api/tangles.separations.rst", "reference/api/tangles.separations.FeatureSystem.rst", "reference/api/tangles.separations.FeatureSystem.__getitem__.rst", "reference/api/tangles.separations.FeatureSystem.add_features.rst", "reference/api/tangles.separations.FeatureSystem.add_seps.rst", "reference/api/tangles.separations.FeatureSystem.all_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.all_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.assemble_meta_info.rst", "reference/api/tangles.separations.FeatureSystem.compute_infimum.rst", "reference/api/tangles.separations.FeatureSystem.crossing_seps.rst", "reference/api/tangles.separations.FeatureSystem.feature_metadata.rst", "reference/api/tangles.separations.FeatureSystem.get_corners.rst", "reference/api/tangles.separations.FeatureSystem.get_feature_ids.rst", "reference/api/tangles.separations.FeatureSystem.get_sep_ids.rst", "reference/api/tangles.separations.FeatureSystem.infimum_of_two.rst", "reference/api/tangles.separations.FeatureSystem.is_le.rst", "reference/api/tangles.separations.FeatureSystem.is_nested.rst", "reference/api/tangles.separations.FeatureSystem.is_subset.rst", "reference/api/tangles.separations.FeatureSystem.metadata_matrix.rst", "reference/api/tangles.separations.FeatureSystem.separation_metadata.rst", "reference/api/tangles.separations.FeatureSystem.with_array.rst", "reference/api/tangles.separations.FeatureSystem.with_sparse_array.rst", "reference/api/tangles.separations.MetaData.rst", "reference/api/tangles.separations.MetaData.append.rst", "reference/api/tangles.separations.SetSeparationSystem.rst", "reference/api/tangles.separations.SetSeparationSystem.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystem.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystem.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystem.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystem.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystem.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystem.infimum_of_two.rst", "reference/api/tangles.separations.SetSeparationSystem.is_le.rst", "reference/api/tangles.separations.SetSeparationSystem.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystem.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystem.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystem.with_array.rst", "reference/api/tangles.separations.SetSeparationSystem.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.rst", "reference/api/tangles.separations.SetSeparationSystemBase.__getitem__.rst", "reference/api/tangles.separations.SetSeparationSystemBase.add_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.all_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.assemble_meta_info.rst", "reference/api/tangles.separations.SetSeparationSystemBase.compute_infimum.rst", "reference/api/tangles.separations.SetSeparationSystemBase.crossing_seps.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_corners.rst", "reference/api/tangles.separations.SetSeparationSystemBase.get_sep_ids.rst", "reference/api/tangles.separations.SetSeparationSystemBase.infimum_of_two.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_le.rst", "reference/api/tangles.separations.SetSeparationSystemBase.is_nested.rst", "reference/api/tangles.separations.SetSeparationSystemBase.metadata_matrix.rst", "reference/api/tangles.separations.SetSeparationSystemBase.separation_metadata.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_array.rst", "reference/api/tangles.separations.SetSeparationSystemBase.with_sparse_array.rst", "reference/api/tangles.separations.SetSeparationSystemOrderFunc.rst", "reference/api/tangles.separations.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_set_indicators.rst", "reference/api/tangles.separations.atomic_sets.atomic_sets.rst", "reference/api/tangles.separations.atomic_sets.atomic_to_seps.rst", "reference/api/tangles.separations.atomic_sets.seps_to_atomic.rst", "reference/api/tangles.separations.finding.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative.rst", "reference/api/tangles.separations.finding.OrderFuncDerivative.discrete_derivative.rst", "reference/api/tangles.separations.finding.add_all_corners_of_features.rst", "reference/api/tangles.separations.finding.min_S_T_cut.rst", "reference/api/tangles.separations.finding.minimize_cut.rst", "reference/api/tangles.separations.finding.nodal_domains.rst", "reference/api/tangles.separations.finding.pca_features.rst", "reference/api/tangles.separations.finding.random_features.rst", "reference/api/tangles.separations.finding.spectral_features.rst", "reference/api/tangles.separations.finding.spectral_features_splitted.rst", "reference/api/tangles.separations.util.rst", "reference/api/tangles.separations.util.order_func_balance.rst", "reference/api/tangles.separations.util.order_func_min_side_size.rst", "reference/api/tangles.uncross_distinguishers.rst", "reference/api/tangles.util.rst", "reference/api/tangles.util.entropy.rst", "reference/api/tangles.util.entropy.colsplit_mutual_information.rst", "reference/api/tangles.util.entropy.datapointwise_information_gains.rst", "reference/api/tangles.util.entropy.entropy.rst", "reference/api/tangles.util.entropy.information_gain.rst", "reference/api/tangles.util.entropy.joint_entropy.rst", "reference/api/tangles.util.entropy.pairwise_mutual_information.rst", "reference/api/tangles.util.graph.rst", "reference/api/tangles.util.graph.connected_component_indicators.rst", "reference/api/tangles.util.graph.cut_weight.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.NCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative.rst", "reference/api/tangles.util.graph.cut_weight.cut_weight_order.rst", "reference/api/tangles.util.graph.cut_weight.ncut_order.rst", "reference/api/tangles.util.graph.cut_weight.ratiocut_order.rst", "reference/api/tangles.util.graph.greedy_neighborhood.rst", "reference/api/tangles.util.graph.greedy_neighborhood_old.rst", "reference/api/tangles.util.graph.laplacian.rst", "reference/api/tangles.util.graph.minor.rst", "reference/api/tangles.util.graph.minor.contract_graph.rst", "reference/api/tangles.util.graph.modularity_matrix.rst", "reference/api/tangles.util.graph.normalized_laplacian.rst", "reference/api/tangles.util.graph.similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity.rst", "reference/api/tangles.util.graph.similarity.cosine_similarity_graph_csr_data.rst", "reference/api/tangles.util.graph.similarity.epsilon_neighborhood_graph.rst", "reference/api/tangles.util.graph.similarity.grid_distance_graph.rst", "reference/api/tangles.util.graph.similarity.image_to_similarity_graph.rst", "reference/api/tangles.util.graph.similarity.k_nearest_neighbors.rst", "reference/api/tangles.util.logic.rst", "reference/api/tangles.util.logic.ConjunctiveNormalForm.rst", "reference/api/tangles.util.logic.DisjunctiveNormalForm.rst", "reference/api/tangles.util.logic.LogicTerm.rst", "reference/api/tangles.util.logic.TextTerm.rst", "reference/api/tangles.util.logic.append.rst", "reference/api/tangles.util.logic.distribute.rst", "reference/api/tangles.util.logic.sep_to_term.rst", "reference/api/tangles.util.logic.sep_to_term.RecursionLogic.rst", "reference/api/tangles.util.logic.simplify.rst", "reference/api/tangles.util.logic.term.rst", "reference/api/tangles.util.logic.term.SemanticTextTerm.rst", "reference/api/tangles.util.matrix_order.rst", "reference/api/tangles.util.matrix_order.MatrixOrderSVD.rst", "reference/api/tangles.util.matrix_order.covariance_order.rst", "reference/api/tangles.util.matrix_order.logdet_order.rst", "reference/api/tangles.util.matrix_order.margin_order_matrix.rst", "reference/api/tangles.util.matrix_order.matrix_order.rst", "reference/api/tangles.util.matrix_order.o_five.rst", "reference/api/tangles.util.matrix_order.o_seven.rst", "reference/api/tangles.util.preprocessing.rst", "reference/api/tangles.util.preprocessing.balance.rst", "reference/api/tangles.util.preprocessing.normalize_length.rst", "reference/api/tangles.util.preprocessing.standardize.rst", "reference/api/tangles.util.tree.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.draw.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_ids_from_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.get_label.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.graph.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.relabel.rst", "reference/api/tangles.util.tree.BinTreeNetworkX.tst_layout.rst", "reference/api/tangles.util.tree.BinTreeNode.rst", "reference/api/tangles.util.tree.BinTreeNode.children.rst", "reference/api/tangles.util.tree.BinTreeNode.copy.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.copy_subtree_into_children.rst", "reference/api/tangles.util.tree.BinTreeNode.detach.rst", "reference/api/tangles.util.tree.BinTreeNode.from_indicator_matrix.rst", "reference/api/tangles.util.tree.BinTreeNode.is_leaf.rst", "reference/api/tangles.util.tree.BinTreeNode.leaves_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.level.rst", "reference/api/tangles.util.tree.BinTreeNode.level_in_subtree.rst", "reference/api/tangles.util.tree.BinTreeNode.path_from_root_indicator.rst", "reference/api/tangles.util.tree.BinTreeNode.set_left_child.rst", "reference/api/tangles.util.tree.BinTreeNode.set_right_child.rst", "reference/api/tangles.util.tree.BinTreeNode.to_indicator_matrix.rst", "reference/api/tangles.util.tree.GraphNode.rst", "reference/api/tangles.util.tree.TreeNode.rst", "reference/api/tangles.util.tree.plot_tree.rst", "reference/api/tangles.util.tree.print_node_label.rst", "reference/api/tangles.util.ui.rst", "reference/api/tangles.util.ui.SplitGraph.rst", "reference/api/tangles.util.ui.SplitGraph.draw_ellipses.rst", "reference/api/tangles.util.ui.SplitGraph.draw_side_and_boundary.rst", "reference/api/tangles.util.ui.SplitGraph.draw_stacked_circles.rst", "reference/api/tangles.util.ui.XYPicker.rst", "reference/api/tangles.util.ui.XYPicker.show.rst", "reference/api/tangles.util.ui.XYPicker.update.rst", "reference/api/tangles.util.ui.plot_annotated.rst", "reference/api/tangles.util.ui.wrap_annotation_func_ax.rst", "reference/index.rst", "tutorials/EuropeanValueStudies.ipynb", "tutorials/index.rst"], "titles": ["Tangle Software Documentation", "tangles", "FTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "Tangle", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "equal_data", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "open", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "TangleSearchTree", "get_efficient_distinguishers", "k_tangles", "limit", "load", "maximal_tangles", "number_of_separations", "root", "save", "search_tree", "sep_ids", "tangle_matrix", "tree_height_for_agreement", "TangleSweep", "append_separation", "greedy_search", "insert_separation", "sweep_below", "sweep_one", "tree", "ToTEdge", "other_end", "ToTNode", "degree", "is_leaf", "neighbours", "set_label", "TreeOfTangles", "any_node", "UncrossingSweep", "sweep_below", "sweep_one", "tangle_matrix", "tree", "tangles.agreement", "AgreementFunc", "AgreementFuncBitarray", "AgreementFuncBitarrayBips", "CalculateAgreement", "agreement_func", "tangles.analysis", "coherence_levels", "complexity_levels", "hard_clustering_tuebingen", "soft_clustering_tuebingen", "tangle_score", "visibility", "tangles.convenience", "NominalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "NumericalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "OrderFunctionO1", "OrderFunctionO1biased", "OrderFunctionO2", "OrderFunctionO3", "OrderFunctionO4", "OrdinalVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "SimpleSurveyFeatureFactory", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesBothSides", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesImplicit", "create_features", "create_features_for_single_col", "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures", "create_features", "create_features_for_single_col", "Survey", "__getitem__", "check_variables", "complete_rows", "copy", "count_number_of_unique_answers", "count_valid_answers_per_respondent", "guess_missing_variable_ranges", "guess_missing_variable_types", "interpret_column_selection", "load", "num_questions", "num_respondents", "replace_variable_names", "replace_variable_value_labels", "replace_variable_values", "save", "select_questions", "select_respondents", "set_pyreadstat_meta_data", "set_variable_labels", "set_variable_types", "set_variable_value_lists", "shape", "summarize", "variable_info", "SurveyFeatureFactory", "create_features", "create_features_for_single_col", "SurveyFeatureFactoryDecorator", "create_features", "create_features_for_single_col", "SurveyFeatureFactory_CherryPicker", "create_features", "create_features_for_single_col", "set_factoryfunc", "SurveyTangles", "change_agreement", "feature_system", "initialize_search", "ordered_metadata", "search", "sepcified_features", "tangle_matrix", "typical_answers", "valid_agreement_lower_bound", "SurveyVariable", "add_values", "all_values_as_list", "create_values", "invalid_values_as_list", "is_nominal_type", "is_numeric_type", "is_ordinal_type", "is_valid_type", "is_valid_type_name", "replace_values", "set_value_labels", "set_values", "to_row", "valid_values_as_list", "value_class", "SurveyVariableValues", "invert_op", "possible_values_representation", "update_values_for_specification", "TangleSweepFeatureSys", "all_oriented_sep_ids", "append_separation", "greedy_search", "insert_separation", "lower_agreement", "original_sep_ids", "sweep_below", "sweep_one", "tangle_matrix", "tree", "UnionOfIntervals", "binary_unique_value_features", "extensive_numericvar_features", "feats2seps_invalids_to_both_sides", "nominalvar_features_all_cats", "numericvar_features_inside_regular_bins", "numericvar_features_split_regular_ge", "ordinalvar_features_ge_all_splits", "search_tangles", "search_tangles_uncrossed", "simple_unique_value_features", "tangles.guiding", "get_tangle_by_path", "guided_tangle", "is_guiding", "tangles.search", "tangles.search.extending_tangles", "ExtendingTangles", "extend_tangles", "tangles.search.progress", "DefaultProgressCallback", "tangles.separations", "FeatureSystem", "__getitem__", "add_features", "add_seps", "all_feature_ids", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "feature_metadata", "get_corners", "get_feature_ids", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "is_subset", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "MetaData", "append", "SetSeparationSystem", "__getitem__", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "get_corners", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "SetSeparationSystemBase", "__getitem__", "add_seps", "all_sep_ids", "assemble_meta_info", "compute_infimum", "crossing_seps", "get_corners", "get_sep_ids", "infimum_of_two", "is_le", "is_nested", "metadata_matrix", "separation_metadata", "with_array", "with_sparse_array", "SetSeparationSystemOrderFunc", "tangles.separations.atomic_sets", "atomic_set_indicators", "atomic_sets", "atomic_to_seps", "seps_to_atomic", "tangles.separations.finding", "OrderFuncDerivative", "change_discrete_derivative", "discrete_derivative", "add_all_corners_of_features", "min_S_T_cut", "minimize_cut", "nodal_domains", "pca_features", "random_features", "spectral_features", "spectral_features_splitted", "tangles.separations.util", "order_func_balance", "order_func_min_side_size", "uncross_distinguishers", "tangles.util", "tangles.util.entropy", "colsplit_mutual_information", "datapointwise_information_gains", "entropy", "information_gain", "joint_entropy", "pairwise_mutual_information", "tangles.util.graph", "connected_component_indicators", "tangles.util.graph.cut_weight", "CutWeightOrder", "change_discrete_derivative", "discrete_derivative", "NCutOrder", "change_discrete_derivative", "discrete_derivative", "RatioCutOrder", "change_discrete_derivative", "discrete_derivative", "cut_weight_order", "ncut_order", "ratiocut_order", "greedy_neighborhood", "greedy_neighborhood_old", "laplacian", "tangles.util.graph.minor", "contract_graph", "modularity_matrix", "normalized_laplacian", "tangles.util.graph.similarity", "cosine_similarity", "cosine_similarity_graph_csr_data", "epsilon_neighborhood_graph", "grid_distance_graph", "image_to_similarity_graph", "k_nearest_neighbors", "tangles.util.logic", "ConjunctiveNormalForm", "DisjunctiveNormalForm", "LogicTerm", "TextTerm", "append", "distribute", "tangles.util.logic.sep_to_term", "RecursionLogic", "simplify", "tangles.util.logic.term", "SemanticTextTerm", "tangles.util.matrix_order", "MatrixOrderSVD", "covariance_order", "logdet_order", "margin_order_matrix", "matrix_order", "o_five", "o_seven", "tangles.util.preprocessing", "balance", "normalize_length", "standardize", "tangles.util.tree", "BinTreeNetworkX", "draw", "get_ids_from_label", "get_label", "graph", "relabel", "tst_layout", "BinTreeNode", "children", "copy", "copy_subtree", "copy_subtree_into_children", "detach", "from_indicator_matrix", "is_leaf", "leaves_in_subtree", "level", "level_in_subtree", "path_from_root_indicator", "set_left_child", "set_right_child", "to_indicator_matrix", "GraphNode", "TreeNode", "plot_tree", "print_node_label", "tangles.util.ui", "SplitGraph", "draw_ellipses", "draw_side_and_boundary", "draw_stacked_circles", "XYPicker", "show", "update", "plot_annotated", "wrap_annotation_func_ax", "Reference", "Mindsets - Survey Tangles", "Tutorials"], "terms": {"tutori": 0, "mindset": [0, 387], "survei": [0, 81, 82, 86, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 155, 157, 158, 169, 173, 190, 194, 387], "refer": [0, 112, 147, 152, 196, 197], "modul": [1, 203, 209, 287, 295, 324], "agreement": [1, 17, 19, 23, 26, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 69, 70, 71, 72, 73, 147, 148, 150, 152, 153, 156, 177, 179, 180, 181, 182, 184, 185, 186, 200, 201, 205, 206, 286, 386], "analysi": [1, 75, 76, 77, 78, 79, 80, 111, 113, 271, 279, 387], "conveni": [1, 63, 82, 86, 90, 91, 92, 93, 94, 95, 99, 102, 105, 108, 111, 113, 118, 137, 140, 143, 147, 152, 157, 173, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 386], "guid": [1, 200, 201, 202], "calcul": [1, 73, 74, 75, 76, 77, 78, 79, 80, 199, 205, 210, 217, 220, 223, 227, 233, 238, 240, 242, 245, 249, 254, 256, 258, 261, 271, 275, 277, 278, 279, 289, 307, 308, 309, 313, 314, 321, 322, 324, 329, 330, 386], "analys": [1, 199, 282, 386], "set": [1, 2, 14, 15, 17, 31, 32, 34, 39, 45, 49, 56, 60, 81, 82, 86, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 157, 169, 180, 186, 191, 199, 201, 229, 230, 247, 248, 263, 264, 266, 267, 268, 276, 278, 279, 280, 310, 311, 318, 337, 340, 356, 368, 369, 373, 380, 381, 386], "search": [1, 10, 17, 26, 34, 37, 38, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 61, 63, 64, 65, 66, 67, 81, 147, 148, 150, 151, 154, 177, 179, 180, 181, 182, 184, 185, 196, 197, 199, 200, 201, 205, 208, 271, 276, 277, 286, 295, 310, 311, 353, 364, 373, 386], "separ": [1, 17, 34, 35, 40, 44, 45, 47, 48, 50, 63, 66, 73, 75, 76, 80, 81, 85, 89, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 137, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 173, 176, 177, 178, 179, 181, 183, 186, 191, 196, 197, 205, 206, 210, 213, 215, 216, 217, 218, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 307, 308, 309, 337, 340, 386], "util": [1, 209, 284, 285, 289, 290, 291, 292, 293, 294, 296, 298, 301, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 356, 371, 372, 373, 374, 376, 380, 383, 384], "class": [1, 2, 17, 34, 47, 54, 56, 61, 63, 68, 69, 70, 71, 72, 81, 82, 86, 90, 91, 92, 93, 94, 95, 99, 101, 102, 104, 105, 107, 108, 110, 111, 137, 139, 140, 142, 143, 145, 147, 157, 173, 177, 178, 188, 204, 205, 207, 208, 209, 210, 231, 233, 249, 265, 271, 272, 297, 298, 301, 304, 324, 325, 326, 327, 328, 331, 332, 334, 335, 336, 337, 348, 349, 356, 371, 372, 375, 376, 380, 386], "ftreenod": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "an": [1, 2, 8, 16, 17, 24, 33, 46, 50, 54, 63, 73, 81, 82, 83, 85, 86, 87, 89, 95, 96, 98, 108, 113, 117, 119, 126, 147, 152, 157, 172, 173, 174, 176, 181, 190, 194, 195, 196, 197, 212, 213, 227, 229, 230, 235, 245, 247, 248, 251, 261, 263, 264, 271, 272, 274, 275, 276, 277, 280, 281, 286, 298, 300, 301, 303, 304, 306, 317, 318, 319, 322, 337, 338, 341, 351, 356, 362, 370, 373, 375, 380, 383, 384, 386], "forbidden": [1, 2, 47, 63], "tupl": [1, 2, 17, 35, 45, 47, 63, 73, 82, 83, 85, 86, 87, 89, 95, 96, 98, 100, 101, 103, 104, 106, 107, 109, 110, 134, 138, 139, 141, 142, 144, 145, 146, 154, 155, 173, 174, 176, 189, 190, 192, 193, 194, 195, 198, 205, 212, 213, 216, 218, 220, 221, 222, 223, 227, 229, 230, 235, 237, 238, 239, 240, 241, 242, 245, 247, 248, 251, 253, 255, 256, 257, 258, 261, 263, 264, 276, 279, 281, 286, 355, 373, 380, 383], "tree": [1, 2, 5, 8, 10, 17, 20, 24, 26, 34, 38, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 61, 62, 63, 64, 65, 66, 148, 152, 177, 179, 180, 181, 182, 184, 185, 196, 199, 200, 201, 286, 287, 349, 350, 351, 353, 354, 355, 356, 359, 362, 364, 371, 372, 373, 374, 386], "ftt": [1, 2], "A": [1, 2, 9, 17, 25, 34, 47, 56, 60, 61, 62, 63, 66, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 96, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 114, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 159, 160, 161, 166, 170, 171, 174, 177, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 212, 213, 217, 219, 221, 222, 228, 235, 238, 241, 246, 251, 254, 257, 262, 267, 268, 271, 276, 277, 278, 279, 289, 290, 294, 295, 296, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 324, 329, 330, 334, 336, 337, 338, 339, 340, 341, 348, 349, 363, 373, 374, 375, 376, 378, 379, 380, 383, 387], "node": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 39, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 177, 179, 180, 181, 182, 184, 185, 206, 320, 323, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 376, 377, 378, 379, 386], "tanglesearchtre": [1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 63, 67, 148, 177, 186, 187, 200, 201, 386], "root": [1, 2, 5, 8, 11, 13, 16, 17, 20, 24, 27, 30, 33, 34, 43, 44, 49, 180, 353, 356, 359, 362, 365, 367, 370], "binari": [1, 2, 8, 10, 17, 24, 26, 34, 81, 99, 101, 102, 104, 105, 107, 108, 110, 137, 139, 140, 142, 143, 145, 189, 349, 356, 362, 364, 386], "i": [1, 2, 4, 5, 9, 10, 16, 17, 20, 23, 25, 26, 33, 34, 35, 39, 43, 45, 47, 48, 49, 50, 54, 55, 56, 58, 60, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 89, 95, 98, 100, 101, 103, 104, 106, 107, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 147, 148, 151, 152, 154, 155, 157, 162, 163, 164, 165, 166, 170, 172, 176, 178, 179, 180, 181, 186, 190, 193, 194, 196, 197, 199, 200, 202, 205, 206, 210, 212, 216, 217, 219, 221, 222, 224, 226, 227, 229, 230, 233, 237, 238, 241, 243, 245, 247, 248, 249, 253, 254, 257, 259, 261, 263, 264, 274, 278, 279, 280, 282, 286, 289, 291, 293, 294, 295, 300, 303, 306, 308, 312, 315, 316, 317, 320, 321, 322, 323, 324, 329, 330, 333, 334, 336, 337, 339, 340, 341, 344, 347, 349, 351, 356, 358, 359, 363, 364, 370, 373, 374, 378, 379, 380, 381, 383, 386], "creat": [1, 2, 4, 17, 19, 34, 63, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 119, 126, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 154, 155, 157, 160, 193, 194, 195, 196, 197, 210, 229, 230, 233, 247, 248, 249, 263, 264, 282, 317, 319, 320, 321, 323, 349, 356, 358, 375, 384, 386], "while": [1, 34, 153], "tanglesweep": [1, 48, 49, 50, 51, 52, 53, 63, 67, 177, 182, 187, 286, 386], "object": [1, 34, 47, 60, 63, 81, 111, 118, 120, 124, 126, 130, 147, 152, 157, 160, 170, 173, 177, 196, 197, 216, 219, 228, 237, 246, 253, 262, 286, 336, 337, 373, 374, 378, 379, 380, 383, 384, 386], "which": [1, 8, 10, 17, 24, 26, 34, 35, 36, 37, 39, 47, 48, 49, 50, 51, 53, 61, 63, 64, 67, 73, 75, 76, 79, 80, 111, 114, 131, 147, 152, 153, 177, 179, 180, 181, 184, 187, 196, 200, 201, 205, 206, 227, 245, 261, 267, 279, 280, 286, 314, 324, 333, 334, 340, 345, 346, 347, 349, 351, 362, 364, 373, 375, 380, 386], "build": [1, 34, 38, 43, 47, 152, 386], "extend": [1, 34, 37, 47, 48, 49, 50, 51, 52, 63, 64, 65, 81, 140, 143, 177, 179, 180, 181, 182, 184, 185, 204, 205, 206], "totedg": [1, 55, 61], "edg": [1, 17, 34, 54, 55, 61, 307, 308, 309, 310, 311, 319, 322, 353, 373, 377, 378, 379, 386], "totnod": [1, 55, 57, 58, 59, 60, 61, 62], "treeoftangl": [1, 62], "ar": [1, 10, 16, 26, 33, 35, 36, 39, 45, 48, 49, 50, 61, 63, 66, 80, 84, 88, 97, 100, 103, 105, 106, 109, 111, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 143, 144, 147, 151, 152, 153, 154, 155, 157, 158, 167, 168, 173, 175, 179, 180, 181, 186, 190, 194, 196, 197, 200, 205, 206, 210, 216, 218, 220, 221, 222, 225, 227, 233, 237, 239, 240, 241, 244, 245, 249, 253, 255, 256, 257, 260, 261, 267, 276, 278, 280, 282, 286, 289, 307, 310, 311, 314, 317, 318, 321, 323, 324, 334, 337, 340, 341, 349, 351, 353, 355, 364, 370, 379, 380, 386], "precis": [1, 17, 61], "maxim": [1, 34, 39, 45, 61, 177, 186, 196, 197, 199, 201, 277, 320, 321, 386], "uncrossingsweep": [1, 64, 65, 66, 67, 147, 197], "wrap": [1, 63], "uncross": [1, 63, 64, 65, 66, 81, 150, 151, 152, 153, 154, 196, 197, 286], "function": [1, 2, 4, 47, 63, 73, 74, 81, 84, 85, 88, 89, 97, 98, 99, 111, 120, 143, 146, 147, 150, 152, 157, 166, 175, 176, 178, 189, 190, 192, 193, 194, 195, 196, 198, 199, 205, 266, 271, 276, 277, 278, 281, 283, 284, 285, 286, 288, 292, 295, 297, 307, 308, 309, 313, 317, 320, 321, 322, 324, 336, 337, 338, 339, 340, 341, 344, 348, 355, 356, 358, 373, 374, 375, 380, 383, 384, 386], "agreement_func": [1, 47, 72, 205], "return": [1, 2, 17, 34, 47, 54, 56, 61, 63, 81, 82, 84, 86, 88, 95, 97, 111, 130, 147, 157, 172, 173, 175, 177, 210, 233, 249, 272, 274, 297, 298, 300, 301, 303, 304, 306, 317, 356, 373, 386], "valu": [1, 13, 17, 19, 23, 30, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 63, 64, 66, 73, 77, 78, 81, 82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 118, 120, 125, 126, 132, 133, 138, 139, 141, 142, 144, 145, 148, 157, 158, 159, 161, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 184, 186, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 227, 245, 261, 274, 278, 279, 283, 284, 285, 286, 300, 303, 306, 321, 322, 329, 330, 336, 337, 338, 340, 341, 345, 367, 383, 386], "given": [1, 16, 33, 34, 46, 54, 55, 63, 73, 75, 76, 99, 101, 102, 104, 105, 107, 108, 110, 126, 129, 137, 139, 140, 142, 143, 145, 147, 155, 199, 201, 202, 275, 280, 297, 307, 308, 309, 313, 314, 353, 370, 375, 380, 381, 384, 386], "system": [1, 63, 73, 77, 78, 79, 81, 147, 149, 177, 196, 201, 202, 210, 212, 213, 217, 220, 221, 222, 223, 229, 230, 233, 235, 238, 240, 241, 242, 247, 248, 249, 251, 254, 256, 257, 258, 263, 264, 279, 286, 355, 386], "uncross_distinguish": 1, "effici": [1, 34, 35, 61, 63, 286], "distinguish": [1, 34, 35, 36, 39, 61, 63, 76, 80, 81, 150, 151, 152, 153, 154, 196, 197, 286], "least": [1, 34, 35, 36, 39, 43, 45, 48, 49, 50, 66, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 150, 152, 177, 179, 180, 181, 186, 194, 195, 200, 201, 286, 386], "specifi": [1, 12, 28, 34, 36, 39, 43, 45, 47, 49, 50, 51, 63, 64, 85, 89, 98, 99, 100, 102, 103, 105, 106, 108, 109, 129, 137, 138, 140, 141, 143, 144, 147, 151, 153, 154, 155, 173, 176, 177, 180, 181, 182, 184, 186, 199, 200, 202, 210, 224, 233, 243, 249, 259, 271, 277, 278, 286, 344, 345, 346, 347, 349, 351, 352, 366, 380, 383, 386], "tangl": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 47, 48, 49, 50, 54, 56, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 86, 90, 91, 92, 93, 94, 95, 99, 102, 105, 108, 111, 113, 118, 137, 140, 143, 147, 148, 150, 151, 152, 153, 154, 155, 157, 173, 177, 179, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 210, 231, 233, 249, 265, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 289, 290, 291, 292, 293, 294, 296, 298, 301, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 356, 371, 372, 373, 374, 376, 380, 383, 384, 385, 387], "new_sep_id": [2, 48, 50, 179, 181, 205, 206], "int": [2, 10, 11, 12, 13, 17, 26, 27, 28, 30, 35, 36, 37, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 69, 72, 85, 89, 98, 100, 103, 105, 106, 109, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 138, 141, 144, 147, 148, 150, 152, 155, 156, 176, 177, 179, 180, 181, 182, 184, 185, 186, 193, 194, 196, 197, 200, 201, 205, 206, 211, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 234, 237, 239, 240, 242, 243, 244, 245, 246, 250, 253, 255, 256, 258, 259, 260, 261, 262, 273, 277, 279, 280, 281, 282, 286, 299, 302, 305, 310, 311, 318, 319, 323, 345, 346, 347, 349, 351, 352, 354, 355, 364, 365, 366, 367, 380, 381], "parent": [2, 7, 17, 22, 50, 181, 356, 361, 386], "none": [2, 7, 8, 10, 14, 15, 17, 22, 24, 26, 31, 32, 35, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 61, 64, 65, 66, 80, 100, 102, 103, 106, 108, 109, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 140, 141, 143, 144, 150, 152, 155, 157, 158, 169, 177, 179, 180, 181, 182, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 212, 213, 216, 218, 219, 227, 228, 229, 230, 235, 237, 239, 245, 246, 247, 248, 251, 253, 255, 261, 262, 263, 264, 279, 310, 311, 312, 315, 316, 318, 319, 320, 328, 337, 349, 350, 355, 356, 361, 362, 364, 368, 369, 373, 377, 378, 379, 380, 381, 383, 386], "left_child": [2, 17, 356], "right_child": [2, 17, 356], "contain": [2, 8, 12, 16, 17, 24, 28, 33, 34, 36, 38, 39, 43, 54, 55, 63, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 125, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 155, 157, 170, 173, 174, 196, 197, 199, 200, 210, 212, 216, 220, 221, 222, 229, 230, 233, 234, 237, 241, 247, 248, 249, 250, 253, 257, 263, 264, 267, 268, 272, 274, 275, 278, 280, 281, 282, 286, 288, 294, 295, 296, 298, 300, 301, 303, 304, 306, 312, 314, 316, 318, 322, 338, 339, 341, 362, 366, 370, 377, 379, 380, 386], "everi": [2, 8, 17, 24, 36, 37, 39, 45, 66, 76, 79, 99, 120, 155, 186, 195, 199, 206, 271, 275, 279, 282, 288, 290, 291, 317, 320, 321, 323, 349, 362, 379, 386], "leaf": [2, 9, 17, 25, 56, 58, 356, 363], "method": [2, 14, 15, 17, 31, 32, 34, 47, 54, 56, 61, 63, 82, 86, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 157, 173, 177, 182, 199, 200, 205, 210, 231, 233, 249, 271, 272, 273, 274, 279, 282, 298, 299, 300, 301, 302, 303, 304, 305, 306, 349, 356, 368, 369, 376, 380], "children": [2, 9, 17, 25, 29, 206, 356, 363, 386], "list": [2, 3, 10, 12, 13, 16, 17, 18, 26, 28, 30, 33, 34, 36, 39, 45, 47, 59, 61, 81, 82, 85, 86, 89, 95, 98, 100, 103, 106, 109, 111, 112, 116, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 141, 144, 147, 150, 151, 152, 153, 154, 155, 157, 159, 161, 170, 171, 173, 176, 177, 178, 183, 189, 190, 192, 193, 194, 195, 196, 197, 198, 205, 206, 210, 211, 217, 218, 219, 227, 228, 233, 234, 238, 239, 245, 246, 249, 250, 254, 255, 261, 262, 266, 267, 268, 269, 270, 276, 310, 311, 319, 325, 326, 332, 348, 349, 351, 356, 357, 364, 366, 367, 370, 379, 380, 386], "thi": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 32, 35, 37, 39, 43, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 75, 76, 81, 82, 85, 86, 89, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 120, 122, 123, 124, 126, 127, 130, 135, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 157, 158, 160, 162, 163, 164, 165, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 186, 187, 190, 192, 193, 194, 196, 197, 200, 201, 206, 208, 210, 216, 223, 227, 233, 237, 242, 245, 249, 253, 258, 261, 272, 273, 274, 279, 281, 282, 286, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 319, 322, 323, 330, 337, 338, 340, 341, 345, 349, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 368, 369, 381, 386], "copi": [2, 5, 6, 17, 20, 21, 34, 43, 63, 111, 356, 359, 360, 386], "new": [2, 4, 5, 14, 15, 17, 19, 20, 31, 32, 34, 43, 47, 48, 50, 51, 52, 64, 65, 111, 124, 126, 128, 129, 131, 148, 177, 179, 181, 182, 184, 185, 210, 212, 220, 223, 229, 230, 233, 240, 242, 247, 248, 249, 256, 258, 263, 264, 286, 354, 356, 358, 359, 368, 369, 379, 386], "bintreenod": [2, 3, 4, 8, 10, 12, 18, 24, 26, 28, 348, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "note": [2, 4, 44, 124, 225, 244, 260, 276, 281, 315, 319, 323, 337, 338, 341, 356, 358, 386], "kind": [2, 4, 356, 358, 386], "abstract": [2, 4, 81, 84, 88, 97, 137, 139, 142, 175, 250, 254, 257, 271, 272, 274, 300, 303, 306, 356, 358], "base": [2, 4, 81, 137, 271, 272, 288, 292, 317, 319, 336, 340, 356, 358, 380, 386], "copy_subtre": [2, 17, 356], "subtre": [2, 5, 6, 17, 20, 21, 355, 356, 359, 360], "start": [2, 5, 6, 17, 20, 21, 47, 49, 76, 121, 127, 147, 148, 150, 154, 180, 271, 277, 310, 311, 356, 359, 360, 386], "copy_subtree_into_children": [2, 17, 356], "replac": [2, 6, 17, 21, 84, 88, 97, 111, 124, 125, 126, 130, 151, 155, 157, 167, 168, 175, 286, 356, 360, 386], "each": [2, 6, 17, 21, 34, 49, 61, 63, 66, 77, 78, 79, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 136, 138, 139, 141, 142, 144, 145, 147, 154, 155, 180, 190, 193, 194, 195, 196, 197, 278, 279, 280, 288, 289, 290, 292, 308, 309, 310, 311, 321, 334, 344, 345, 355, 356, 360, 373, 377, 383, 386], "child": [2, 6, 14, 15, 17, 21, 31, 32, 34, 200, 356, 360, 368, 369, 386], "detach": [2, 17, 356], "remov": [2, 7, 17, 22, 29, 50, 154, 155, 181, 206, 275, 278, 322, 356, 361, 386], "its": [2, 7, 16, 17, 22, 29, 33, 35, 75, 77, 78, 79, 80, 148, 152, 154, 155, 189, 196, 197, 206, 212, 213, 216, 223, 224, 226, 235, 237, 251, 253, 289, 290, 320, 323, 337, 338, 341, 344, 345, 356, 361, 370, 386], "pointer": [2, 7, 17, 22, 356, 361], "from_indicator_matrix": [2, 17, 356], "turn": [2, 8, 16, 17, 24, 33, 81, 152, 191, 266, 267, 269, 336, 340, 356, 362, 370, 386], "indic": [2, 8, 13, 16, 17, 24, 30, 33, 85, 89, 98, 100, 101, 103, 104, 106, 107, 109, 110, 126, 138, 139, 141, 142, 144, 145, 147, 152, 154, 176, 196, 197, 200, 210, 211, 217, 238, 254, 266, 267, 268, 275, 276, 277, 278, 289, 290, 295, 296, 310, 311, 313, 314, 336, 337, 338, 339, 341, 349, 356, 362, 367, 370, 379, 386], "matrix": [2, 8, 16, 17, 24, 33, 34, 45, 63, 66, 74, 75, 76, 77, 78, 79, 80, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 147, 150, 152, 154, 177, 186, 210, 211, 212, 213, 221, 222, 227, 229, 230, 233, 234, 235, 241, 245, 247, 248, 249, 250, 251, 257, 261, 263, 264, 266, 267, 269, 270, 271, 276, 278, 279, 281, 282, 288, 289, 290, 294, 295, 296, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 336, 337, 338, 339, 340, 341, 356, 362, 370, 386], "back": [2, 8, 17, 24, 50, 181, 194, 266, 269, 356, 362, 386], "is_leaf": [2, 17, 56, 356], "whether": [2, 9, 17, 23, 25, 35, 58, 63, 77, 78, 79, 113, 130, 154, 162, 163, 164, 165, 166, 170, 199, 200, 202, 205, 210, 217, 220, 223, 224, 225, 226, 229, 230, 231, 233, 238, 243, 244, 247, 248, 249, 254, 259, 260, 263, 264, 318, 340, 356, 363, 373, 379, 380], "leaves_in_subtre": [2, 17, 356], "find": [2, 10, 17, 26, 34, 35, 36, 111, 114, 199, 200, 201, 209, 266, 268, 272, 275, 276, 277, 278, 279, 280, 281, 282, 314, 356, 364, 386], "all": [2, 10, 12, 17, 26, 28, 34, 35, 36, 39, 45, 49, 50, 56, 59, 63, 66, 80, 82, 86, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 157, 159, 173, 177, 178, 180, 181, 183, 186, 210, 214, 215, 218, 219, 233, 236, 239, 249, 252, 255, 282, 307, 308, 309, 317, 321, 323, 340, 341, 349, 351, 356, 364, 366, 377, 380, 381, 386], "leav": [2, 10, 17, 26, 356, 364, 386], "level": [2, 12, 17, 28, 34, 35, 36, 39, 43, 44, 45, 47, 48, 49, 50, 74, 75, 76, 80, 177, 179, 180, 181, 206, 286, 356, 366, 386], "level_in_subtre": [2, 17, 356], "certain": [2, 12, 17, 28, 77, 78, 79, 356, 366, 386], "depth": [2, 10, 12, 16, 17, 26, 28, 33, 49, 180, 355, 356, 364, 366, 370, 386], "below": [2, 12, 17, 28, 35, 39, 45, 47, 50, 51, 63, 64, 148, 177, 181, 182, 184, 186, 322, 340, 356, 366, 386], "path_from_root_ind": [2, 17, 356], "side": [2, 13, 17, 30, 81, 102, 191, 196, 197, 199, 276, 278, 282, 288, 289, 308, 309, 340, 355, 356, 367, 376, 377, 378, 379, 386], "one": [2, 13, 17, 30, 34, 37, 66, 100, 101, 103, 104, 106, 107, 108, 109, 110, 115, 121, 127, 138, 139, 141, 142, 144, 145, 155, 173, 190, 194, 195, 196, 197, 205, 225, 266, 269, 278, 286, 290, 323, 334, 355, 356, 367, 376, 377, 378, 379, 386], "ha": [2, 11, 13, 17, 27, 30, 37, 47, 50, 51, 52, 63, 64, 65, 75, 85, 89, 98, 176, 177, 181, 182, 184, 185, 206, 210, 216, 233, 237, 249, 253, 282, 289, 320, 355, 356, 365, 367, 386], "take": [2, 13, 17, 30, 47, 81, 82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 102, 105, 108, 173, 175, 176, 190, 194, 195, 198, 200, 210, 223, 224, 226, 227, 233, 245, 249, 261, 283, 284, 285, 310, 311, 319, 320, 323, 340, 356, 367, 373, 380, 384, 386], "go": [2, 13, 17, 30, 50, 181, 356, 367, 386], "from": [2, 8, 13, 16, 17, 24, 30, 33, 34, 38, 45, 49, 50, 76, 80, 111, 118, 119, 121, 130, 132, 137, 148, 180, 181, 201, 206, 210, 217, 218, 219, 223, 228, 229, 230, 231, 233, 238, 239, 242, 246, 247, 248, 249, 254, 255, 258, 262, 263, 264, 271, 275, 276, 278, 280, 307, 309, 317, 320, 322, 323, 334, 336, 340, 342, 343, 344, 345, 349, 353, 356, 362, 367, 370, 375, 380, 383, 386], "set_left_child": [2, 17, 356], "left": [2, 6, 13, 14, 17, 21, 30, 31, 34, 63, 200, 337, 356, 360, 367, 368, 386], "set_right_child": [2, 17, 356], "right": [2, 6, 13, 15, 17, 21, 30, 32, 34, 200, 337, 356, 360, 367, 369, 386], "to_indicator_matrix": [2, 17, 356], "The": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 57, 63, 64, 65, 66, 67, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 270, 275, 276, 277, 278, 279, 280, 282, 286, 289, 290, 291, 293, 294, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 321, 322, 333, 337, 338, 341, 349, 351, 352, 353, 354, 355, 356, 357, 359, 362, 364, 365, 366, 367, 368, 369, 370, 373, 374, 378, 379, 380, 381, 383, 386], "connect": [5, 20, 271, 278, 282, 295, 296, 317, 320, 321, 323, 349, 359, 377, 379, 380, 381], "origin": [5, 20, 151, 154, 275, 359, 386], "bool": [6, 9, 21, 23, 25, 35, 47, 58, 63, 66, 84, 88, 97, 100, 103, 106, 109, 113, 116, 118, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 144, 148, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 166, 175, 202, 205, 224, 225, 226, 229, 230, 243, 244, 247, 248, 259, 260, 263, 264, 279, 282, 286, 296, 310, 311, 318, 321, 323, 340, 360, 363, 373, 378, 380, 381, 383, 386], "true": [6, 21, 35, 63, 66, 84, 88, 97, 114, 118, 119, 120, 126, 128, 129, 130, 132, 133, 136, 148, 150, 151, 152, 153, 154, 155, 157, 175, 229, 230, 247, 248, 263, 264, 282, 286, 310, 311, 318, 321, 323, 340, 360, 373, 378, 379, 383, 386], "classmethod": [8, 24, 152, 229, 230, 247, 248, 263, 264, 362], "indicator_matrix": [8, 24, 267, 362], "ndarrai": [8, 16, 24, 33, 34, 35, 45, 47, 56, 61, 63, 66, 75, 76, 77, 78, 79, 80, 90, 91, 92, 93, 94, 100, 101, 103, 104, 106, 107, 109, 110, 114, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 150, 152, 153, 154, 155, 177, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 227, 228, 229, 230, 234, 235, 236, 238, 240, 241, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 261, 262, 263, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 314, 315, 316, 318, 320, 322, 323, 325, 326, 329, 330, 332, 333, 335, 338, 339, 340, 341, 342, 343, 345, 346, 347, 362, 370, 376, 379, 380, 383, 384], "path": [8, 16, 17, 24, 33, 36, 38, 39, 199, 200, 362, 370], "max_depth": [10, 16, 26, 33, 49, 180, 364, 370], "maximum": [10, 16, 26, 33, 34, 37, 47, 49, 63, 180, 205, 364, 370, 386], "If": [10, 26, 35, 36, 39, 48, 50, 63, 66, 84, 88, 97, 100, 103, 106, 109, 116, 118, 119, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 144, 148, 150, 151, 152, 153, 154, 155, 173, 175, 179, 181, 194, 196, 197, 200, 206, 210, 216, 221, 222, 224, 233, 237, 241, 249, 253, 257, 278, 279, 282, 286, 310, 311, 319, 320, 321, 323, 324, 329, 330, 341, 347, 351, 355, 356, 364, 373, 378, 380, 381, 383, 386], "number": [10, 26, 34, 40, 48, 49, 79, 81, 100, 101, 103, 104, 106, 107, 109, 110, 111, 116, 117, 122, 123, 134, 136, 138, 139, 141, 142, 144, 145, 179, 180, 190, 193, 194, 196, 197, 198, 211, 212, 213, 221, 222, 229, 230, 234, 235, 241, 247, 248, 250, 251, 257, 263, 264, 267, 271, 277, 278, 279, 280, 281, 282, 289, 294, 309, 310, 311, 314, 323, 364, 380, 386], "layer": [10, 26, 44, 364], "check": [10, 17, 23, 26, 56, 58, 111, 113, 157, 162, 163, 164, 165, 166, 202, 205, 210, 216, 218, 224, 225, 226, 233, 237, 239, 243, 244, 249, 253, 255, 259, 260, 282, 364, 386], "found": [10, 26, 63, 66, 111, 113, 121, 126, 147, 153, 277, 310, 311, 364, 386], "0": [11, 12, 26, 27, 28, 44, 48, 75, 76, 77, 78, 79, 80, 118, 179, 188, 200, 201, 206, 231, 280, 282, 318, 319, 321, 322, 334, 337, 338, 339, 340, 341, 344, 347, 350, 365, 366, 373, 377, 378, 379, 386], "mean": [12, 28, 49, 180, 200, 210, 227, 231, 233, 245, 249, 261, 337, 344, 347, 349, 366, 386], "you": [12, 28, 148, 196, 334, 366, 380, 383, 386], "get": [12, 28, 210, 211, 217, 218, 219, 228, 233, 238, 239, 246, 249, 254, 255, 262, 279, 322, 323, 344, 345, 349, 351, 352, 366, 386], "just": [12, 28, 182, 366, 386], "itself": [12, 28, 37, 366], "1": [13, 17, 30, 34, 35, 39, 43, 45, 49, 66, 75, 77, 78, 79, 85, 89, 98, 173, 176, 180, 200, 212, 217, 221, 222, 223, 224, 226, 238, 241, 254, 257, 275, 276, 277, 281, 282, 295, 316, 320, 322, 323, 334, 337, 338, 339, 340, 341, 347, 350, 367, 379, 383, 386], "denot": [13, 30, 337, 338, 341, 367], "previou": [14, 15, 31, 32, 286, 368, 369, 379, 386], "doe": [14, 15, 31, 32, 43, 48, 50, 75, 114, 115, 120, 153, 154, 179, 181, 196, 200, 225, 244, 260, 272, 273, 298, 299, 301, 302, 304, 305, 333, 351, 368, 369, 386], "point": [14, 15, 31, 32, 74, 77, 78, 79, 173, 212, 213, 229, 230, 235, 247, 248, 251, 263, 264, 279, 317, 319, 340, 353, 355, 368, 369, 375, 380, 386], "after": [14, 15, 31, 32, 44, 48, 85, 89, 98, 133, 173, 176, 179, 271, 275, 282, 368, 369, 386], "call": [14, 15, 31, 32, 85, 89, 98, 120, 176, 320, 323, 368, 369, 375, 380, 381, 384, 386], "instead": [14, 15, 31, 32, 75, 196, 368, 369, 380, 386], "static": [16, 33, 38, 83, 87, 96, 121, 157, 166, 174, 370, 386], "row": [16, 33, 63, 66, 111, 114, 117, 129, 152, 154, 157, 170, 227, 245, 261, 266, 267, 268, 270, 276, 290, 291, 293, 317, 318, 334, 337, 370, 386], "sort": [16, 33, 126, 147, 151, 153, 206, 286, 370, 386], "same": [16, 17, 19, 23, 33, 37, 50, 66, 120, 154, 181, 193, 194, 205, 206, 216, 227, 231, 232, 237, 245, 253, 261, 272, 274, 286, 298, 300, 301, 303, 304, 306, 329, 330, 333, 347, 370, 377, 386], "wai": [16, 33, 66, 111, 120, 286, 323, 349, 355, 370, 386], "encod": [16, 33, 75, 76, 77, 78, 79, 80, 202, 221, 222, 241, 257, 268, 275, 334, 370, 386], "np": [16, 33, 34, 35, 45, 47, 63, 75, 76, 77, 78, 79, 80, 100, 101, 103, 104, 106, 107, 109, 110, 114, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 150, 152, 153, 154, 155, 177, 186, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 206, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 227, 228, 229, 230, 234, 235, 236, 238, 240, 241, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 261, 262, 263, 264, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 286, 289, 290, 291, 294, 296, 310, 311, 312, 314, 315, 316, 318, 320, 322, 323, 329, 330, 338, 339, 340, 341, 345, 346, 347, 370, 379, 380, 386], "shape": [16, 33, 100, 101, 103, 104, 106, 107, 109, 110, 111, 114, 117, 138, 139, 141, 142, 144, 145, 211, 212, 213, 221, 222, 229, 230, 234, 235, 241, 247, 248, 250, 251, 257, 263, 264, 267, 272, 274, 279, 289, 294, 298, 300, 301, 303, 304, 306, 318, 321, 337, 338, 339, 341, 370], "len": [16, 33, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 370, 386], "num_nod": [16, 33, 370], "where": [16, 33, 75, 117, 121, 127, 279, 289, 294, 295, 312, 316, 317, 321, 323, 336, 339, 370, 373, 374, 386], "core": [17, 19, 23, 118, 386], "It": [17, 34, 60, 79, 111, 289, 373, 386], "repres": [17, 34, 78, 80, 81, 82, 83, 86, 87, 95, 96, 111, 173, 174, 212, 213, 216, 229, 230, 235, 237, 247, 248, 251, 253, 263, 264, 278, 289, 290, 321, 334, 336, 337, 349, 352, 386], "determin": [17, 147, 153, 196, 355, 380, 386], "featur": [17, 77, 78, 79, 81, 82, 85, 86, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 126, 128, 129, 130, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 173, 176, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 210, 211, 212, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 245, 261, 271, 272, 274, 275, 279, 280, 288, 290, 292, 298, 300, 301, 303, 304, 306, 332, 338, 341, 386], "orient": [17, 34, 47, 66, 75, 76, 80, 85, 89, 98, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 147, 151, 154, 155, 173, 176, 177, 178, 183, 205, 206, 210, 213, 217, 222, 229, 230, 231, 233, 235, 238, 240, 241, 242, 243, 244, 247, 248, 249, 251, 254, 256, 257, 258, 259, 260, 263, 264, 286, 386], "more": [17, 48, 130, 179, 196, 197, 199, 278, 282, 286, 349, 386], "k": [17, 34, 36, 66, 196, 279, 281, 282, 289, 294, 317, 323, 377, 378, 379, 386], "correspond": [17, 34, 44, 61, 66, 75, 76, 77, 78, 79, 82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 126, 128, 129, 130, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 157, 168, 173, 175, 176, 189, 190, 193, 194, 195, 198, 274, 300, 303, 306, 307, 386], "vice": [17, 34], "versa": [17, 34], "except": [17, 34, 195, 386], "highest": [17, 49, 180], "order": [17, 34, 35, 37, 47, 50, 63, 66, 80, 126, 147, 151, 152, 153, 154, 177, 181, 196, 197, 205, 206, 227, 245, 261, 272, 274, 283, 284, 285, 286, 288, 289, 292, 297, 298, 300, 301, 303, 304, 306, 307, 308, 309, 336, 337, 338, 339, 340, 341, 379, 386], "than": [17, 37, 43, 45, 49, 50, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 173, 180, 181, 196, 197, 199, 205, 210, 224, 233, 243, 249, 259, 278, 282, 286, 318, 319, 323, 340, 349, 386], "addit": [17, 386], "orientedsep": [17, 245, 261], "minim": [17, 35, 271, 272, 276, 277, 386], "within": [17, 74, 78, 79, 280, 386], "equal_data": 17, "two": [17, 23, 35, 36, 39, 61, 121, 127, 150, 152, 155, 173, 196, 197, 210, 216, 218, 220, 223, 225, 233, 237, 239, 240, 242, 244, 249, 253, 255, 256, 258, 260, 286, 288, 289, 321, 333, 334, 349, 355, 375, 377, 380, 386], "have": [17, 23, 34, 36, 37, 43, 48, 49, 50, 75, 173, 177, 178, 179, 180, 181, 183, 190, 194, 201, 279, 286, 323, 337, 338, 340, 341, 377, 379, 380, 386], "data": [17, 23, 34, 38, 42, 81, 99, 101, 102, 104, 105, 107, 108, 110, 111, 112, 115, 118, 119, 124, 132, 134, 135, 137, 139, 140, 142, 143, 145, 147, 150, 152, 189, 190, 193, 194, 195, 198, 233, 234, 249, 250, 279, 288, 289, 290, 291, 292, 293, 294, 317, 318, 319, 320, 323, 337, 344, 345, 346, 347, 387], "open": 17, "equal": [23, 36, 39, 54, 55, 178, 205, 210, 224, 233, 243, 249, 259, 340, 341, 386], "sep_id": [34, 47, 54, 61, 177, 206, 210, 217, 218, 228, 233, 234, 237, 238, 239, 246, 249, 250, 253, 254, 255, 262], "result": [34, 50, 64, 65, 66, 81, 120, 129, 136, 151, 153, 155, 181, 196, 197, 217, 227, 238, 245, 254, 261, 281, 291, 293, 296, 322, 323, 333, 380, 386], "empti": [34, 47, 48, 179, 286, 351], "dure": [34, 386], "ad": [34, 44, 196, 197, 205, 206, 212, 213, 217, 220, 235, 238, 240, 251, 254, 256, 278, 286, 288, 292, 310, 311, 386], "actual": [34, 373, 386], "well": [34, 50, 181, 275, 386], "id": [34, 35, 39, 44, 45, 47, 48, 50, 73, 77, 78, 79, 153, 177, 178, 179, 181, 183, 186, 196, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 286, 349, 350, 351, 352, 353, 354, 386], "dimension": [34, 321, 338, 339, 341, 375, 380], "arrai": [34, 47, 114, 117, 177, 196, 197, 266, 268, 271, 272, 274, 275, 276, 280, 281, 282, 296, 298, 300, 301, 303, 304, 306, 312, 335, 383], "properti": [34, 37, 40, 41, 44, 47, 53, 56, 59, 63, 67, 111, 122, 123, 130, 134, 147, 149, 156, 177, 178, 183, 187, 349, 353, 386], "limit": [34, 39, 45, 47, 48, 50, 51, 52, 63, 64, 65, 66, 148, 177, 179, 181, 182, 184, 185, 186, 386], "we": [34, 37, 111, 113, 118, 119, 126, 128, 129, 130, 132, 133, 157, 173, 194, 200, 216, 237, 253, 279, 286, 289, 323, 334, 337, 379, 386], "yet": [34, 37, 49, 180, 386], "number_of_separ": 34, "associ": [34, 44, 85, 89, 98, 176, 386], "get_efficient_distinguish": 34, "k_tangl": 34, "th": [34, 36, 151, 196, 386], "load": [34, 111, 386], "filenam": [34, 38, 42, 121, 127], "maximal_tangl": 34, "most": [34, 39, 49, 180, 194, 320, 337, 373, 386], "max_level": [34, 35, 39, 43, 45], "save": [34, 38, 111, 216, 231, 237, 253, 386], "file": [34, 38, 42, 111, 121, 127, 386], "search_tre": 34, "tangle_matrix": [34, 63, 75, 76, 77, 78, 79, 80, 147, 177], "taken": [34, 45, 100, 103, 106, 109, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155, 201, 310, 311, 340], "tree_height_for_agr": 34, "comput": [34, 46, 63, 196, 197, 216, 227, 237, 245, 253, 261, 271, 281, 282, 288, 290, 291, 293, 294, 295, 296, 312, 315, 316, 317, 322, 336, 337, 338, 341], "height": [34, 46, 322, 355, 373, 386], "return_id": 35, "exist": [35, 50, 75, 76, 80, 130, 158, 181, 218, 239, 255, 286, 351], "pair": [35, 218, 239, 255, 271, 275, 309, 340], "thei": [35, 50, 181, 225, 229, 230, 247, 248, 263, 264, 340, 355, 386], "option": [35, 39, 43, 45, 47, 48, 49, 50, 73, 80, 126, 133, 177, 179, 180, 181, 196, 200, 212, 213, 229, 230, 235, 247, 248, 251, 263, 264, 277, 279, 310, 311, 319, 320, 349, 356, 380, 381, 386], "fals": [35, 45, 66, 70, 71, 79, 84, 88, 97, 113, 118, 119, 126, 128, 130, 133, 148, 150, 151, 152, 154, 155, 157, 175, 188, 229, 230, 247, 248, 263, 264, 279, 281, 286, 310, 311, 318, 319, 321, 323, 350, 379, 380, 381, 383, 386], "first": [35, 75, 76, 80, 100, 101, 103, 104, 106, 107, 109, 110, 134, 138, 139, 141, 142, 144, 145, 154, 155, 189, 190, 193, 194, 195, 198, 212, 213, 216, 220, 223, 224, 225, 226, 235, 237, 240, 242, 243, 244, 251, 253, 256, 258, 259, 260, 276, 279, 282, 379, 386], "entri": [35, 66, 100, 101, 103, 104, 106, 107, 109, 110, 114, 134, 138, 139, 141, 142, 144, 145, 154, 189, 190, 193, 194, 195, 198, 212, 213, 216, 220, 235, 237, 240, 251, 253, 256, 289, 294, 307, 341, 379, 383], "second": [35, 100, 101, 103, 104, 106, 107, 109, 110, 134, 138, 139, 141, 142, 144, 145, 154, 155, 189, 190, 193, 194, 195, 198, 212, 213, 216, 220, 223, 224, 225, 226, 235, 237, 240, 242, 243, 244, 251, 253, 256, 258, 259, 260, 276, 379, 386], "include_split": [36, 39, 45], "str": [36, 38, 39, 42, 83, 87, 96, 100, 103, 106, 109, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 141, 144, 146, 152, 155, 157, 166, 174, 189, 227, 245, 261, 278, 320, 323, 325, 326, 328, 332, 349, 351, 352, 354, 373, 380, 383], "nope": [36, 39], "onli": [36, 39, 43, 45, 48, 49, 50, 66, 114, 151, 154, 179, 180, 181, 196, 197, 200, 310, 311, 323, 337, 340, 373, 377, 380, 386], "includ": [36, 39, 66, 154, 155, 224, 349, 386], "default": [36, 39, 48, 50, 81, 99, 140, 143, 179, 181, 189, 207, 208, 278, 279, 320, 348, 349, 373, 374, 378, 380, 381, 386], "For": [37, 77, 78, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 173, 178, 199, 201, 280, 286, 291, 293, 338, 341, 386], "greater": [37, 173, 323, 340, 386], "know": [37, 39, 45, 186, 386], "certainti": 37, "agreeement": 37, "decreas": [37, 47, 51, 52, 63, 64, 65, 177, 182, 184, 185, 386], "increas": [37, 50, 181, 386], "But": [37, 386], "might": [37, 281, 282, 286, 323, 337, 338, 341, 349, 386], "case": [37, 75, 148, 196, 197, 216, 237, 253, 279, 355, 386], "yield": 37, "anoth": [37, 81, 140, 154, 205, 224, 231, 232, 380, 386], "guarante": [39, 45, 186, 341], "sep": [39, 73, 154, 222, 237, 241, 245, 253, 257, 261, 267, 300, 303, 306, 338, 341, 376, 379], "sweep": [39, 45, 81, 147, 148, 177, 186], "about": [39, 45, 111, 113, 130, 135, 136, 186, 208, 229, 230, 247, 248, 263, 264, 386], "less": [43, 45, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 196, 197, 205, 210, 224, 233, 243, 249, 259, 283, 284, 285, 318, 319, 386], "up": [43, 73, 324, 334, 355, 386], "index": [44, 75, 76, 80, 120, 124, 151, 196, 276, 321, 349, 353, 379, 386], "return_nod": 45, "callabl": [47, 63, 100, 103, 106, 109, 116, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 141, 144, 146, 147, 152, 155, 196, 197, 205, 207, 208, 320, 342, 343, 373, 383, 384], "le_func": [47, 205], "forbidden_tuple_s": [47, 63, 72, 177, 205], "3": [47, 63, 177, 205, 321, 322, 355, 386], "agreementfunc": [47, 68, 72, 73, 205], "non": [47, 137, 154, 196, 197, 289, 379, 386], "neg": [47, 196, 197, 278, 279, 289, 345, 377, 378, 379], "numer": [47, 81, 86, 99, 130, 157, 163, 190, 193, 194, 386], "lessoreqfunc": [47, 205], "partial": [47, 386], "can": [47, 49, 60, 80, 81, 82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 111, 113, 118, 119, 121, 126, 128, 129, 130, 132, 133, 137, 140, 148, 157, 170, 173, 175, 176, 180, 195, 208, 231, 279, 334, 373, 375, 383, 384, 386], "us": [47, 49, 63, 66, 81, 99, 111, 113, 130, 137, 143, 147, 149, 151, 152, 154, 180, 189, 190, 194, 195, 196, 197, 208, 217, 231, 238, 254, 271, 272, 279, 281, 286, 318, 321, 322, 330, 336, 337, 340, 373, 378, 379, 383, 384, 386], "algorithm": [47, 204, 205, 386], "some": [47, 63, 111, 135, 157, 173, 224, 386], "size": [47, 63, 193, 194, 196, 197, 205, 280, 310, 311, 319, 340, 373, 377, 378, 379, 383, 386], "standard": [47, 63, 344, 386], "e": [47, 60, 63, 120, 129, 152, 154, 219, 224, 243, 259, 279, 320, 323, 334, 337, 340, 386], "tripl": [47, 63, 286, 386], "oper": [47, 53, 63, 67, 82, 83, 86, 87, 95, 96, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 173, 174, 177, 187, 189, 386], "append_separ": [47, 177], "append": [47, 48, 50, 63, 66, 118, 177, 179, 181, 196, 197, 231, 324], "greedy_search": [47, 177], "greedili": [47, 49, 177, 180], "insert_separ": [47, 177], "insert": [47, 50, 118, 153, 170, 177, 181, 206], "sweep_below": [47, 63, 177, 182], "until": [47, 51, 52, 63, 64, 65, 76, 177, 182, 184, 185, 386], "sweep_on": [47, 63, 177], "agreement_lower_bound": [48, 50, 179, 181], "final": [48, 179, 251, 255, 262, 386], "noth": [48, 179], "happen": [48, 179, 386], "By": [48, 50, 179, 181], "ensur": [48, 50, 63, 179, 181], "chang": [48, 81, 115, 124, 126, 133, 143, 147, 148, 179, 225, 274, 277, 300, 303, 306, 337, 338, 341, 386], "step": [48, 50, 179, 181, 196, 277, 286, 310, 311, 386], "last": [48, 179, 279, 386], "add": [48, 50, 157, 158, 169, 179, 181, 210, 212, 213, 223, 233, 235, 242, 249, 251, 258], "ani": [48, 60, 153, 179, 196, 216, 237, 253, 373, 386], "max_width": [49, 180], "explore_agreement_lower_bound": [49, 180], "start_nod": [49, 180], "what": [49, 180, 217, 231, 238, 254, 267, 279, 314, 386], "goe": [49, 180], "through": [49, 180, 383], "differ": [49, 80, 111, 120, 126, 154, 180, 194, 322, 355, 375, 379, 380, 386], "And": [49, 180, 386], "those": [49, 180, 216, 237, 253, 278, 286], "rel": [49, 180], "insertion_idx": [50, 181], "li": [50, 181, 217, 238, 254, 355, 386], "discard": [50, 181], "bound": [50, 147, 148, 150, 152, 156, 181], "caus": [50, 181, 345], "previous": [50, 181], "higher": [50, 154, 181, 386], "attempt": [50, 181, 286], "fail": [50, 181, 216, 237, 253, 355], "time": [50, 75, 76, 148, 181, 282, 386], "simpli": [50, 181, 216, 237, 253, 336, 340, 386], "correct": [50, 181, 386], "progress_callback": [51, 52, 64, 65, 147, 152, 182, 184, 185, 196, 197, 386], "should": [51, 63, 64, 113, 119, 129, 130, 154, 184, 196, 197, 212, 213, 229, 230, 235, 247, 248, 251, 263, 264, 310, 311, 349, 386], "fall": [51, 64, 184, 194, 386], "sep_idx": 54, "other_end": 54, "One": [55, 193, 386], "other": [55, 76, 80, 115, 121, 127, 154, 157, 167, 168, 196, 197, 206, 216, 231, 237, 253, 278, 320, 323, 334, 377, 386], "incid": [55, 61], "tangle_idx": 56, "reduced_tangl": 56, "neighbour": [56, 386], "neighbor": [56, 59, 310, 311, 317, 321, 323], "degre": [56, 308, 312, 316, 323, 373, 386], "set_label": 56, "label": [56, 60, 84, 88, 97, 111, 118, 125, 126, 131, 133, 151, 155, 157, 158, 167, 168, 169, 170, 175, 348, 349, 350, 351, 352, 354, 374, 380, 383, 386], "type": [60, 111, 112, 118, 119, 126, 130, 132, 152, 157, 162, 163, 164, 165, 170, 196, 197, 231, 278, 373, 379, 383, 386], "usual": [60, 194, 282, 386], "string": [60, 83, 87, 96, 118, 120, 130, 132, 157, 165, 166, 174, 349, 383], "describ": [60, 74, 77, 78, 100, 101, 103, 104, 106, 107, 109, 110, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 155, 177, 186, 189, 193, 194, 195, 279, 297, 307, 308, 309, 322, 386], "g": [60, 282, 295, 312, 316, 377, 386], "visualis": [60, 376, 377, 379, 386], "between": [61, 80, 276, 288, 290, 294, 317, 319, 321, 322, 340, 379, 386], "any_nod": 61, "sep_si": [63, 70, 71, 73, 177, 265], "setseparationsystembas": [63, 73, 177, 196, 197, 209, 229, 230, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "order_func": [63, 197, 265], "copy_sep_si": 63, "whenev": [63, 148, 154, 380, 383], "necessari": [63, 148, 386], "condit": [63, 386], "addition": [63, 229, 230, 247, 248, 263, 264, 379], "hold": 63, "so": [63, 82, 84, 86, 88, 95, 97, 115, 173, 175, 323, 355, 373, 386], "also": [63, 152, 206, 217, 227, 238, 245, 254, 261, 286, 322, 337, 338, 341, 380], "provid": [63, 81, 111, 126, 147, 152, 196, 197, 216, 237, 253, 383, 386], "setseparationorderfunct": [63, 147, 152, 196, 197], "ascend": [63, 196, 197], "unchang": 63, "tanglesearchprogresstyp": 64, "progress": [64, 147, 152, 196, 197, 203, 208, 386], "callback": [64, 348, 373, 374, 380, 381, 383, 386], "min_agr": [66, 182, 186, 196, 197, 200, 201], "only_original_sep": [66, 151], "vector": [66, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 211, 217, 238, 254, 275, 277, 278, 279, 289, 290, 295, 296, 337, 338, 339, 341, 344, 345, 379], "column": [66, 75, 77, 78, 79, 80, 81, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 155, 157, 196, 197, 275, 276, 278, 281, 282, 288, 289, 290, 291, 294, 295, 296, 334, 337, 338, 339, 341, 386], "appear": [66, 154, 229, 230, 247, 248, 263, 264, 286], "wa": [66, 190, 193, 194, 231, 274, 300, 303, 306, 318, 386], "corner": [66, 151, 153, 154, 210, 216, 220, 227, 231, 233, 237, 240, 245, 249, 253, 256, 261, 271, 275, 286], "introduc": [66, 386], "explicitli": [66, 105], "": [66, 105, 157, 158, 165, 169, 193, 228, 229, 230, 246, 247, 248, 262, 263, 264, 268, 270, 271, 276, 278, 286, 337, 338, 340, 341, 348, 374, 386], "tangle_mat": 66, "numpi": [66, 118, 152, 386], "m": [66, 279, 337, 338, 339, 340, 341, 386], "agreementfuncbitarrai": 68, "agreementfuncbitarraybip": 68, "calculateagr": 68, "max_valu": 69, "setseparationsystem": [70, 149, 177, 196, 197, 209, 210, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 263, 264], "memoiz": [70, 71], "featuresystem": [71, 77, 78, 79, 149, 177, 196, 197, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "look": [73, 200, 201, 351, 386], "coherence_level": 74, "coher": [74, 75, 80], "complexity_level": 74, "complex": [74, 76, 80], "hard_clustering_tuebingen": 74, "implement": [74, 77, 78, 84, 88, 97, 175, 386], "hard": [74, 77, 386], "cluster": [74, 77, 78], "tuebingen": [74, 77, 78], "paper": [74, 77, 78, 386], "soft_clustering_tuebingen": 74, "soft": [74, 78, 386], "tangle_scor": 74, "score": [74, 78, 79, 279], "measur": [74, 79, 279], "how": [74, 75, 76, 79, 80, 147, 154, 272, 274, 278, 289, 298, 300, 301, 303, 304, 306, 386], "much": [74, 79, 386], "visibl": 74, "smallest": [75, 76, 195, 310, 311], "zero": [75, 154, 278, 347, 379], "ceas": [75, 80], "In": [75, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 148, 154, 196, 197, 279, 340, 386], "x": [75, 76, 77, 78, 79, 80, 288, 291, 293, 320, 323, 355, 380, 381, 383, 386], "otherwis": [75, 76, 77, 78, 79, 80, 100, 103, 106, 109, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 151, 155, 216, 221, 222, 237, 241, 253, 257, 282, 286, 320, 323, 355, 378, 386], "were": [76, 153, 154, 155, 386], "slice": [76, 111, 112], "would": [76, 274, 300, 303, 306, 334, 386], "feat_id": [77, 78, 79, 211, 216, 217], "feat_si": [77, 78, 79, 201], "invers": [77, 78, 79, 210, 212, 220, 221, 223, 224, 226, 275, 286], "membership": 77, "clustering_matrix": 78, "dataset": [78, 79, 108, 386], "proport": [78, 379], "normalize_row": 79, "normalize_col": 79, "consid": [79, 100, 103, 106, 109, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155, 200, 337, 386], "do": [79, 155, 386], "column_ord": 80, "precomput": [80, 317, 320, 323], "nominalvariablevalu": [81, 83, 84, 85], "nomin": [81, 82, 86, 95, 99, 157, 162, 192, 386], "surveyvariablevalu": [81, 82, 86, 95, 157, 160, 172, 174, 175, 176], "numericalvariablevalu": [81, 87, 88, 89], "orderfunctiono1": 81, "orderfunctiono1bias": 81, "orderfunctiono2": 81, "orderfunctiono3": 81, "orderfunctiono4": 81, "ordinalvariablevalu": [81, 96, 97, 98], "ordin": [81, 95, 99, 119, 157, 164, 173, 190, 194, 195, 386], "simplesurveyfeaturefactori": [81, 100, 101, 140], "simpl": [81, 99, 102, 105, 108, 198, 387], "factori": [81, 99, 101, 102, 104, 105, 107, 108, 110, 137, 139, 140, 142, 143, 145, 146, 189, 190, 192, 193, 194, 195, 198, 386], "simplesurveyfeaturefactory_missingvaluesbothsid": [81, 103, 104], "miss": [81, 102, 105, 108, 111, 118, 119, 132, 191, 386], "invalid": [81, 102, 105, 108, 111, 114, 133, 157, 158, 159, 161, 169, 170, 190, 191, 193, 194, 195, 386], "account": [81, 82, 86, 95, 100, 102, 103, 105, 106, 108, 109, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155, 340, 386], "simplesurveyfeaturefactory_missingvaluesimplicit": [81, 106, 107], "simplesurveyfeaturefactory_missingvaluesownfeatur": [81, 109, 110], "prepar": [81, 111, 387], "clean": [81, 111, 387], "subset": [81, 82, 86, 95, 100, 103, 106, 109, 111, 112, 116, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 141, 144, 155, 193, 194, 199, 201, 202, 210, 226, 276, 386], "surveyfeaturefactori": [81, 102, 108, 138, 139, 140, 143, 152], "surveyfeaturefactorydecor": [81, 141, 142], "small": [81, 140, 190, 198, 279, 282, 373, 386], "decor": [81, 140, 191], "behaviour": [81, 140], "surveyfeaturefactory_cherrypick": [81, 144, 145, 146], "allow": [81, 143, 375, 380, 386], "individu": [81, 143, 386], "surveytangl": [81, 148, 149, 150, 151, 152, 153, 154, 155, 156, 386], "manag": [81, 111, 147, 152, 173, 286, 348, 349, 386], "surveyvari": [81, 82, 86, 95, 100, 101, 103, 104, 106, 107, 109, 110, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 146, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "variabl": [81, 82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 170, 172, 173, 175, 176, 189, 190, 192, 193, 194, 195, 198, 334, 386], "interact": [81, 173, 375, 380, 383], "tanglesweepfeaturesi": [81, 147, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 196], "bundl": [81, 177], "unionofinterv": [81, 118], "binary_unique_value_featur": 81, "extensive_numericvar_featur": 81, "uniqu": [81, 111, 116, 136, 189, 190, 195, 196, 197, 198], "feats2seps_invalids_to_both_sid": 81, "assign": [81, 102, 105, 143, 146, 191, 278, 279, 386], "answer": [81, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 155, 191, 193, 194, 195, 205, 386], "both": [81, 102, 111, 121, 127, 191, 225, 278, 289, 330, 334, 386], "nominalvar_features_all_cat": [81, 99], "numericvar_features_inside_regular_bin": 81, "numericvar_features_split_regular_g": [81, 99], "ordinalvar_features_ge_all_split": [81, 99], "search_tangl": 81, "search_tangles_uncross": [81, 196], "cross": [81, 197, 210, 218, 233, 239, 249, 255, 386], "simple_unique_value_featur": [81, 192], "var": [82, 86, 95, 173, 386], "possibl": [82, 84, 85, 86, 88, 89, 95, 97, 98, 99, 113, 157, 173, 175, 176, 216, 227, 237, 245, 253, 261, 334, 386], "specif": [82, 84, 85, 86, 88, 89, 95, 97, 98, 120, 154, 173, 175, 176, 216, 217, 220, 221, 223, 224, 237, 253, 386], "make": [82, 86, 95, 111, 279, 380, 386], "invert_op": [82, 86, 95, 173], "invert": [82, 83, 86, 87, 95, 96, 173, 174, 225, 355, 386], "metadata": [82, 83, 85, 86, 87, 89, 95, 96, 98, 100, 101, 103, 104, 106, 107, 109, 110, 111, 113, 130, 138, 139, 141, 142, 144, 145, 147, 150, 151, 152, 154, 155, 173, 174, 176, 189, 190, 193, 194, 195, 196, 197, 198, 209, 210, 212, 213, 216, 219, 228, 229, 230, 232, 233, 235, 237, 246, 247, 248, 249, 251, 253, 262, 263, 264, 386], "possible_values_represent": [82, 86, 95, 173], "represent": [82, 84, 86, 88, 95, 97, 173, 175, 348, 349], "accord": [82, 84, 86, 88, 95, 97, 111, 125, 173, 175, 374], "seen": [82, 84, 86, 88, 95, 97, 173, 175, 386], "far": [82, 84, 86, 88, 95, 97, 173, 175, 386], "update_values_for_specif": [82, 86, 95, 173], "updat": [82, 85, 86, 89, 95, 98, 148, 173, 176, 379, 380, 386], "op": [83, 87, 96, 174, 189, 386], "insert_label": [84, 88, 97, 151, 155, 175, 386], "specialis": [84, 88, 97, 175, 386], "subclass": [84, 88, 97, 157, 172, 175], "name": [84, 88, 97, 111, 120, 121, 124, 127, 132, 146, 151, 152, 155, 157, 170, 175, 279, 386], "sep_orient": [85, 89, 98, 176], "sep_metadata": [85, 89, 98, 176, 196, 197], "metadata_orient": [85, 89, 98, 176], "been": [85, 89, 98, 176, 177, 178, 183, 190, 194, 386], "either": [85, 89, 98, 176, 289, 320, 322, 323, 324, 329, 330, 333, 337, 375, 380, 383], "sigma": [94, 307], "spmatrix": [94, 147, 152, 281, 282, 296, 298, 301, 304, 312, 316, 338, 341, 342, 343], "numvar_func": 99, "create_feature_func": [99, 191], "split": [99, 100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 190, 193, 271, 282, 289, 379, 386], "rang": [99, 100, 103, 106, 109, 116, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 141, 144, 155, 190, 193, 194, 319, 340, 380, 386], "regularli": 99, "see": [99, 130, 147, 152, 196, 197, 217, 238, 254, 278, 320, 323, 334, 337, 373, 380, 383, 386], "ordvar_func": 99, "nomvar_func": 99, "create_featur": [99, 102, 105, 108, 137, 140, 143], "column_select": [99, 100, 102, 103, 105, 106, 108, 109, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 155], "create_features_for_single_col": [99, 102, 105, 108, 137, 140, 143], "seri": [100, 101, 103, 104, 106, 107, 109, 110, 116, 118, 119, 120, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 146, 155, 189, 190, 192, 193, 194, 195, 198], "pd": [100, 103, 106, 109, 116, 118, 119, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 138, 141, 144, 146, 155, 189, 190, 193, 194, 195, 198, 386], "questionselector": [100, 103, 106, 109, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155], "interpret": [100, 103, 106, 109, 111, 116, 118, 119, 120, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155, 278, 279, 386], "interpret_column_select": [100, 103, 106, 109, 111, 116, 118, 119, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 141, 144, 155], "col_data": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145], "num_featur": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 280], "here": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 278, 386], "expect": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 386], "exampl": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 173, 231, 373, 386], "8": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 337, 386], "group": [100, 101, 103, 104, 106, 107, 109, 110, 138, 139, 141, 142, 144, 145, 386], "question": [101, 104, 107, 110, 111, 114, 117, 118, 119, 122, 126, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 145, 151, 152, 155, 157, 166, 193, 194, 231, 386], "overwritten": [101, 104, 107, 110, 118, 130, 139, 142, 145, 158, 272, 273, 274, 298, 299, 300, 301, 302, 303, 304, 305, 306], "sub": [101, 104, 107, 110, 139, 142, 145, 337, 338, 341, 386], "panda": [101, 104, 107, 110, 111, 112, 118, 120, 124, 129, 131, 135, 136, 139, 142, 145, 155, 170, 386], "respond": [101, 102, 104, 107, 108, 110, 111, 114, 117, 123, 129, 134, 139, 142, 145, 193, 194, 195, 386], "embedded_feature_factori": [102, 108, 140], "who": [102, 108, 194, 195, 286], "gave": [102, 108, 114, 194, 195, 386], "numeric_var_num_bin": 105, "5": [105, 173, 193, 194, 280, 310, 311, 379, 383, 386], "don": [105, 118, 119, 126, 128, 129, 130, 132, 133, 379, 386], "t": [105, 118, 119, 126, 128, 129, 130, 132, 133, 271, 276, 279, 336, 337, 338, 341, 379, 386], "need": [105, 151, 272, 273, 274, 286, 298, 299, 300, 301, 302, 303, 304, 305, 306, 373, 386], "handl": [105, 278], "complement": 105, "partit": [108, 199, 283, 284, 285, 288, 289, 290, 339, 386], "v": [108, 289, 307, 386], "valid": [108, 111, 114, 117, 133, 136, 147, 152, 157, 158, 159, 165, 166, 169, 170, 171, 386], "datafram": [111, 112, 124, 135, 136, 147, 155, 170, 386], "structur": [111, 124, 386], "inform": [111, 113, 118, 130, 135, 136, 157, 170, 208, 229, 230, 234, 247, 248, 250, 263, 264, 288, 289, 290, 292, 294, 386], "sure": [111, 157, 386], "stai": [111, 208], "synchron": 111, "num_quest": 111, "num_respond": [111, 114, 117, 386], "__getitem__": [111, 210, 233, 249], "retriev": [111, 112], "element": [111, 112, 199, 268, 280], "check_vari": 111, "complete_row": [111, 386], "out": [111, 114, 282, 386], "complet": [111, 114, 271, 281, 386], "count_number_of_unique_answ": 111, "count": [111, 116, 117, 386], "select": [111, 112, 116, 120, 124, 126, 131, 133, 136, 310, 311, 380, 381, 387], "count_valid_answers_per_respond": 111, "guess_missing_variable_rang": [111, 386], "guess": [111, 118, 119, 132], "guess_missing_variable_typ": 111, "replace_variable_nam": 111, "replace_variable_value_label": 111, "dictionari": [111, 113, 125, 126, 133, 157, 386], "map": [111, 125, 126, 157, 167, 168, 278], "replace_variable_valu": 111, "folder": [111, 121, 127, 386], "select_quest": [111, 386], "select_respond": [111, 386], "set_pyreadstat_meta_data": [111, 386], "python": [111, 130, 386], "packag": [111, 130, 386], "pyreadstat": [111, 130, 386], "set_variable_label": 111, "often": [111, 118, 131, 151, 155, 157, 386], "text": [111, 131, 151, 155, 157, 328, 335, 375, 383, 386], "set_variable_typ": [111, 386], "set_variable_value_list": 111, "summar": [111, 386], "summari": [111, 135, 387], "interest": [111, 135, 216, 237, 253, 386], "aspect": [111, 135, 386], "variable_info": [111, 126, 386], "item": [112, 125, 133, 158, 169, 386], "document": [112, 386], "variou": [112, 386], "part": [112, 173, 379, 386], "verbos": [113, 286, 319], "dict": [113, 125, 126, 133, 157, 158, 167, 168, 169, 216, 227, 237, 245, 253, 261, 349, 355, 373], "descript": [113, 278, 386], "print": [113, 286, 386], "consol": 113, "error": [113, 276, 281, 386], "problem": [113, 386], "boolean": [114, 202], "underli": [115, 349, 353], "affect": 115, "validli": 117, "invalid_value_rang": 118, "mark_added_label": 118, "overwrite_existing_inform": 118, "keep_existing_label": 118, "suppress_check_var_warn": [118, 119, 126, 128, 129, 130, 132, 133, 386], "insid": [118, 193, 210, 217, 221, 222, 233, 238, 241, 249, 254, 257, 386], "interv": [118, 193, 194, 380, 386], "inf": 118, "automat": [118, 119, 126, 128, 129, 130, 132, 133, 157, 386], "mark": [118, 379, 386], "overwrit": [118, 272, 273, 298, 299, 301, 302, 304, 305], "alreadi": [118, 210, 216, 221, 222, 227, 233, 237, 241, 245, 249, 253, 257, 261, 374], "present": [118, 383], "keep": [118, 379, 386], "known": [118, 386], "even": [118, 386], "show": [118, 119, 126, 128, 129, 130, 132, 133, 380, 383, 386], "warn": [118, 119, 126, 128, 129, 130, 132, 133], "unus": [118, 119, 126, 128, 129, 130, 132, 133, 386], "all_integer_variables_are_ordin": 119, "assum": [119, 173, 289], "integ": [119, 120, 126, 379, 386], "obtain": [120, 386], "follow": [120, 349, 355, 386], "choos": [120, 386], "singl": [120, 132, 280, 288, 290, 386], "someth": [120, 317, 323, 386], "arraylik": [120, 212, 213, 229, 230, 235, 247, 248, 251, 263, 264, 383], "must": [121, 272, 286, 340, 355, 373, 381], "end": [121, 127, 386], "_data": [121, 127], "csv": [121, 127], "_varinfo": [121, 127], "info": [124, 210, 216, 231, 233, 237, 249, 253, 386], "new_label": [125, 354], "change_type_to": 126, "retain": [126, 167], "natur": [126, 386], "old": [126, 386], "reduc": [128, 129, 386], "row_select": 129, "rowselector": 129, "meta": [130, 210, 216, 233, 237, 249, 253, 386], "type_of_scale_vari": [130, 386], "erase_exist": 130, "scale": [130, 319, 374, 383, 386], "valid_valu": [133, 157, 158, 169, 386], "invalid_valu": [133, 157, 158, 169, 190, 192, 193, 194, 195, 386], "compute_value_count": 136, "possibli": [137, 151, 152, 157, 196, 197, 323], "abl": [137, 143, 386], "treat": [143, 190], "set_factoryfunc": 143, "var_nam": 146, "func": 146, "current": [147, 152, 153, 156, 214, 215, 236, 252, 373, 386], "lower": [147, 148, 150, 152, 156, 283, 284, 285, 286, 386], "similarity_matrix": [147, 152], "scipi": [147, 152, 230, 248, 264, 312, 316, 319, 320, 323, 386], "spars": [147, 152, 210, 230, 233, 248, 249, 264, 266, 267, 276, 281, 282, 296, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 338, 340, 341], "similar": [147, 152, 295, 318, 319, 320, 321, 322, 323, 336, 340, 386], "defaultprogresscallback": [147, 152, 196, 197, 207], "feature_system": [147, 202], "valid_agreement_lower_bound": 147, "change_agr": [147, 386], "initialize_search": 147, "ordered_metadata": [147, 386], "sepcified_featur": 147, "could": [147, 153, 272, 273, 298, 299, 301, 302, 304, 305, 386], "typical_answ": [147, 386], "typic": [147, 155, 386], "force_tree_upd": [148, 386], "prevent": [148, 386], "accident": 148, "consum": [148, 386], "task": [148, 386], "mai": 148, "features_or_separ": [150, 152], "_base": 152, "feature_factori": 152, "only_original_featur": 153, "return_metadata": 154, "remove_duplicate_row": 154, "remove_prefixing_tangl": 154, "ident": 154, "Such": [154, 386], "prefix": [154, 386], "word": [154, 386], "exactli": [154, 196, 197], "only_affected_quest": 155, "extract_const_answ": [155, 386], "remove_incomplete_tangl": [155, 386], "compon": [155, 271, 276, 278, 279, 282, 295, 296, 337, 379], "unknown": [157, 386], "is_us": [157, 386], "brief": 157, "version": [157, 386], "raw": [157, 158, 159, 161, 169, 171, 386], "kei": [157, 386], "meaning": [157, 386], "flag": [157, 381, 386], "nice": [157, 386], "add_valu": 157, "respect": [157, 158, 196, 197, 386], "all_values_as_list": 157, "create_valu": 157, "invalid_values_as_list": 157, "is_nominal_typ": 157, "is_numeric_typ": 157, "is_ordinal_typ": 157, "is_valid_typ": 157, "is_valid_type_nam": 157, "typenam": [157, 166], "replace_valu": 157, "set_value_label": 157, "set_valu": 157, "to_row": 157, "valid_values_as_list": 157, "value_class": 157, "instanc": [157, 172, 380, 386], "type_nam": 166, "length": [170, 212, 213, 229, 230, 235, 247, 248, 251, 263, 264, 338, 339, 341, 344, 346, 386], "6": [170, 173, 386], "usabl": [170, 386], "dot": [173, 386], "10": [173, 278, 318, 377, 378, 379, 380, 383, 386], "our": [173, 216, 237, 253, 386], "4": [173, 386], "smaller": [173, 278, 282, 318, 323, 341], "7": [173, 386], "remain": [173, 282, 386], "order_valu": 177, "all_oriented_sep_id": 177, "original_sep_id": [177, 178], "lower_agr": 177, "forward": [182, 192, 323], "min": 188, "max": [188, 373], "min_incl": 188, "max_incl": 188, "prev": 188, "next": [188, 386], "single_col_data": [189, 190, 192, 193, 194, 195, 198], "unique_valu": [189, 198], "configur": [190, 194, 386], "inaccur": [190, 194], "incorrectli": [190, 194], "declar": [190, 194], "num_bin": [193, 194], "regular": [193, 194], "bin": [193, 194], "whose": [193, 216, 237, 253], "section": [193, 194, 386], "max_num_values_for_extensive_sep": 194, "50": [194, 386], "multipl": [194, 323, 386], "divid": [194, 308, 309], "Their": 194, "boundari": [194, 340, 378, 379], "threshold": [194, 195, 322, 340, 386], "high": [194, 195, 279, 386], "style": [194, 386], "max_number_of_sep": [196, 197], "import": [196, 386], "cannot": [196, 386], "gener": [196, 210, 218, 227, 229, 230, 231, 233, 239, 245, 247, 248, 249, 255, 261, 263, 264, 271, 279, 280, 336, 341, 348, 349, 386], "afterward": [196, 386], "pleas": [196, 386], "bunch": [196, 197, 386], "three": [196, 197, 386], "overlap": [196, 197, 386], "defin": [196, 197, 336, 338, 339, 341], "posit": [196, 197, 278, 279, 289, 336, 340, 345, 349, 355, 373, 374, 377, 378, 379, 383, 386], "minimum": [196, 197, 286, 319, 386], "intersect": [196, 197, 217, 227, 238, 245, 254, 261, 386], "half": [199, 345, 386], "lie": [199, 355], "get_tangle_by_path": 199, "guided_tangl": 199, "is_guid": 199, "stop": 200, "longest": 200, "subpath": 200, "extending_tangl": [203, 205], "extendingtangl": [204, 206], "respons": [204, 205, 348, 349, 386], "extend_tangl": 205, "forbidden_agr": 206, "superset": 206, "atomic_set": [209, 267, 269, 270], "setseparationsystemorderfunc": [209, 286], "data_s": [210, 233], "columnvector": [210, 211], "add_featur": 210, "add_sep": [210, 233, 249], "all_feature_id": 210, "all_sep_id": [210, 233, 249], "assemble_meta_info": [210, 233, 249], "user": [210, 216, 233, 237, 249, 253, 375, 380, 386], "enter": [210, 216, 233, 237, 249, 253], "custom": [210, 216, 231, 233, 237, 249, 253, 386], "prioritis": [210, 216, 233, 237, 249, 253], "befor": [210, 216, 233, 237, 249, 253, 386], "everyth": [210, 216, 233, 237, 249, 253], "els": [210, 216, 233, 237, 249, 253, 379, 386], "compute_infimum": [210, 233, 249], "infimum": [210, 217, 223, 233, 238, 242, 249, 254, 258, 286], "crossing_sep": [210, 233, 249], "feature_metadata": 210, "feature_id": [210, 219], "get_corn": [210, 233, 249], "four": [210, 216, 220, 233, 237, 240, 249, 253, 256, 271, 275, 376, 377, 379, 386], "get_feature_id": 210, "get_sep_id": [210, 233, 249], "infimum_of_two": [210, 233, 249], "is_l": [210, 233, 249], "feat_id_a": [210, 224, 226], "b": [210, 224, 233, 243, 249, 259, 334, 339, 386], "feat_id_b": [210, 224, 226], "is_nest": [210, 233, 249], "nest": [210, 225, 233, 244, 249, 260, 286], "is_subset": 210, "metadata_matrix": [210, 233, 249], "explain": [210, 227, 233, 245, 249, 261], "repeatedli": [210, 227, 233, 245, 249, 261], "separation_metadata": [210, 233, 249], "with_arrai": [210, 233, 249], "with_sparse_arrai": [210, 233, 249], "access": [211, 233, 234, 249, 250, 352, 386], "datapoint": [211, 217, 221, 222, 234, 238, 241, 250, 254, 257], "new_featur": 212, "piec": [212, 213, 229, 230, 231, 232, 235, 247, 248, 251, 263, 264], "new_sep": [213, 235, 251], "store": [214, 215, 236, 252, 386], "known_meta_info": [216, 237, 253], "mere": [216, 237, 253], "being": [216, 237, 244, 253, 260], "info_object": [216, 227, 237, 245, 253, 261], "becom": [216, 237, 253, 386], "specification1": 216, "info_object_1": [216, 237, 253], "specification2": 216, "info_object2": [216, 237, 253], "implic": [216, 237, 253], "meta_info": [216, 237, 253], "avoid": [216, 227, 237, 245, 253, 261, 386], "stuff": [216, 227, 237, 245, 253, 261], "twice": [216, 227, 237, 245, 253, 261, 386], "henc": [217, 238, 254], "sequenc": [218, 239, 255], "link": [219, 386], "feature_id_a": [220, 223], "feature_id_b": [220, 223], "specification_a": [223, 224, 226], "specification_b": [223, 224, 226], "le": [224, 243, 259], "inclus": [224, 386], "prohibit": 224, "latter": [224, 386], "feature_id_1": 225, "feature_id_2": 225, "data_list": [227, 245, 261], "normal_form": [227, 245, 261], "disjunct": [227, 245, 261, 324, 334], "_known_feature_matric": 227, "simplifi": [227, 245, 261, 324], "logic": [227, 245, 261, 287, 325, 326, 327, 328, 329, 330, 332, 333, 335], "term": [227, 245, 261, 324, 329, 330, 335, 386], "conjunct": [227, 245, 261, 324, 334], "normal": [227, 245, 261, 266, 269, 295, 316, 321, 329, 330, 333, 334, 344, 346, 379], "form": [227, 245, 261, 329, 330, 333, 334, 340, 380, 386], "dnf": [227, 245, 261, 324, 329, 330, 333, 334], "union": [227, 245, 261, 386], "cnf": [227, 245, 261, 324, 329, 330, 333, 334], "cach": [227, 245, 261], "return_sep_info": [229, 230, 247, 248, 263, 264], "incom": [229, 230, 247, 248, 263, 264, 386], "input": [229, 230, 247, 248, 263, 264, 271, 275, 278, 324, 329, 330, 333, 349], "csc_matrix": [230, 248, 264, 267, 314], "intuit": 231, "questionnair": [231, 386], "sep_id_a": [233, 240, 242, 243, 249, 256, 258, 259], "sep_id_b": [233, 240, 242, 243, 249, 256, 258, 259], "orientation1": [237, 253], "orientation2": [237, 253], "orientation_a": [242, 243, 258, 259], "orientation_b": [242, 243, 258, 259], "sep_id_1": [244, 260], "sep_id_2": [244, 260], "depend": [244, 260, 349, 386], "_known_sep_matric": [245, 261], "datas": 249, "atomic_set_ind": 266, "atom": [266, 267, 268, 269, 270], "atomic_to_sep": 266, "contract": [266, 269, 270], "seps_to_atom": 266, "csr_matrix": [267, 312, 315, 316, 319, 320, 323, 340, 376], "s_atom": 269, "orderfuncderiv": [271, 273, 274, 277], "cut": [271, 272, 276, 277, 297, 307], "add_all_corners_of_featur": 271, "min_s_t_cut": 271, "weight": [271, 276, 297, 307, 308, 309, 310, 311, 319, 386], "graph": [271, 276, 277, 278, 281, 282, 287, 296, 298, 301, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 349], "adjac": [271, 276, 278, 295, 296, 307, 308, 309, 310, 311, 312, 314, 315, 316, 319, 320, 323], "minimize_cut": 271, "local": [271, 277, 386], "starting_featur": [271, 277], "nodal_domain": 271, "nodal": [271, 278], "domain": [271, 278], "vertic": [271, 276, 278, 282, 308, 309, 310, 311, 314, 321], "real": [271, 278, 386], "pca_featur": 271, "inspir": [271, 279], "princip": [271, 279, 337, 386], "pca": [271, 279], "random_featur": 271, "randomli": [271, 280], "spectral_featur": 271, "spectral": [271, 281, 282], "bipartit": [271, 281, 282, 336, 339, 376, 377, 378, 379], "directli": [271, 279, 281, 386], "eigenvector": [271, 279, 281], "spectral_features_split": 271, "discret": [272, 277, 288, 291, 293], "deriv": [272, 273, 277, 299, 302, 305, 386], "change_discrete_deriv": [272, 298, 301, 304], "help": [272, 273, 298, 299, 301, 302, 304, 305, 386], "perform": [272, 273, 277, 286, 298, 299, 301, 302, 304, 305, 386], "discrete_deriv": [272, 298, 301, 304], "feat": [273, 275, 284, 285, 288, 290, 292, 299, 302, 305, 338, 339, 341], "change_index": [273, 299, 302, 305], "flip": [274, 300, 303, 306], "duplic": [275, 386], "csr_arrai": [276, 298, 301, 304, 307, 308, 309, 310, 311, 318, 321, 322], "vertex": [276, 317, 321], "disjoint": 276, "produc": 276, "identifi": [276, 278, 279, 386], "equival": [276, 386], "float": [276, 278, 280, 282, 293, 318, 319, 320, 321, 322, 338, 340, 341, 355, 373, 383, 384], "flow": 276, "order_deriv": 277, "max_step": 277, "100000000": 277, "initi": [277, 386], "better": [277, 286, 373, 386], "minima": 277, "optim": [277, 340], "u": [278, 337, 386], "weak": 278, "ep": [278, 340], "1e": [278, 318, 340], "detail": [278, 386], "strong": [278, 386], "decomposit": [278, 336, 337], "epsilon": [278, 320], "larger": 278, "like": [278, 317, 321, 323, 340, 379, 386], "close": [278, 317, 321, 340, 386], "closer": 278, "use_j": 279, "orthogon": 279, "direct": [279, 282, 323, 349, 353, 386], "covari": [279, 336, 337], "coordin": [279, 317, 321, 322, 355, 379, 380, 381], "regard": 279, "axi": [279, 321, 344, 345, 346, 347, 355, 373, 380, 383], "particular": 279, "n": [279, 337, 386], "p": [279, 340, 386], "dimens": 279, "lowest": [279, 386], "greatest": 279, "magnitud": 279, "accept": [279, 386], "lead": 279, "exclus": 279, "There": [279, 386], "shortcut": 279, "eigenvalu": [279, 281], "j": [279, 294, 343, 386], "mm": [279, 386], "sens": [279, 386], "larg": [279, 386], "dtype": 279, "num_el": 280, "probabl": [280, 386], "groundset": 280, "independ": [280, 386], "chosen": [280, 355], "ground": 280, "l": [281, 282, 289, 295, 312, 316, 386], "return_eigenvector": 281, "disconnect": 281, "laplacian": [281, 282, 295, 316, 342], "check_connect": 282, "min_component_size_fract": 282, "01": [282, 322, 373], "ignore_small_compon": 282, "faster": 282, "spectral_bipartit": 282, "bigger": [282, 386], "further": [282, 386], "big": [282, 386], "few": [282, 386], "constant": [282, 320], "order_func_bal": 283, "balanc": [283, 284, 285, 337, 338, 341, 344], "order_func_min_side_s": 283, "sys_ord": 286, "done": [286, 330, 386], "suitabl": 286, "chose": 286, "thu": [286, 334], "work": [286, 319, 355, 386], "requir": [286, 386], "submodular": [286, 341], "inject": 286, "star": [286, 386], "todo": 286, "dont": [286, 386], "sy": [286, 386], "ord": 286, "program": [286, 386], "efficient_distinguisher_level": 286, "efficient_distinguisher_id": 286, "entropi": [287, 289, 290, 292, 293, 294], "matrix_ord": [287, 337, 338, 339, 340, 342, 343], "preprocess": [287, 345, 346, 347], "ui": [287, 376, 380, 383, 384, 386], "colsplit_mutual_inform": 288, "mutual": [288, 289, 294, 386], "datapointwise_information_gain": 288, "gain": [288, 290, 292], "information_gain": 288, "joint_entropi": [288, 289], "joint": [288, 293], "pairwise_mutual_inform": 288, "pairwis": [288, 294], "combined_entropi": 289, "max_entropi": 289, "togeth": [289, 386], "entir": [289, 355], "per": [290, 386], "x_1": [291, 293], "x_k": [291, 293], "h": [291, 293, 386], "x_2": 293, "cut_weight": [295, 298, 301, 304, 307, 308, 309], "minor": [295, 314, 386], "connected_component_ind": 295, "greedy_neighborhood": 295, "neighborhood": [295, 310, 311, 317, 320, 386], "greedy_neighborhood_old": 295, "combinatori": [295, 312], "d": [295, 312, 315, 316, 386], "modularity_matrix": 295, "modular": [295, 315], "normalized_laplacian": 295, "2": [295, 316, 321, 322, 340, 373, 383, 386], "cutweightord": [297, 299, 300], "ncutord": [297, 302, 303], "ratiocutord": [297, 305, 306], "cut_weight_ord": 297, "adjacency_matrix": [297, 298, 301, 304, 307, 308, 309], "ncut_ord": 297, "ncut": [297, 308], "ratiocut_ord": 297, "ratiocut": [297, 309], "sum": [307, 308, 309, 322, 330], "across": [307, 308, 309], "o1": 307, "book": [307, 336, 342, 343, 386], "w": [307, 386], "orderfunct": [307, 308, 309], "multipli": [308, 309, 330], "total": [308, 309, 337, 373, 386], "volum": 308, "start_neighborhood": [310, 311], "forbidden_vertic": [310, 311], "minimize_weight": [310, 311], "best": [310, 311, 386], "ones": [310, 311], "greedi": [310, 311], "procedur": [310, 311], "_sparrai": 312, "diagon": [312, 316, 341], "contract_graph": 313, "bag": [313, 314], "bag_ind": 314, "cosine_similar": 317, "cosin": [317, 318, 319], "cosine_similarity_graph_csr_data": 317, "epsilon_neighborhood_graph": 317, "distanc": [317, 320, 321, 322, 323, 336, 340, 379], "grid_distance_graph": 317, "grid": [317, 321], "image_to_similarity_graph": 317, "pixel": [317, 321, 322, 383], "imag": [317, 322, 375, 383], "k_nearest_neighbor": 317, "nearest": [317, 323], "sim_thresh": [318, 319], "max_neighbour": 318, "return_spars": 318, "sequenti": [318, 386], "memori": [318, 319], "slower": [318, 386], "issu": 318, "mat": 319, "25": [319, 386], "weight_rang": 319, "chunk_siz": 319, "100": [319, 386], "matric": [319, 334], "cosine_similarity_graph": 319, "chunk": 319, "adj_matrix": 319, "max_dist": [320, 321], "dist2sim": 320, "metric": [320, 321, 323], "condens": [320, 323], "spatial": [320, 323], "squareform": [320, 323], "pdist": [320, 323], "argument": [320, 323], "transform": 320, "unweight": 320, "grid_shap": 321, "dist": 321, "euklid": 321, "squar": [321, 339], "manhattan": 321, "pixel_coord_distance_graph": 322, "sigma_c": 322, "sigma_d": 322, "color_sim_p": 322, "gaussian": 322, "color": [322, 377, 378, 379], "appli": [322, 383, 386], "absolut": [322, 386], "channel": 322, "width": [322, 373, 386], "grayscal": 322, "spread": 322, "sprase": 322, "ties_al": 323, "them": [323, 386], "realli": [323, 386], "nn": [323, 386], "ti": [323, 386], "broken": [323, 386], "special": [323, 386], "sep_to_term": [324, 332], "logcial": [324, 334], "made": [324, 334, 381], "claus": [324, 334], "themselv": [324, 334], "liter": [324, 334], "said": [324, 334], "conjunctivenormalform": 324, "disjunctivenormalform": 324, "logicterm": 324, "textterm": [324, 335], "distribut": 324, "row_label": [325, 326], "_outer_oper": 328, "terma": [329, 330], "termb": [329, 330], "law": [330, 386], "recursionlog": 331, "feature_label": 332, "og_sep": 332, "matter": 333, "conjuct": 334, "c": [334, 337, 338, 341, 386], "On": 334, "hand": 334, "As": [334, 386], "tell": 334, "semantictextterm": 334, "matrixordersvd": 336, "approxim": [336, 337], "singular": [336, 337], "covariance_ord": 336, "logdet_ord": 336, "f": [336, 337, 338, 339, 341, 386], "log": [336, 339], "det": [336, 339], "m_a": [336, 339], "m_b": [336, 339], "margin_order_matrix": 336, "quadrat": [336, 340, 341], "o_fiv": 336, "o5": [336, 342], "o_seven": 336, "o7": [336, 343], "mode": [337, 386], "variance_explain": 337, "shift": [337, 338, 341], "svd_arg": 337, "col": 337, "want": [337, 380, 383, 386], "evalu": 337, "af": [337, 338, 386], "paramet": [337, 386], "prefer": [337, 338, 341, 386], "effect": [337, 338, 341], "supermodular": [337, 338, 341], "let": [337, 338, 341, 386], "cj": [337, 338, 341], "vt": 337, "signific": 337, "fraction": [337, 373], "varianc": 337, "margin": 340, "08": 340, "sparse_mat": 340, "distance_p": 340, "behav": 340, "fictiti": 340, "minkowski": 340, "norm": 340, "infti": 340, "outsid": [341, 386], "main": [341, 386], "along": [344, 345, 346, 347], "median": [344, 345], "subtract": [344, 345], "normalize_length": 344, "euclidean": [344, 346], "balanced_data": 345, "deviat": 347, "convert": [347, 386], "bintreenetworkx": [348, 350, 351, 352, 353, 354, 355], "networkx": [348, 349, 378, 379], "bintre": [348, 356], "graphnod": 348, "treenod": [348, 373, 374], "plot_tre": [348, 374], "plot": [348, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383], "print_node_label": [348, 373], "depths_for_layout": 349, "successor": 349, "choic": 349, "descend": 349, "draw": [349, 376, 377, 378, 380], "get_ids_from_label": 349, "get_label": 349, "relabel": 349, "tst_layout": 349, "ax": [350, 373, 374, 377, 378, 379, 380, 383, 384, 386], "draw_node_label_func": 350, "draw_edge_label_func": 350, "node_label_s": 350, "05": [350, 378, 379], "edge_label_s": 350, "03": [350, 377], "level_label_width": [350, 386], "draw_level": 350, "level_label_func": [350, 386], "node_id": [352, 354], "digraph": 353, "nx": 353, "awai": [353, 386], "y": [355, 380, 381, 383, 386], "sinc": 355, "grow": 355, "toward": [355, 386], "bottom": 355, "layout": [355, 378], "when": [356, 386], "some_tree_nod": 373, "search_cent": 373, "plot_nod": 373, "edge_color": [373, 377, 378, 379], "node_s": [373, 374, 377, 379], "ax_project": 373, "plot_edge_annot": 373, "edge_annotation_s": 373, "matplotlib": [373, 374, 378, 379, 380, 383, 386], "activ": [373, 386], "center": [373, 386], "plotnodefunc": 373, "circl": [373, 376, 379], "figur": [373, 383, 386], "project": 373, "rectilinear": 373, "fit": 373, "uncommon": [373, 386], "plotedgeannotationfunc": 373, "annot": [373, 375, 383, 384], "move": 374, "splitgraph": [375, 377, 378, 379], "xypick": [375, 381, 382], "pick": [375, 380], "plot_annot": [375, 384], "wrap_annotation_func_ax": [375, 383], "annotationfuncimg": [375, 383, 384], "annotationfuncax": [375, 384], "draw_ellips": [376, 379], "arrang": [376, 377, 379], "ellips": [376, 377], "draw_side_and_boundari": 376, "draw_stacked_circl": 376, "inner_node_color_neg": [377, 379], "boundary_node_color_neg": [377, 379], "r": [377, 378, 379, 386], "inner_node_color_po": [377, 379], "boundary_node_color_po": [377, 379], "pos_sid": 378, "node_posit": 378, "inner_node_color": [378, 379], "boundary_node_color": [378, 379], "inner_node_s": 378, "boundary_node_s": 378, "inner": [378, 386], "marked_nodes_ind": 379, "marked_node_s": 379, "marked_nodes_color": 379, "horizont": 379, "flip_pos_sid": 379, "center_boundary_part": 379, "fixed_stack_dist": 379, "prev_po": 379, "third": 379, "fourth": 379, "drawn": 379, "diamet": 379, "stack": 379, "unit": [379, 383, 386], "marked_nodes_s": 379, "revers": 379, "forc": [379, 386], "mid": 379, "fix": [379, 386], "factor": 379, "interpol": 379, "drawn_po": 379, "po": 379, "mainli": [379, 386], "movi": 379, "sel_callback": 380, "xrang": 380, "yrang": 380, "xtick": 380, "ytick": 380, "continuous_upd": 380, "draw_custom_pick": 380, "librari": [380, 386], "callback_object": 380, "min_x_valu": 380, "max_x_valu": 380, "min_y_valu": 380, "max_y_valu": 380, "tick": 380, "drag": [380, 383], "drop": [380, 386], "click": [380, 383], "selected_x": 380, "selected_i": 380, "picker": 380, "xlabel": [380, 383], "ylabel": [380, 383], "__init__": 380, "furthermor": 380, "listen": [380, 381], "redraw": [380, 381, 382], "sel_x": 381, "sel_i": 381, "with_callback": 381, "annotation_x_posit": 383, "annotation_offset": 383, "annotation_func": 383, "annotation_is_imag": 383, "annotation_zoom": 383, "titl": [383, 386], "figsiz": [383, 386], "caller": 383, "offset": 383, "dx": 383, "dy": 383, "box": [383, 386], "annotationfunctxt": 383, "content": 383, "pass": 383, "curv": 383, "mous": 383, "annotation_func_ax": 384, "your": [384, 386], "date": [385, 386], "dec": [385, 386], "22": [385, 386], "2023": 385, "html": 386, "90": 386, "sp": 386, "pyplot": 386, "plt": 386, "ipython": 386, "displai": 386, "surveytanglesvisu": 386, "plot_tangle_search_tre": 386, "set_opt": 386, "max_row": 386, "max_column": 386, "max_colwidth": 386, "vscrollbar": 386, "selector": 386, "prop": 386, "500px": 386, "overflow": 386, "scroll": 386, "inlin": 386, "block": 386, "def": 386, "styled_df": 386, "df": 386, "scrollabl": 386, "set_properti": 386, "border": 386, "1px": 386, "black": 386, "solid": 386, "set_table_styl": 386, "notebook": 386, "purpos": 386, "facil": 386, "showcas": 386, "recommend": 386, "practic": 386, "investig": 386, "european": 386, "studi": 386, "ev": 386, "2017": 386, "nation": 386, "repeat": 386, "research": 386, "programm": 386, "basic": 386, "human": 386, "insight": 386, "idea": 386, "belief": 386, "attitud": 386, "opinion": 386, "citizen": 386, "over": 386, "europ": 386, "websit": 386, "due": 386, "licens": 386, "restrict": 386, "share": 386, "repositori": 386, "regist": 386, "download": 386, "free": 386, "gesi": 386, "spss": 386, "integr": 386, "extract": 386, "zip": 386, "za7500_v5": 386, "sav": 386, "quick": 386, "overview": 386, "interfac": 386, "read": 386, "export": 386, "profession": 386, "statist": 386, "tool": 386, "stata": 386, "qualiti": 386, "vari": 386, "greatli": 386, "workflow": 386, "therefor": 386, "post": 386, "process": 386, "nevertheless": 386, "good": 386, "lot": 386, "highli": 386, "user_miss": 386, "read_sav": 386, "job": 386, "sync": 386, "cell": 386, "complete_survei": 386, "properli": 386, "crucial": 386, "support": 386, "finit": 386, "ask": 386, "favorit": 386, "ic": 386, "cream": 386, "categori": 386, "dai": 386, "week": 386, "eat": 386, "onc": 386, "These": 386, "potenti": 386, "arbitrari": 386, "amount": 386, "monei": 386, "spent": 386, "year": 386, "alwai": 386, "unambigu": 386, "especi": 386, "becaus": 386, "classifi": 386, "ratio": 386, "techniqu": 386, "appropri": 386, "inappropri": 386, "context": 386, "fortun": 386, "easili": 386, "customiz": 386, "scope": 386, "a_1": 386, "a_k": 386, "a_i": 386, "a_2": 386, "a_": 386, "space": 386, "Then": 386, "earlier": 386, "tabl": 386, "inspect": 386, "nbsp": 386, "num_valid_answ": 386, "num_unique_answ": 386, "studyno": 386, "59438": 386, "archiv": 386, "doi": 386, "digit": 386, "studynoc": 386, "36": 386, "versionc": 386, "id_coca": 386, "unifi": 386, "caseno": 386, "19504": 386, "2018": 386, "2019": 386, "2020": 386, "2021": 386, "fw_start": 386, "month": 386, "fieldwork": 386, "19": 386, "fw_end": 386, "9": 386, "countri": 386, "code": 386, "iso": 386, "3166": 386, "albania": 386, "31": 386, "azerbaijan": 386, "40": 386, "austria": 386, "51": 386, "armenia": 386, "70": 386, "bosnia": 386, "herzegovina": 386, "bulgaria": 386, "112": 386, "belaru": 386, "191": 386, "croatia": 386, "203": 386, "czechia": 386, "208": 386, "denmark": 386, "233": 386, "estonia": 386, "246": 386, "finland": 386, "250": 386, "franc": 386, "268": 386, "georgia": 386, "276": 386, "germani": 386, "300": 386, "greec": 386, "348": 386, "hungari": 386, "352": 386, "iceland": 386, "380": 386, "itali": 386, "428": 386, "latvia": 386, "440": 386, "lithuania": 386, "499": 386, "montenegro": 386, "528": 386, "netherland": 386, "578": 386, "norwai": 386, "616": 386, "poland": 386, "620": 386, "portug": 386, "642": 386, "romania": 386, "643": 386, "russia": 386, "688": 386, "serbia": 386, "703": 386, "slovakia": 386, "705": 386, "slovenia": 386, "724": 386, "spain": 386, "752": 386, "sweden": 386, "756": 386, "switzerland": 386, "804": 386, "ukrain": 386, "807": 386, "north": 386, "macedonia": 386, "826": 386, "great": 386, "britain": 386, "c_abrv": 386, "11": 386, "abbrevi": 386, "alpha": 386, "cntry_i": 386, "12": 386, "fw": 386, "82018": 386, "312018": 386, "402018": 386, "512018": 386, "702019": 386, "1002017": 386, "1122018": 386, "1912017": 386, "2032017": 386, "2082017": 386, "2332018": 386, "2462017": 386, "2462018": 386, "2502018": 386, "2682018": 386, "2762017": 386, "3002019": 386, "3482018": 386, "3522017": 386, "3802018": 386, "4282021": 386, "4402018": 386, "4992019": 386, "5282017": 386, "5782018": 386, "6162017": 386, "6202020": 386, "6422018": 386, "6422019": 386, "6432017": 386, "6882018": 386, "7032017": 386, "7052017": 386, "7242017": 386, "7522017": 386, "7562017": 386, "8042020": 386, "8072019": 386, "8262018": 386, "13": 386, "collect": 386, "capi": 386, "papi": 386, "cawi": 386, "mail": 386, "cati": 386, "mm_select_sampl": 386, "14": 386, "mix": 386, "subsampl": 386, "interview": 386, "administ": 386, "self": 386, "full": 386, "modifi": 386, "de": 386, "break": 386, "off": 386, "mm_mixed_mod": 386, "15": 386, "design": 386, "experi": 386, "mod": 386, "mm_mode_fu": 386, "16": 386, "applic": 386, "3851": 386, "mm_matrix_group": 386, "17": 386, "21": 386, "41": 386, "61": 386, "8346": 386, "mm_original_matrix_design_i": 386, "18": 386, "709": 386, "mm_original_matrix_group_i": 386, "mm_fw_start_fu": 386, "20": 386, "3379": 386, "mm_fw_end_fu": 386, "mm_year_fu": 386, "mr_detailed_mode_d": 386, "23": 386, "sampl": 386, "phase": 386, "multi_referenc": 386, "676": 386, "mr_contact_mode_d": 386, "24": 386, "contact": 386, "simultan": 386, "mr_incentive_d": 386, "incent": 386, "euro": 386, "eur": 386, "postpaid": 386, "prepaid": 386, "fduplic": 386, "26": 386, "merg": 386, "fmiss": 386, "27": 386, "incomplet": 386, "v1": 386, "28": 386, "life": 386, "q1a": 386, "veri": 386, "quit": 386, "58727": 386, "v2": 386, "29": 386, "famili": 386, "q1b": 386, "59221": 386, "v3": 386, "30": 386, "friend": 386, "acquaint": 386, "q1c": 386, "59215": 386, "v4": 386, "leisur": 386, "q1d": 386, "59032": 386, "v5": 386, "32": 386, "polit": 386, "q1e": 386, "58764": 386, "v6": 386, "33": 386, "religion": 386, "q1f": 386, "58622": 386, "v7": 386, "34": 386, "thing": 386, "happi": 386, "q2": 386, "58707": 386, "v8": 386, "35": 386, "state": 386, "health": 386, "q3": 386, "fair": 386, "poor": 386, "59304": 386, "v9": 386, "belong": 386, "religi": 386, "organ": 386, "q4a": 386, "mention": 386, "58333": 386, "v10": 386, "37": 386, "cultur": 386, "q4b": 386, "58284": 386, "v11": 386, "38": 386, "trade": 386, "q4c": 386, "58269": 386, "v12": 386, "39": 386, "parti": 386, "q4d": 386, "58243": 386, "v13": 386, "environ": 386, "ecologi": 386, "anim": 386, "q4e": 386, "58271": 386, "v14": 386, "q4f": 386, "58223": 386, "v15": 386, "42": 386, "sport": 386, "recreat": 386, "q4g": 386, "58374": 386, "v16": 386, "43": 386, "charit": 386, "humanitarian": 386, "q4h": 386, "58259": 386, "v17": 386, "44": 386, "q4i": 386, "58181": 386, "v18": 386, "45": 386, "aid": 386, "q4j": 386, "58176": 386, "v19": 386, "46": 386, "q4k": 386, "57728": 386, "f20": 386, "47": 386, "inconsist": 386, "spontan": 386, "q4": 386, "consist": 386, "dk": 386, "na": 386, "although": 386, "53834": 386, "v20": 386, "48": 386, "53185": 386, "v20a": 386, "49": 386, "mq": 386, "26602": 386, "v20b": 386, "26337": 386, "v21": 386, "did": 386, "voluntari": 386, "q5": 386, "ye": 386, "58986": 386, "v22": 386, "52": 386, "peopl": 386, "race": 386, "q6a": 386, "57084": 386, "v23": 386, "53": 386, "heavi": 386, "drinker": 386, "q6b": 386, "58075": 386, "v24": 386, "54": 386, "immigr": 386, "foreign": 386, "worker": 386, "q6c": 386, "56520": 386, "f24_it": 386, "55": 386, "IT": 386, "experiment": 386, "v24a_it": 386, "v24b_it": 386, "2277": 386, "56": 386, "303": 386, "57": 386, "335": 386, "v25": 386, "58": 386, "drug": 386, "addict": 386, "q6d": 386, "58247": 386, "v26": 386, "59": 386, "homosexu": 386, "q6e": 386, "57513": 386, "v27": 386, "60": 386, "christian": 386, "major": 386, "q6f": 386, "49003": 386, "v28": 386, "muslim": 386, "q6g": 386, "55587": 386, "v29": 386, "62": 386, "jew": 386, "q6h": 386, "57061": 386, "v30": 386, "63": 386, "gypsi": 386, "q6i": 386, "57288": 386, "f30a": 386, "64": 386, "q6": 386, "19276": 386, "v30a": 386, "65": 386, "wouldn": 386, "mind": 386, "17871": 386, "v30b": 386, "66": 386, "18369": 386, "v30c": 386, "67": 386, "18823": 386, "v31": 386, "68": 386, "trust": 386, "too": 386, "care": 386, "q7": 386, "58083": 386, "v32": 386, "69": 386, "q8a": 386, "somewhat": 386, "59178": 386, "v33": 386, "q8b": 386, "58616": 386, "v34": 386, "71": 386, "person": 386, "q8c": 386, "58981": 386, "v35": 386, "72": 386, "meet": 386, "q8d": 386, "57969": 386, "v36": 386, "73": 386, "q8e": 386, "54785": 386, "v37": 386, "74": 386, "q8f": 386, "55087": 386, "v38": 386, "75": 386, "control": 386, "q9": 386, "deal": 386, "58550": 386, "v39": 386, "76": 386, "satisfi": 386, "q10": 386, "dissatisfi": 386, "59122": 386, "v40": 386, "77": 386, "pai": 386, "q11a": 386, "58740": 386, "v41": 386, "78": 386, "hour": 386, "q11b": 386, "58538": 386, "v42": 386, "79": 386, "opportun": 386, "q11c": 386, "57902": 386, "v43": 386, "80": 386, "holidai": 386, "q11d": 386, "58007": 386, "v44": 386, "81": 386, "achiev": 386, "q11e": 386, "58218": 386, "v45": 386, "82": 386, "q11f": 386, "57965": 386, "f45a": 386, "83": 386, "q11": 386, "iconsist": 386, "55646": 386, "v45a": 386, "84": 386, "55039": 386, "v45b": 386, "85": 386, "26626": 386, "v45c": 386, "86": 386, "27351": 386, "v46": 386, "87": 386, "develop": 386, "talent": 386, "q12a": 386, "agre": 386, "strongli": 386, "neither": 386, "nor": 386, "disagre": 386, "58777": 386, "f46_it": 386, "88": 386, "cat": 386, "v50": 386, "q12": 386, "accordo": 386, "contrario": 386, "against": 386, "disaccordo": 386, "v47": 386, "89": 386, "humili": 386, "receiv": 386, "without": 386, "q12b": 386, "58515": 386, "v48": 386, "lazi": 386, "q12c": 386, "58687": 386, "v49": 386, "91": 386, "duti": 386, "societi": 386, "q12d": 386, "58714": 386, "92": 386, "come": 386, "q12e": 386, "58820": 386, "v51": 386, "93": 386, "denomin": 386, "q13": 386, "58984": 386, "v52": 386, "94": 386, "q13a": 386, "harmon": 386, "roman": 386, "cathol": 386, "protest": 386, "church": 386, "conformist": 386, "evangel": 386, "hindu": 386, "buddhist": 386, "orthodox": 386, "41037": 386, "v52_c": 386, "95": 386, "801": 386, "al": 386, "sunni": 386, "802": 386, "bekrathi": 386, "803": 386, "805": 386, "806": 386, "mormon": 386, "808": 386, "jehovah": 386, "wit": 386, "809": 386, "810": 386, "bah\u00e1": 386, "\u00ed": 386, "811": 386, "jewish": 386, "812": 386, "813": 386, "write": 386, "3101": 386, "az": 386, "3102": 386, "3103": 386, "3104": 386, "3105": 386, "baha": 386, "3106": 386, "3130": 386, "xa0oth": 386, "4001": 386, "AT": 386, "4002": 386, "greek": 386, "4003": 386, "armen": 386, "4004": 386, "4005": 386, "4006": 386, "augsburg": 386, "confess": 386, "4007": 386, "helvet": 386, "4008": 386, "4009": 386, "4010": 386, "4011": 386, "4012": 386, "russian": 386, "saint": 386, "nichola": 386, "4013": 386, "polish": 386, "4014": 386, "rumanian": 386, "commun": 386, "holi": 386, "resurrect": 386, "4015": 386, "serbian": 386, "sava": 386, "4016": 386, "bulgarian": 386, "ivan": 386, "rilski": 386, "4017": 386, "4018": 386, "jesu": 386, "christ": 386, "4019": 386, "4020": 386, "4021": 386, "4022": 386, "4023": 386, "alev": 386, "4024": 386, "shia": 386, "4025": 386, "4026": 386, "islam": 386, "4027": 386, "faith": 386, "4028": 386, "4029": 386, "4030": 386, "4031": 386, "5101": 386, "am": 386, "armenian": 386, "apostol": 386, "5102": 386, "5103": 386, "5104": 386, "5105": 386, "5106": 386, "yazidi": 386, "5116": 386, "7001": 386, "ba": 386, "7002": 386, "7003": 386, "7004": 386, "7005": 386, "7006": 386, "adventist": 386, "7007": 386, "baptist": 386, "7008": 386, "7030": 386, "10001": 386, "bg": 386, "10002": 386, "10003": 386, "10004": 386, "10005": 386, "10006": 386, "10030": 386, "11201": 386, "BY": 386, "11202": 386, "pentecost": 386, "11203": 386, "11204": 386, "11205": 386, "seventh": 386, "11206": 386, "whole": 386, "gospel": 386, "11207": 386, "believ": 386, "11208": 386, "judaic": 386, "judaism": 386, "11209": 386, "lutheran": 386, "11210": 386, "11211": 386, "moslem": 386, "11212": 386, "11213": 386, "uniat": 386, "11214": 386, "19101": 386, "hr": 386, "19102": 386, "19103": 386, "19104": 386, "zagreb": 386, "19105": 386, "19106": 386, "19107": 386, "republ": 386, "croatian": 386, "19108": 386, "slovenian": 386, "confer": 386, "19109": 386, "19110": 386, "19116": 386, "20301": 386, "cz": 386, "20302": 386, "20303": 386, "20304": 386, "czech": 386, "brethren": 386, "20305": 386, "czechoslovak": 386, "hussit": 386, "20306": 386, "20307": 386, "20308": 386, "20309": 386, "20310": 386, "20311": 386, "20312": 386, "20801": 386, "20802": 386, "20803": 386, "20804": 386, "20805": 386, "20806": 386, "nors": 386, "20807": 386, "23301": 386, "ee": 386, "23302": 386, "moscow": 386, "23303": 386, "constantinopl": 386, "23304": 386, "23305": 386, "judaist": 386, "23306": 386, "23307": 386, "24601": 386, "fi": 386, "xa0evangel": 386, "24602": 386, "24603": 386, "24604": 386, "24605": 386, "24606": 386, "24607": 386, "24608": 386, "24610": 386, "25001": 386, "fr": 386, "25002": 386, "25003": 386, "25004": 386, "25005": 386, "25006": 386, "25007": 386, "25008": 386, "25016": 386, "25088": 386, "25099": 386, "26801": 386, "ge": 386, "26802": 386, "26803": 386, "gregorian": 386, "26804": 386, "26805": 386, "26806": 386, "26807": 386, "26808": 386, "sun": 386, "cult": 386, "26809": 386, "26816": 386, "27601": 386, "27602": 386, "27603": 386, "27604": 386, "27605": 386, "27606": 386, "27607": 386, "34801": 386, "hu": 386, "34802": 386, "34803": 386, "calvinist": 386, "34804": 386, "34805": 386, "34806": 386, "34807": 386, "34808": 386, "34809": 386, "jehova": 386, "34810": 386, "krishna": 386, "conscious": 386, "34815": 386, "35201": 386, "xa0": 386, "35202": 386, "35203": 386, "congreg": 386, "35204": 386, "reykjavik": 386, "35205": 386, "hafnarfj\u00f6r\u00f0ur": 386, "35206": 386, "assembli": 386, "35207": 386, "35208": 386, "35209": 386, "asatru": 386, "35210": 386, "sm\u00e1rakirkja": 386, "35211": 386, "35212": 386, "35213": 386, "35214": 386, "35215": 386, "35216": 386, "sidmennt": 386, "ethic": 386, "humanist": 386, "35217": 386, "35218": 386, "zuism": 386, "35219": 386, "35220": 386, "38001": 386, "38002": 386, "38003": 386, "38004": 386, "jeovah": 386, "Withnesses": 386, "etc": 386, "38005": 386, "38006": 386, "38007": 386, "38008": 386, "38030": 386, "42801": 386, "lv": 386, "42802": 386, "42803": 386, "42804": 386, "42805": 386, "42806": 386, "42807": 386, "42808": 386, "methodist": 386, "42809": 386, "42810": 386, "42811": 386, "42816": 386, "44001": 386, "lt": 386, "44002": 386, "44003": 386, "44004": 386, "44005": 386, "reform": 386, "44006": 386, "44007": 386, "44008": 386, "44016": 386, "49901": 386, "me": 386, "49902": 386, "montenegrin": 386, "49903": 386, "49904": 386, "49905": 386, "49906": 386, "49907": 386, "eastern": 386, "49916": 386, "49977": 386, "49988": 386, "49999": 386, "52801": 386, "nl": 386, "52802": 386, "52803": 386, "52804": 386, "52805": 386, "52806": 386, "52807": 386, "52808": 386, "52809": 386, "52810": 386, "buddhism": 386, "52811": 386, "57801": 386, "NO": 386, "57802": 386, "57803": 386, "57804": 386, "57805": 386, "57806": 386, "57807": 386, "57808": 386, "57809": 386, "61601": 386, "pl": 386, "61602": 386, "orhodox": 386, "61603": 386, "61604": 386, "mainstream": 386, "61605": 386, "61606": 386, "61607": 386, "mariavit": 386, "61608": 386, "61609": 386, "61610": 386, "buddism": 386, "61611": 386, "62001": 386, "pt": 386, "62002": 386, "62003": 386, "62004": 386, "62005": 386, "62006": 386, "62007": 386, "62008": 386, "62009": 386, "62010": 386, "64201": 386, "ro": 386, "64202": 386, "64203": 386, "64204": 386, "64205": 386, "64206": 386, "64207": 386, "budhist": 386, "64208": 386, "64209": 386, "whit": 386, "64216": 386, "64301": 386, "ru": 386, "64302": 386, "catholic": 386, "64303": 386, "protestant": 386, "64304": 386, "64305": 386, "64306": 386, "64307": 386, "64316": 386, "68801": 386, "68802": 386, "68803": 386, "68804": 386, "68805": 386, "68806": 386, "68807": 386, "slovakian": 386, "68808": 386, "68809": 386, "68810": 386, "68830": 386, "70301": 386, "sk": 386, "70302": 386, "70303": 386, "70304": 386, "70305": 386, "70306": 386, "70307": 386, "70308": 386, "70309": 386, "70310": 386, "70311": 386, "70312": 386, "70316": 386, "70501": 386, "si": 386, "70502": 386, "70503": 386, "70504": 386, "70505": 386, "70506": 386, "70507": 386, "hinduist": 386, "70508": 386, "70509": 386, "70510": 386, "72401": 386, "72402": 386, "72403": 386, "72404": 386, "72405": 386, "england": 386, "anglican": 386, "72406": 386, "72407": 386, "72408": 386, "presbyterian": 386, "scotland": 386, "72409": 386, "72410": 386, "72411": 386, "72412": 386, "72413": 386, "72414": 386, "72416": 386, "75201": 386, "se": 386, "swedish": 386, "75202": 386, "75203": 386, "75204": 386, "75205": 386, "75206": 386, "75207": 386, "75208": 386, "75216": 386, "75601": 386, "ch": 386, "75602": 386, "75603": 386, "75604": 386, "75605": 386, "75606": 386, "75607": 386, "75608": 386, "75609": 386, "75616": 386, "80401": 386, "ua": 386, "metropolitan": 386, "epiphanii": 386, "80402": 386, "ukrainian": 386, "onufrii": 386, "80403": 386, "80404": 386, "80405": 386, "80406": 386, "80407": 386, "80408": 386, "80409": 386, "charismat": 386, "80410": 386, "80411": 386, "80412": 386, "80413": 386, "80414": 386, "hinduism": 386, "80415": 386, "80701": 386, "mk": 386, "80702": 386, "80703": 386, "80704": 386, "irc": 386, "80705": 386, "80706": 386, "80716": 386, "82601": 386, "gb": 386, "82602": 386, "82603": 386, "82604": 386, "82605": 386, "82606": 386, "82607": 386, "82608": 386, "82609": 386, "urc": 386, "82610": 386, "IN": 386, "82611": 386, "82612": 386, "82613": 386, "82614": 386, "82615": 386, "sikh": 386, "82616": 386, "82617": 386, "41036": 386, "299": 386, "v53": 386, "96": 386, "q14": 386, "18919": 386, "v54": 386, "97": 386, "attend": 386, "servic": 386, "q15": 386, "never": 386, "58851": 386, "v55": 386, "98": 386, "q16": 386, "57551": 386, "v56": 386, "99": 386, "q17": 386, "convinc": 386, "atheist": 386, "57082": 386, "v57": 386, "god": 386, "q18a": 386, "55894": 386, "v58": 386, "101": 386, "death": 386, "q18b": 386, "51186": 386, "v59": 386, "102": 386, "hell": 386, "q18c": 386, "51868": 386, "v60": 386, "103": 386, "heaven": 386, "q18d": 386, "51899": 386, "v61": 386, "104": 386, "re": 386, "incarn": 386, "q19": 386, "52299": 386, "v62": 386, "105": 386, "statement": 386, "closest": 386, "q20": 386, "spirit": 386, "think": 386, "57497": 386, "v63": 386, "106": 386, "q21": 386, "57947": 386, "v64": 386, "107": 386, "prai": 386, "q22": 386, "sever": 386, "57882": 386, "v65": 386, "108": 386, "marriag": 386, "q23a": 386, "rather": 386, "59138": 386, "v66": 386, "109": 386, "adequ": 386, "q23b": 386, "59078": 386, "v67": 386, "110": 386, "hous": 386, "q23c": 386, "59121": 386, "v68": 386, "111": 386, "household": 386, "chore": 386, "q23d": 386, "58887": 386, "v69": 386, "q23e": 386, "58676": 386, "v70": 386, "113": 386, "hobbi": 386, "q23f": 386, "58814": 386, "v71": 386, "114": 386, "outdat": 386, "q24": 386, "57349": 386, "v72": 386, "115": 386, "suffer": 386, "mother": 386, "q25a": 386, "58080": 386, "v72_de": 386, "116": 386, "middl": 386, "v73": 386, "117": 386, "women": 386, "home": 386, "q25b": 386, "57241": 386, "v73_de": 386, "118": 386, "v74": 386, "119": 386, "woman": 386, "q25c": 386, "58055": 386, "v74_de": 386, "120": 386, "v75": 386, "121": 386, "man": 386, "earn": 386, "q25d": 386, "58466": 386, "v75_de": 386, "122": 386, "v76": 386, "123": 386, "men": 386, "leader": 386, "q25e": 386, "56994": 386, "v76_de": 386, "124": 386, "v77": 386, "125": 386, "univers": 386, "educ": 386, "boi": 386, "girl": 386, "q25f": 386, "58183": 386, "v77_de": 386, "126": 386, "v78": 386, "127": 386, "busi": 386, "execut": 386, "q25g": 386, "57158": 386, "v78_de": 386, "128": 386, "v79": 386, "129": 386, "goal": 386, "my": 386, "proud": 386, "q25h": 386, "56622": 386, "v79_de": 386, "130": 386, "v80": 386, "131": 386, "scarc": 386, "give": 386, "prioriti": 386, "q26a": 386, "58633": 386, "v81": 386, "132": 386, "q26b": 386, "58695": 386, "v82": 386, "133": 386, "coupl": 386, "q27a": 386, "54764": 386, "v83": 386, "134": 386, "q27b": 386, "58491": 386, "v84": 386, "135": 386, "long": 386, "q27c": 386, "58678": 386, "f85": 386, "136": 386, "learn": 386, "five": 386, "q28": 386, "v85": 386, "137": 386, "manner": 386, "q28a": 386, "58798": 386, "v86": 386, "138": 386, "q28b": 386, "58627": 386, "v87": 386, "139": 386, "q28c": 386, "58708": 386, "v88": 386, "140": 386, "feel": 386, "q28d": 386, "58729": 386, "v89": 386, "141": 386, "imagin": 386, "q28e": 386, "58160": 386, "v90": 386, "142": 386, "toler": 386, "q28f": 386, "58560": 386, "v91": 386, "143": 386, "thrift": 386, "q28g": 386, "58432": 386, "v92": 386, "144": 386, "persever": 386, "q28h": 386, "58376": 386, "v93": 386, "145": 386, "q28i": 386, "58124": 386, "v94": 386, "146": 386, "unselfish": 386, "q28j": 386, "58190": 386, "v95": 386, "147": 386, "obedi": 386, "q28k": 386, "58189": 386, "f96": 386, "148": 386, "54275": 386, "v96": 386, "149": 386, "53671": 386, "v96a": 386, "150": 386, "32113": 386, "v96b": 386, "151": 386, "32838": 386, "v97": 386, "152": 386, "q29": 386, "59132": 386, "v98": 386, "153": 386, "action": 386, "sign": 386, "petit": 386, "q30a": 386, "57002": 386, "v99": 386, "154": 386, "join": 386, "boycott": 386, "q30b": 386, "55875": 386, "v100": 386, "155": 386, "demonstr": 386, "q30c": 386, "v101": 386, "156": 386, "unoffici": 386, "strike": 386, "q30d": 386, "55474": 386, "v102": 386, "157": 386, "view": 386, "q31": 386, "47723": 386, "v103": 386, "158": 386, "q32a": 386, "58214": 386, "v104": 386, "159": 386, "refus": 386, "unemploi": 386, "q32b": 386, "58066": 386, "v105": 386, "160": 386, "competit": 386, "harm": 386, "q32c": 386, "57516": 386, "v106": 386, "161": 386, "effort": 386, "q32d": 386, "58103": 386, "v107": 386, "162": 386, "privat": 386, "govern": 386, "ownership": 386, "q32e": 386, "54991": 386, "f108": 386, "163": 386, "aim": 386, "q33": 386, "q33a": 386, "59248": 386, "v108": 386, "164": 386, "econom": 386, "growth": 386, "defens": 386, "sai": 386, "citi": 386, "countrysid": 386, "beauti": 386, "57503": 386, "v109": 386, "165": 386, "2nd": 386, "56342": 386, "f110": 386, "166": 386, "q34": 386, "q35": 386, "59321": 386, "v110": 386, "167": 386, "maintain": 386, "decis": 386, "fight": 386, "rise": 386, "price": 386, "protect": 386, "freedom": 386, "speech": 386, "v111": 386, "168": 386, "57178": 386, "v111_4": 386, "169": 386, "materialist": 386, "construct": 386, "postmaterialist": 386, "57053": 386, "v112": 386, "170": 386, "willing": 386, "q36": 386, "52718": 386, "f112_se": 386, "171": 386, "strida": 386, "f\u00f6r": 386, "f\u00f6rsvara": 386, "defend": 386, "1194": 386, "v113": 386, "172": 386, "bad": 386, "q37a": 386, "56028": 386, "v114": 386, "173": 386, "author": 386, "q37b": 386, "55280": 386, "v115": 386, "174": 386, "confid": 386, "q38a": 386, "57455": 386, "v116": 386, "175": 386, "arm": 386, "q38b": 386, "56006": 386, "v117": 386, "176": 386, "q38c": 386, "58159": 386, "v118": 386, "177": 386, "press": 386, "q38d": 386, "58072": 386, "v119": 386, "178": 386, "q38e": 386, "54191": 386, "v120": 386, "179": 386, "polic": 386, "q38f": 386, "58495": 386, "v121": 386, "180": 386, "parliament": 386, "q38g": 386, "57366": 386, "v122": 386, "181": 386, "civil": 386, "q38h": 386, "57228": 386, "v123": 386, "182": 386, "social": 386, "secur": 386, "q38i": 386, "57294": 386, "v124": 386, "183": 386, "q38j": 386, "55705": 386, "v125": 386, "184": 386, "q38k": 386, "54168": 386, "v126": 386, "185": 386, "q38l": 386, "58585": 386, "v127": 386, "186": 386, "justic": 386, "q38m": 386, "57092": 386, "v128": 386, "187": 386, "compani": 386, "q38n": 386, "54645": 386, "v129": 386, "188": 386, "environment": 386, "q38o": 386, "55582": 386, "v130": 386, "189": 386, "q38p": 386, "56884": 386, "v131": 386, "190": 386, "q38q": 386, "57506": 386, "v132": 386, "media": 386, "q38r": 386, "54341": 386, "v133": 386, "192": 386, "democraci": 386, "tax": 386, "rich": 386, "subsid": 386, "q39a": 386, "NOT": 386, "essenti": 386, "characterist": 386, "52980": 386, "v133_11c": 386, "193": 386, "respon": 386, "3283": 386, "v134": 386, "194": 386, "q39b": 386, "51892": 386, "v134_11c": 386, "195": 386, "3227": 386, "v135": 386, "196": 386, "elect": 386, "q39c": 386, "54015": 386, "v135_11c": 386, "197": 386, "3368": 386, "v136": 386, "198": 386, "unemploy": 386, "q39d": 386, "53977": 386, "v136_11c": 386, "199": 386, "3387": 386, "v137": 386, "200": 386, "armi": 386, "incompet": 386, "q39e": 386, "51896": 386, "v137_11c": 386, "201": 386, "3271": 386, "v138": 386, "202": 386, "oppress": 386, "q39f": 386, "52504": 386, "v138_11c": 386, "3323": 386, "v139": 386, "204": 386, "q39g": 386, "53050": 386, "v139_11c": 386, "205": 386, "3328": 386, "v140": 386, "206": 386, "obei": 386, "ruler": 386, "q39h": 386, "53068": 386, "v140_11c": 386, "207": 386, "3326": 386, "v141": 386, "q39i": 386, "54426": 386, "v141_11c": 386, "209": 386, "3440": 386, "v142": 386, "210": 386, "q40": 386, "58125": 386, "v143": 386, "211": 386, "own": 386, "q41": 386, "democrat": 386, "57214": 386, "v144": 386, "212": 386, "satisfact": 386, "q42": 386, "57530": 386, "v145": 386, "213": 386, "q43a": 386, "fairli": 386, "55374": 386, "v146": 386, "214": 386, "expert": 386, "q43b": 386, "54313": 386, "v147": 386, "215": 386, "rule": 386, "q43c": 386, "55409": 386, "v148": 386, "216": 386, "q43d": 386, "56245": 386, "v149": 386, "217": 386, "justifi": 386, "claim": 386, "benefit": 386, "q44a": 386, "58240": 386, "v150": 386, "218": 386, "cheat": 386, "q44b": 386, "58511": 386, "v151": 386, "219": 386, "q44c": 386, "58442": 386, "v152": 386, "220": 386, "bribe": 386, "q44d": 386, "58723": 386, "v153": 386, "221": 386, "q44e": 386, "56952": 386, "v154": 386, "222": 386, "abort": 386, "q44f": 386, "57277": 386, "v155": 386, "223": 386, "divorc": 386, "q44g": 386, "57903": 386, "v156": 386, "224": 386, "euthanasia": 386, "q44h": 386, "56185": 386, "v157": 386, "225": 386, "suicid": 386, "q44i": 386, "56705": 386, "v158": 386, "226": 386, "casual": 386, "sex": 386, "q44j": 386, "57033": 386, "v159": 386, "227": 386, "fare": 386, "public": 386, "transport": 386, "q44k": 386, "58559": 386, "v160": 386, "228": 386, "prostitut": 386, "q44l": 386, "57709": 386, "v161": 386, "229": 386, "artifici": 386, "insemin": 386, "vitro": 386, "fertil": 386, "q44m": 386, "56800": 386, "v162": 386, "230": 386, "violenc": 386, "q44n": 386, "58009": 386, "v163": 386, "231": 386, "penalti": 386, "q44o": 386, "57123": 386, "v164": 386, "232": 386, "town": 386, "q45a": 386, "58942": 386, "v165": 386, "counti": 386, "region": 386, "district": 386, "q45b": 386, "58786": 386, "v166": 386, "234": 386, "q45c": 386, "58857": 386, "v167": 386, "235": 386, "contin": 386, "q45d": 386, "58110": 386, "v168": 386, "236": 386, "world": 386, "q45e": 386, "57393": 386, "v169": 386, "237": 386, "q46": 386, "59318": 386, "v170": 386, "238": 386, "q47": 386, "55885": 386, "v171": 386, "239": 386, "vote": 386, "q48a": 386, "57525": 386, "v172": 386, "240": 386, "q48b": 386, "v173": 386, "241": 386, "q48c": 386, "34242": 386, "v174_lr": 386, "242": 386, "appeal": 386, "q49": 386, "40448": 386, "v174_c": 386, "243": 386, "socialist": 386, "movement": 386, "republican": 386, "legal": 386, "front": 386, "uniti": 386, "challeng": 386, "814": 386, "815": 386, "albanian": 386, "816": 386, "liber": 386, "817": 386, "agrarian": 386, "environmentalist": 386, "818": 386, "819": 386, "communist": 386, "820": 386, "allianc": 386, "821": 386, "libra": 386, "822": 386, "green": 386, "823": 386, "824": 386, "moder": 386, "825": 386, "disabl": 386, "866": 386, "No": 386, "877": 386, "888": 386, "899": 386, "musavat": 386, "popular": 386, "3107": 386, "3108": 386, "3109": 386, "3110": 386, "civic": 386, "solidar": 386, "3111": 386, "motherland": 386, "3112": 386, "hope": 386, "3113": 386, "prosper": 386, "3114": 386, "3115": 386, "3116": 386, "3117": 386, "3118": 386, "3119": 386, "modern": 386, "3131": 386, "sp\u00f6": 386, "kurz": 386, "austrian": 386, "\u00f6vp": 386, "fp\u00f6": 386, "altern": 386, "neo": 386, "peter": 386, "pilz": 386, "4066": 386, "revolutionari": 386, "feder": 386, "exit": 386, "heritag": 386, "5107": 386, "congress": 386, "former": 386, "5108": 386, "5109": 386, "tsarukyan": 386, "5110": 386, "5111": 386, "apricot": 386, "5112": 386, "renaiss": 386, "5126": 386, "5166": 386, "bosnian": 386, "1990": 386, "7009": 386, "7010": 386, "7011": 386, "7012": 386, "7013": 386, "futur": 386, "bih": 386, "7014": 386, "7015": 386, "7016": 386, "7017": 386, "7018": 386, "7019": 386, "bloc": 386, "7031": 386, "7066": 386, "bsp": 386, "mrf": 386, "attack": 386, "10007": 386, "vmro": 386, "10008": 386, "volya": 386, "10009": 386, "reviv": 386, "10010": 386, "10011": 386, "dost": 386, "10012": 386, "10013": 386, "10014": 386, "10015": 386, "salvat": 386, "10026": 386, "10066": 386, "belarusian": 386, "zyalyoniya": 386, "concord": 386, "narodnai": 386, "zgodi": 386, "conserv": 386, "bnf": 386, "labor": 386, "patriot": 386, "hramada": 386, "11215": 386, "11216": 386, "polici": 386, "presid": 386, "xa0lukashenko": 386, "11226": 386, "11266": 386, "bandi\u0107": 386, "milan": 386, "365": 386, "peasant": 386, "pension": 386, "slavonia": 386, "baranja": 386, "istrian": 386, "smart": 386, "19111": 386, "gorski": 386, "kotar": 386, "19112": 386, "19113": 386, "bridg": 386, "19114": 386, "19115": 386, "shield": 386, "19126": 386, "19166": 386, "ano": 386, "\u010dssd": 386, "ks\u010dm": 386, "bohemia": 386, "moravia": 386, "od": 386, "kdu": 386, "\u010dsl": 386, "top": 386, "09": 386, "pir\u00e1ti": 386, "pirat": 386, "spd": 386, "tomio": 386, "okamura": 386, "sz": 386, "stan": 386, "mayor": 386, "\u00fasvit": 386, "nk": 386, "dawn": 386, "coalit": 386, "svobodn\u00ed": 386, "20313": 386, "spo": 386, "20314": 386, "realist\u00e9": 386, "realist": 386, "20315": 386, "dsss": 386, "20316": 386, "20366": 386, "danish": 386, "venstr": 386, "20808": 386, "20809": 386, "red": 386, "20810": 386, "20811": 386, "blank": 386, "20866": 386, "estonian": 386, "centr": 386, "pro": 386, "patria": 386, "publica": 386, "conserav": 386, "23331": 386, "23366": 386, "leagu": 386, "finn": 386, "24609": 386, "24666": 386, "wing": 386, "extremist": 386, "anticapitalist": 386, "struggl": 386, "unsubmiss": 386, "radic": 386, "leftist": 386, "republicain": 386, "onward": 386, "25009": 386, "25010": 386, "25011": 386, "act": 386, "25012": 386, "25013": 386, "aris": 386, "25014": 386, "25015": 386, "25026": 386, "25066": 386, "georgian": 386, "rightist": 386, "industri": 386, "Will": 386, "26810": 386, "dream": 386, "26811": 386, "forum": 386, "26812": 386, "26813": 386, "girchi": 386, "26814": 386, "26815": 386, "26826": 386, "26866": 386, "german": 386, "27666": 386, "hungarian": 386, "mszp": 386, "fidesz": 386, "kdnp": 386, "jobbik": 386, "Be": 386, "lmp": 386, "era": 386, "egy\u00fctt": 386, "dialogu": 386, "pm": 386, "momentum": 386, "liber\u00e1lisok": 386, "34811": 386, "tail": 386, "dog": 386, "mkkp": 386, "34812": 386, "munk\u00e1sp\u00e1rt": 386, "34826": 386, "34866": 386, "xa0left": 386, "bright": 386, "xa0iceland": 386, "35226": 386, "35266": 386, "power": 386, "lorenzin": 386, "svp": 386, "patt": 386, "38009": 386, "38010": 386, "udc": 386, "38011": 386, "38012": 386, "38013": 386, "38014": 386, "brother": 386, "giorgia": 386, "meloni": 386, "38015": 386, "casapound": 386, "38016": 386, "italian": 386, "38031": 386, "38066": 386, "harmoni": 386, "kpv": 386, "farmer": 386, "latvian": 386, "42866": 386, "labour": 386, "lithuanian": 386, "elector": 386, "pole": 386, "alianc": 386, "44009": 386, "44010": 386, "homeland": 386, "44011": 386, "44012": 386, "44066": 386, "socialdemocrat": 386, "49908": 386, "demo": 386, "49909": 386, "49910": 386, "49911": 386, "49912": 386, "49913": 386, "bosniak": 386, "49914": 386, "49915": 386, "49917": 386, "forca": 386, "49918": 386, "49919": 386, "49926": 386, "49966": 386, "greenleft": 386, "50plu": 386, "52812": 386, "denk": 386, "52813": 386, "52814": 386, "52866": 386, "coastal": 386, "57810": 386, "57811": 386, "57812": 386, "57813": 386, "57814": 386, "57866": 386, "spontani": 386, "platform": 386, "kukiz": 386, "liberti": 386, "korwin": 386, "61666": 386, "portugues": 386, "reorgan": 386, "proletariat": 386, "monarch": 386, "62011": 386, "enough": 386, "62012": 386, "62013": 386, "62014": 386, "62015": 386, "renew": 386, "pnr": 386, "62016": 386, "62017": 386, "62018": 386, "62019": 386, "retire": 386, "pensionist": 386, "62020": 386, "62021": 386, "citizenship": 386, "62022": 386, "ptp": 386, "62023": 386, "earth": 386, "62024": 386, "62066": 386, "64226": 386, "64266": 386, "rodina": 386, "ldpr": 386, "64308": 386, "parna": 386, "64309": 386, "64310": 386, "civilian": 386, "64311": 386, "yabloko": 386, "64312": 386, "cprf": 386, "64313": 386, "64314": 386, "64326": 386, "64366": 386, "sn": 386, "psg": 386, "dss": 386, "sr": 386, "sd": 386, "ldp": 386, "68811": 386, "dveri": 386, "68812": 386, "djb": 386, "68813": 386, "pup": 386, "68814": 386, "68815": 386, "vojvodina": 386, "svm": 386, "68816": 386, "lsv": 386, "68817": 386, "pdd": 386, "68818": 386, "roma": 386, "rp": 386, "68819": 386, "sda": 386, "68820": 386, "sdp": 386, "68821": 386, "croat": 386, "dshv": 386, "68831": 386, "68866": 386, "kotleba": 386, "h\u00edd": 386, "ordinari": 386, "network": 386, "slovak": 386, "bori": 386, "koll\u00e1r": 386, "70313": 386, "70366": 386, "smc": 386, "desu": 386, "zl": 386, "nsi": 386, "zaab": 386, "alenka": 386, "bratusek": 386, "sl": 386, "sloven": 386, "70511": 386, "70566": 386, "spanish": 386, "catalonia": 386, "tide": 386, "compromis": 386, "catalan": 386, "basqu": 386, "nationalist": 386, "navarres": 386, "72415": 386, "canari": 386, "72417": 386, "island": 386, "72418": 386, "galician": 386, "72419": 386, "aragones": 386, "72420": 386, "72421": 386, "asturia": 386, "72426": 386, "72466": 386, "75231": 386, "75266": 386, "swiss": 386, "french": 386, "speak": 386, "75610": 386, "75611": 386, "75612": 386, "75613": 386, "ticino": 386, "75614": 386, "75626": 386, "75666": 386, "sluha": 386, "narodu": 386, "opozytsiina": 386, "platforma": 386, "za": 386, "zhyttia": 386, "batkivshchyna": 386, "yevropeiska": 386, "solidarnist": 386, "holo": 386, "oleh": 386, "liashko": 386, "syla": 386, "chest": 386, "partiia": 386, "opozytsiinyi": 386, "blok": 386, "hroisman": 386, "strategi": 386, "sharii": 386, "svoboda": 386, "80466": 386, "imro": 386, "dpmnu": 386, "intern": 386, "macedonian": 386, "besa": 386, "dpa": 386, "dpsm": 386, "serb": 386, "80707": 386, "dptm": 386, "turc": 386, "80708": 386, "dui": 386, "unioun": 386, "80709": 386, "dr": 386, "adp": 386, "uniteti": 386, "ndp": 386, "80710": 386, "80711": 386, "nsdp": 386, "80712": 386, "pdt": 386, "turk": 386, "80713": 386, "pef": 386, "80714": 386, "popgm": 386, "80715": 386, "ram": 386, "sdam": 386, "80717": 386, "spm": 386, "80718": 386, "80719": 386, "levica": 386, "80731": 386, "80766": 386, "scottish": 386, "plaid": 386, "cymru": 386, "uk": 386, "ukip": 386, "british": 386, "bnp": 386, "82666": 386, "47229": 386, "508": 386, "v175_lr": 386, "244": 386, "q49a": 386, "23004": 386, "v175_c": 386, "245": 386, "498": 386, "v176": 386, "q50a": 386, "52270": 386, "v176_dk": 386, "247": 386, "1618": 386, "v177": 386, "248": 386, "opposit": 386, "candid": 386, "run": 386, "q50b": 386, "47740": 386, "v177_dk": 386, "249": 386, "1469": 386, "v178": 386, "tv": 386, "favor": 386, "q50c": 386, "51081": 386, "v178_dk": 386, "251": 386, "1460": 386, "v179": 386, "252": 386, "voter": 386, "q50d": 386, "49897": 386, "v179_dk": 386, "253": 386, "1473": 386, "v180": 386, "254": 386, "journalist": 386, "coverag": 386, "q50e": 386, "51685": 386, "v180_dk": 386, "255": 386, "1571": 386, "v181": 386, "256": 386, "offici": 386, "q50f": 386, "50664": 386, "v181_dk": 386, "257": 386, "1551": 386, "v182": 386, "258": 386, "bui": 386, "q50g": 386, "48126": 386, "v182_dk": 386, "259": 386, "1459": 386, "v183": 386, "260": 386, "threaten": 386, "poll": 386, "q50h": 386, "49341": 386, "v183_dk": 386, "261": 386, "1534": 386, "v184": 386, "262": 386, "impact": 386, "q51": 386, "56958": 386, "v185": 386, "263": 386, "q52a": 386, "57389": 386, "v186": 386, "264": 386, "crime": 386, "q52b": 386, "wors": 386, "56679": 386, "v187": 386, "265": 386, "strain": 386, "welfar": 386, "q52c": 386, "56578": 386, "v188": 386, "266": 386, "q52d": 386, "distinct": 386, "tradit": 386, "55706": 386, "v189": 386, "267": 386, "born": 386, "q53a": 386, "58850": 386, "v190": 386, "institut": 386, "q53b": 386, "v191": 386, "269": 386, "ancestri": 386, "q53c": 386, "58728": 386, "v192": 386, "270": 386, "languag": 386, "q53d": 386, "59034": 386, "v193": 386, "271": 386, "q53e": 386, "58811": 386, "v194": 386, "272": 386, "q54a": 386, "57741": 386, "v195": 386, "273": 386, "q54b": 386, "57562": 386, "v196": 386, "274": 386, "q54c": 386, "57302": 386, "v197": 386, "275": 386, "q54d": 386, "57614": 386, "v198": 386, "enlarg": 386, "q55": 386, "gone": 386, "54139": 386, "v199": 386, "277": 386, "q56a": 386, "57664": 386, "f199_it": 386, "278": 386, "v203": 386, "q56": 386, "v200": 386, "279": 386, "difficult": 386, "q56b": 386, "58012": 386, "v201": 386, "280": 386, "q56c": 386, "58091": 386, "v202": 386, "281": 386, "unless": 386, "q56d": 386, "58042": 386, "282": 386, "threat": 386, "exagger": 386, "q56e": 386, "56348": 386, "v204": 386, "283": 386, "q57": 386, "loss": 386, "volunt": 386, "52224": 386, "v205": 386, "284": 386, "area": 386, "under": 386, "video": 386, "surveil": 386, "q58a": 386, "definit": 386, "57923": 386, "v206": 386, "285": 386, "monitor": 386, "exchang": 386, "internet": 386, "q58b": 386, "57022": 386, "v207": 386, "286": 386, "anyon": 386, "knowledg": 386, "q58c": 386, "57470": 386, "v208": 386, "287": 386, "televis": 386, "q59a": 386, "59128": 386, "v209": 386, "288": 386, "radio": 386, "q59b": 386, "58924": 386, "v210": 386, "289": 386, "daili": 386, "q59c": 386, "58929": 386, "v211": 386, "290": 386, "q59d": 386, "58647": 386, "v212": 386, "291": 386, "concern": 386, "neighbourhood": 386, "q60a": 386, "extent": 386, "58883": 386, "v213": 386, "292": 386, "q60b": 386, "58781": 386, "v214": 386, "293": 386, "fellow": 386, "countrymen": 386, "q60c": 386, "58704": 386, "v215": 386, "294": 386, "q60d": 386, "58212": 386, "v216": 386, "295": 386, "humankind": 386, "q60e": 386, "58144": 386, "v217": 386, "296": 386, "elderli": 386, "q61a": 386, "v218": 386, "297": 386, "q61b": 386, "58797": 386, "v219": 386, "298": 386, "q61c": 386, "58379": 386, "v220": 386, "sick": 386, "q61d": 386, "58912": 386, "v221": 386, "elimin": 386, "inequ": 386, "q62a": 386, "57320": 386, "v221_dk": 386, "301": 386, "384": 386, "v222": 386, "302": 386, "q62b": 386, "v222_dk": 386, "400": 386, "v223": 386, "304": 386, "recogn": 386, "merit": 386, "q62c": 386, "v223_dk": 386, "305": 386, "381": 386, "v224": 386, "306": 386, "terror": 386, "q62d": 386, "58215": 386, "v224_dk": 386, "307": 386, "404": 386, "v225": 386, "308": 386, "q63": 386, "male": 386, "femal": 386, "59412": 386, "v226": 386, "309": 386, "birth": 386, "q64": 386, "1937": 386, "59113": 386, "ag": 386, "310": 386, "older": 386, "age_r": 386, "311": 386, "recod": 386, "age_r2": 386, "312": 386, "age_r3": 386, "313": 386, "v227": 386, "314": 386, "q65": 386, "59367": 386, "v228b": 386, "315": 386, "q66": 386, "005": 386, "m49": 386, "south": 386, "america": 386, "011": 386, "western": 386, "africa": 386, "013": 386, "central": 386, "014": 386, "015": 386, "northern": 386, "017": 386, "018": 386, "southern": 386, "029": 386, "caribbean": 386, "030": 386, "asia": 386, "034": 386, "035": 386, "039": 386, "053": 386, "australia": 386, "zealand": 386, "054": 386, "melanesia": 386, "061": 386, "polynesia": 386, "andorra": 386, "ae": 386, "arab": 386, "emir": 386, "afghanistan": 386, "antigua": 386, "barbuda": 386, "ai": 386, "anguilla": 386, "ao": 386, "angola": 386, "aq": 386, "antarctica": 386, "argentina": 386, "AS": 386, "american": 386, "samoa": 386, "au": 386, "aw": 386, "aruba": 386, "\u00e5land": 386, "bb": 386, "barbado": 386, "bd": 386, "bangladesh": 386, "BE": 386, "belgium": 386, "bf": 386, "burkina": 386, "faso": 386, "bh": 386, "bahrain": 386, "bi": 386, "burundi": 386, "bj": 386, "benin": 386, "bl": 386, "barth\u00e9lemi": 386, "bm": 386, "bermuda": 386, "bn": 386, "brunei": 386, "darussalam": 386, "bo": 386, "bolivia": 386, "plurin": 386, "bq": 386, "bonair": 386, "sint": 386, "eustatiu": 386, "saba": 386, "br": 386, "brazil": 386, "bahama": 386, "bt": 386, "bhutan": 386, "bv": 386, "bouvet": 386, "bw": 386, "botswana": 386, "bz": 386, "beliz": 386, "ca": 386, "canada": 386, "cc": 386, "coco": 386, "keel": 386, "cd": 386, "congo": 386, "cf": 386, "african": 386, "cg": 386, "ci": 386, "c\u00f4te": 386, "ivoir": 386, "ck": 386, "cook": 386, "cl": 386, "chile": 386, "cm": 386, "cameroon": 386, "cn": 386, "china": 386, "co": 386, "colombia": 386, "cr": 386, "costa": 386, "rica": 386, "cshh": 386, "czechoslovakia": 386, "csxx": 386, "cu": 386, "cuba": 386, "cv": 386, "cabo": 386, "verd": 386, "cw": 386, "cura\u00e7ao": 386, "cx": 386, "christma": 386, "cy": 386, "cypru": 386, "tcc": 386, "ddde": 386, "dj": 386, "djibouti": 386, "dm": 386, "dominica": 386, "dominican": 386, "dz": 386, "algeria": 386, "ec": 386, "ecuador": 386, "eg": 386, "egypt": 386, "eh": 386, "sahara": 386, "er": 386, "eritrea": 386, "et": 386, "ethiopia": 386, "fj": 386, "fiji": 386, "fk": 386, "falkland": 386, "malvina": 386, "fm": 386, "micronesia": 386, "fo": 386, "faro": 386, "ga": 386, "gabon": 386, "kingdom": 386, "ireland": 386, "gd": 386, "grenada": 386, "gf": 386, "guiana": 386, "gg": 386, "guernsei": 386, "gh": 386, "ghana": 386, "gi": 386, "gibraltar": 386, "gl": 386, "greenland": 386, "gm": 386, "gambia": 386, "gn": 386, "guinea": 386, "gp": 386, "guadeloup": 386, "gq": 386, "equatori": 386, "gr": 386, "sandwich": 386, "gt": 386, "guatemala": 386, "gu": 386, "guam": 386, "gw": 386, "bissau": 386, "gy": 386, "guyana": 386, "hk": 386, "hong": 386, "kong": 386, "hm": 386, "heard": 386, "mcdonald": 386, "hn": 386, "hondura": 386, "ht": 386, "haiti": 386, "indonesia": 386, "ie": 386, "il": 386, "israel": 386, "im": 386, "isl": 386, "india": 386, "io": 386, "indian": 386, "ocean": 386, "territori": 386, "iq": 386, "iraq": 386, "ir": 386, "iran": 386, "je": 386, "jersei": 386, "jm": 386, "jamaica": 386, "jo": 386, "jordan": 386, "jp": 386, "japan": 386, "ke": 386, "kenya": 386, "kg": 386, "kyrgyzstan": 386, "kh": 386, "cambodia": 386, "ki": 386, "kiribati": 386, "km": 386, "comoro": 386, "kn": 386, "kitt": 386, "nevi": 386, "kp": 386, "korea": 386, "kr": 386, "kw": 386, "kuwait": 386, "ky": 386, "cayman": 386, "kz": 386, "kazakhstan": 386, "la": 386, "lao": 386, "lb": 386, "lebanon": 386, "lc": 386, "lucia": 386, "liechtenstein": 386, "lk": 386, "sri": 386, "lanka": 386, "lr": 386, "liberia": 386, "lesotho": 386, "lu": 386, "luxembourg": 386, "ly": 386, "libya": 386, "ma": 386, "morocco": 386, "mc": 386, "monaco": 386, "md": 386, "moldova": 386, "mf": 386, "martin": 386, "mg": 386, "madagascar": 386, "mh": 386, "marshal": 386, "ml": 386, "mali": 386, "myanmar": 386, "mn": 386, "mongolia": 386, "mo": 386, "macao": 386, "mp": 386, "mariana": 386, "martiniqu": 386, "mr": 386, "mauritania": 386, "montserrat": 386, "mt": 386, "malta": 386, "mu": 386, "mauritiu": 386, "mv": 386, "maldiv": 386, "mw": 386, "malawi": 386, "mx": 386, "mexico": 386, "malaysia": 386, "mz": 386, "mozambiqu": 386, "namibia": 386, "nc": 386, "caledonia": 386, "ne": 386, "niger": 386, "nf": 386, "norfolk": 386, "ng": 386, "nigeria": 386, "ni": 386, "nicaragua": 386, "nepal": 386, "nr": 386, "nauru": 386, "nu": 386, "niue": 386, "nz": 386, "om": 386, "oman": 386, "pa": 386, "panama": 386, "pe": 386, "peru": 386, "pf": 386, "pg": 386, "papua": 386, "ph": 386, "philippin": 386, "pk": 386, "pakistan": 386, "pierr": 386, "miquelon": 386, "pn": 386, "pitcairn": 386, "pr": 386, "puerto": 386, "rico": 386, "palestin": 386, "pw": 386, "palau": 386, "py": 386, "paraguai": 386, "qa": 386, "qatar": 386, "r\u00e9union": 386, "rw": 386, "rwanda": 386, "sa": 386, "saudi": 386, "arabia": 386, "sb": 386, "solomon": 386, "sc": 386, "seychel": 386, "sudan": 386, "sg": 386, "singapor": 386, "sh": 386, "helena": 386, "ascens": 386, "tristan": 386, "da": 386, "cunha": 386, "sj": 386, "svalbard": 386, "jan": 386, "mayen": 386, "sierra": 386, "leon": 386, "sm": 386, "san": 386, "marino": 386, "seneg": 386, "somalia": 386, "surinam": 386, "ss": 386, "st": 386, "sao": 386, "tome": 386, "suhh": 386, "sv": 386, "el": 386, "salvador": 386, "sx": 386, "maarten": 386, "dutch": 386, "syrian": 386, "swaziland": 386, "tc": 386, "caico": 386, "td": 386, "chad": 386, "tf": 386, "tg": 386, "togo": 386, "thailand": 386, "tj": 386, "tajikistan": 386, "tk": 386, "tokelau": 386, "tl": 386, "timor": 386, "lest": 386, "tm": 386, "turkmenistan": 386, "tn": 386, "tunisia": 386, "TO": 386, "tonga": 386, "tr": 386, "turkei": 386, "tt": 386, "trinidad": 386, "tobago": 386, "tuvalu": 386, "tw": 386, "taiwan": 386, "provinc": 386, "tz": 386, "tanzania": 386, "ug": 386, "uganda": 386, "um": 386, "outli": 386, "uruguai": 386, "uz": 386, "uzbekistan": 386, "va": 386, "vc": 386, "vincent": 386, "grenadin": 386, "ve": 386, "venezuela": 386, "bolivarian": 386, "vg": 386, "virgin": 386, "vi": 386, "vn": 386, "viet": 386, "nam": 386, "vu": 386, "vanuatu": 386, "wf": 386, "walli": 386, "futuna": 386, "xk": 386, "kosovo": 386, "xxx": 386, "yemen": 386, "yt": 386, "mayott": 386, "yuc": 386, "yugoslavia": 386, "zm": 386, "zambia": 386, "zw": 386, "zimbabw": 386, "4221": 386, "v228b_r": 386, "316": 386, "320": 386, "324": 386, "328": 386, "332": 386, "334": 386, "336": 386, "340": 386, "344": 386, "356": 386, "360": 386, "364": 386, "368": 386, "372": 386, "376": 386, "388": 386, "392": 386, "398": 386, "408": 386, "410": 386, "414": 386, "417": 386, "418": 386, "422": 386, "426": 386, "430": 386, "434": 386, "438": 386, "442": 386, "446": 386, "450": 386, "454": 386, "458": 386, "462": 386, "466": 386, "470": 386, "474": 386, "478": 386, "480": 386, "484": 386, "492": 386, "496": 386, "500": 386, "504": 386, "512": 386, "516": 386, "520": 386, "524": 386, "531": 386, "533": 386, "534": 386, "535": 386, "540": 386, "548": 386, "554": 386, "558": 386, "562": 386, "566": 386, "570": 386, "574": 386, "580": 386, "581": 386, "583": 386, "584": 386, "585": 386, "586": 386, "591": 386, "598": 386, "600": 386, "604": 386, "608": 386, "612": 386, "624": 386, "626": 386, "630": 386, "634": 386, "638": 386, "646": 386, "652": 386, "654": 386, "659": 386, "660": 386, "662": 386, "663": 386, "666": 386, "670": 386, "674": 386, "678": 386, "682": 386, "686": 386, "690": 386, "694": 386, "702": 386, "704": 386, "706": 386, "710": 386, "716": 386, "728": 386, "729": 386, "732": 386, "740": 386, "744": 386, "748": 386, "760": 386, "762": 386, "764": 386, "768": 386, "772": 386, "776": 386, "780": 386, "784": 386, "788": 386, "792": 386, "795": 386, "796": 386, "798": 386, "800": 386, "831": 386, "832": 386, "833": 386, "834": 386, "840": 386, "850": 386, "854": 386, "858": 386, "860": 386, "862": 386, "876": 386, "882": 386, "887": 386, "890": 386, "891": 386, "894": 386, "915": 386, "1111": 386, "nan": 386, "4220": 386, "v229": 386, "317": 386, "came": 386, "live": 386, "q67": 386, "1941": 386, "4116": 386, "v230": 386, "318": 386, "father": 386, "q68": 386, "59042": 386, "v231b": 386, "319": 386, "q69": 386, "6117": 386, "v231b_r": 386, "v232": 386, "321": 386, "q70": 386, "59218": 386, "v233b": 386, "322": 386, "q71": 386, "6121": 386, "v233b_r": 386, "323": 386, "v234": 386, "marit": 386, "statu": 386, "q72": 386, "marri": 386, "partnership": 386, "widow": 386, "59020": 386, "v235": 386, "325": 386, "partner": 386, "q73": 386, "43987": 386, "v236": 386, "326": 386, "q74": 386, "27301": 386, "v237": 386, "327": 386, "steadi": 386, "relationship": 386, "q75": 386, "19888": 386, "v238": 386, "q76": 386, "59001": 386, "v239_r": 386, "329": 386, "hh": 386, "q77": 386, "58952": 386, "v239a": 386, "330": 386, "q77a": 386, "58094": 386, "v239b": 386, "331": 386, "q77b": 386, "58114": 386, "v240": 386, "q78": 386, "alon": 386, "58691": 386, "v241": 386, "333": 386, "youngest": 386, "q79": 386, "45983": 386, "v242": 386, "q80": 386, "younger": 386, "formal": 386, "55834": 386, "v242_r": 386, "v243_edulvlb": 386, "ess": 386, "edulvlb": 386, "q81": 386, "Not": 386, "isc": 386, "short": 386, "vocat": 386, "pre": 386, "32x": 386, "tertiari": 386, "412": 386, "413": 386, "421": 386, "423": 386, "510": 386, "qualif": 386, "bachelor": 386, "610": 386, "master": 386, "720": 386, "doctor": 386, "6666": 386, "59049": 386, "v243_edulvlb_2": 386, "337": 386, "primari": 386, "secondari": 386, "upper": 386, "cycl": 386, "v243_edulvlb_1": 386, "338": 386, "v243_isced_3": 386, "339": 386, "343": 386, "353": 386, "354": 386, "444": 386, "453": 386, "550": 386, "640": 386, "academ": 386, "650": 386, "750": 386, "v243_isced_2": 386, "v243_isced_2b": 386, "341": 386, "59050": 386, "v243_isced_1": 386, "342": 386, "v243_eisc": 386, "ii": 386, "train": 386, "iiib": 386, "iiia": 386, "iv": 386, "advanc": 386, "v243_isced97": 386, "isced97": 386, "stage": 386, "v243_8cat": 386, "345": 386, "inadequ": 386, "elementari": 386, "compulsori": 386, "school": 386, "technic": 386, "preparatori": 386, "v243_r": 386, "346": 386, "medium": 386, "v243_c": 386, "347": 386, "certif": 386, "matur": 386, "diploma": 386, "diplom": 386, "art": 386, "scienc": 386, "grade": 386, "lyceum": 386, "colleg": 386, "aspirantura": 386, "phd": 386, "philosophi": 386, "3188": 386, "3199": 386, "secundari": 386, "polytechn": 386, "ah": 386, "apprenticeship": 386, "examin": 386, "commerci": 386, "matricul": 386, "entranc": 386, "nurs": 386, "pedago": 386, "medic": 386, "graduat": 386, "cours": 386, "mba": 386, "went": 386, "specialist": 386, "5113": 386, "habilit": 386, "unfinish": 386, "relat": 386, "undergradu": 386, "baccalaureu": 386, "academi": 386, "stud": 386, "profess": 386, "postgradu": 386, "mathemat": 386, "semi": 386, "parallel": 386, "1st": 386, "sz\u0161": 386, "zz\u0161": 386, "bougeoi": 386, "exam": 386, "teach": 386, "retrain": 386, "gcse": 386, "grammar": 386, "di": 386, "5th": 386, "6th": 386, "conservatori": 386, "discharg": 386, "mgr": 386, "ing": 386, "mudr": 386, "mddr": 386, "mvdr": 386, "csc": 386, "municip": 386, "8th": 386, "9th": 386, "10th": 386, "gymnasium": 386, "hf": 386, "semiskil": 386, "proffesion": 386, "kandidat": 386, "licentiat": 386, "20812": 386, "20813": 386, "23308": 386, "tehnic": 386, "aft": 386, "23309": 386, "23310": 386, "23311": 386, "23312": 386, "23313": 386, "23314": 386, "incl": 386, "1992": 386, "speci": 386, "23315": 386, "comprehens": 386, "24611": 386, "24612": 386, "24613": 386, "licenti": 386, "24614": 386, "24615": 386, "certificat": 386, "\u00e9tude": 386, "primair": 386, "brevet": 386, "\u00e9l\u00e9mentair": 386, "du": 386, "premier": 386, "baccalaur\u00e9at": 386, "abil": 386, "aptitud": 386, "professionnel": 386, "cap": 386, "etud": 386, "baccalaureat": 386, "technolog": 386, "admiss": 386, "moniteur": 386, "\u00e9ducateur": 386, "equi": 386, "technician": 386, "paramed": 386, "sector": 386, "assist": 386, "25017": 386, "25018": 386, "25019": 386, "engin": 386, "25020": 386, "25021": 386, "intermedi": 386, "25022": 386, "teacher": 386, "25023": 386, "architect": 386, "veterinari": 386, "notari": 386, "25024": 386, "dipl\u00f4ma": 386, "grand": 386, "\u00e9cole": 386, "25025": 386, "medecin": 386, "odontologi": 386, "pharmaci": 386, "2010": 386, "certifi": 386, "2008": 386, "interim": 386, "attent": 386, "mon": 386, "vet": 386, "bsc": 386, "msc": 386, "34813": 386, "34814": 386, "test": 386, "oblig": 386, "classic": 386, "scientif": 386, "linguist": 386, "psyco": 386, "pedagog": 386, "music": 386, "includi": 386, "physic": 386, "fine": 386, "38017": 386, "38018": 386, "42812": 386, "42813": 386, "42814": 386, "42815": 386, "soviet": 386, "44000": 386, "44013": 386, "44014": 386, "44015": 386, "bologn": 386, "durat": 386, "magist": 386, "medicin": 386, "vmbo": 386, "lbo": 386, "compar": 386, "mavo": 386, "senior": 386, "havo": 386, "vwo": 386, "kmbo": 386, "meao": 386, "plu": 386, "propaedeut": 386, "shorter": 386, "52815": 386, "52816": 386, "52817": 386, "52818": 386, "promot": 386, "earli": 386, "childhood": 386, "57824": 386, "57825": 386, "57834": 386, "57835": 386, "57844": 386, "57845": 386, "57854": 386, "57855": 386, "57856": 386, "unspecifi": 386, "57864": 386, "57865": 386, "57874": 386, "57875": 386, "57876": 386, "57884": 386, "57885": 386, "57886": 386, "agricultur": 386, "61612": 386, "61613": 386, "61614": 386, "61615": 386, "61616": 386, "professor": 386, "61617": 386, "4th": 386, "comerci": 386, "format": 386, "attribut": 386, "conclus": 386, "12th": 386, "gra": 386, "artist": 386, "visual": 386, "audiovisu": 386, "danc": 386, "cour": 386, "thecnolog": 386, "superior": 386, "bacalaureat": 386, "atribut": 386, "gradut": 386, "inc": 386, "64200": 386, "finish": 386, "gymnasia": 386, "apprentic": 386, "complementari": 386, "craft": 386, "64210": 386, "64211": 386, "theoret": 386, "baccalaur": 386, "64212": 386, "64213": 386, "foreman": 386, "64214": 386, "64215": 386, "highschool": 386, "64217": 386, "64218": 386, "64219": 386, "64220": 386, "64221": 386, "64222": 386, "64223": 386, "64224": 386, "attestat": 386, "1958": 386, "1960": 386, "1980": 386, "profe": 386, "ed": 386, "got": 386, "grad": 386, "ptu": 386, "fsu": 386, "fso": 386, "techn": 386, "compl": 386, "sec": 386, "gen": 386, "2y": 386, "technikum": 386, "uchilish": 386, "3rd": 386, "7th": 386, "yr": 386, "requalif": 386, "voc": 386, "maturita": 386, "eight": 386, "schoool": 386, "six": 386, "70314": 386, "70315": 386, "bologna": 386, "70512": 386, "70513": 386, "1970": 386, "egb": 386, "administr": 386, "mechan": 386, "72422": 386, "72423": 386, "72424": 386, "nurseri": 386, "72425": 386, "72427": 386, "72428": 386, "2a": 386, "3a": 386, "formerli": 386, "75209": 386, "75210": 386, "75211": 386, "75212": 386, "longer": 386, "insti": 386, "75213": 386, "75214": 386, "75215": 386, "semest": 386, "uni": 386, "75217": 386, "75218": 386, "75219": 386, "licanti": 386, "75220": 386, "adult": 386, "preprimari": 386, "enterpris": 386, "dual": 386, "dipl": 386, "75615": 386, "withrecognit": 386, "75617": 386, "75618": 386, "75619": 386, "intermediari": 386, "75620": 386, "75621": 386, "75622": 386, "75623": 386, "75624": 386, "80400": 386, "basi": 386, "junior": 386, "80788": 386, "80799": 386, "55120": 386, "v243_cs_de1": 386, "2133": 386, "v243_cs_de2": 386, "349": 386, "preliminari": 386, "27608": 386, "27609": 386, "27610": 386, "examani": 386, "27611": 386, "27612": 386, "27613": 386, "2016": 386, "v243_cs_de3": 386, "350": 386, "servant": 386, "sale": 386, "occup": 386, "student": 386, "entrac": 386, "craftsmen": 386, "2048": 386, "v243_cs_gb1": 386, "351": 386, "q81a": 386, "gnvq": 386, "gsvq": 386, "skill": 386, "1776": 386, "v243_cs_gb2": 386, "q81b": 386, "phil": 386, "cnaa": 386, "mb": 386, "bed": 386, "beng": 386, "he": 386, "edexcel": 386, "btec": 386, "bec": 386, "tec": 386, "hnd": 386, "guild": 386, "nvq": 386, "svq": 386, "leve": 386, "foundat": 386, "fda": 386, "fdsc": 386, "hnc": 386, "avc": 386, "gce": 386, "1775": 386, "v244": 386, "paid": 386, "employ": 386, "q82": 386, "30h": 386, "emploi": 386, "militari": 386, "retir": 386, "homemak": 386, "59027": 386, "v245": 386, "q83": 386, "had": 386, "21903": 386, "v246_isco_2": 386, "355": 386, "isco08": 386, "q84a": 386, "commiss": 386, "offic": 386, "rank": 386, "isco": 386, "chief": 386, "legisl": 386, "product": 386, "hospit": 386, "retail": 386, "technologi": 386, "cleric": 386, "keyboard": 386, "clerk": 386, "materi": 386, "record": 386, "forestri": 386, "fisheri": 386, "market": 386, "hunt": 386, "subsist": 386, "fisher": 386, "hunter": 386, "gather": 386, "exclud": 386, "electrician": 386, "metal": 386, "machineri": 386, "handicraft": 386, "electr": 386, "electron": 386, "food": 386, "woodwork": 386, "garment": 386, "plant": 386, "machin": 386, "assembl": 386, "stationari": 386, "driver": 386, "mobil": 386, "cleaner": 386, "helper": 386, "mine": 386, "manufactur": 386, "street": 386, "51510": 386, "v246_siop": 386, "siops08": 386, "51280": 386, "v246_isei": 386, "357": 386, "isei08": 386, "v246_esec": 386, "358": 386, "esec08": 386, "supervisori": 386, "supervisor": 386, "routin": 386, "beak": 386, "v246_egp": 386, "359": 386, "egp11": 386, "nonmanu": 386, "iva": 386, "selfempl": 386, "empl": 386, "ivb": 386, "manual": 386, "viia": 386, "unskil": 386, "viib": 386, "farm": 386, "ivc": 386, "99999": 386, "51257": 386, "v247": 386, "mani": 386, "employe": 386, "q85": 386, "5467": 386, "v248": 386, "361": 386, "supervis": 386, "someon": 386, "q86": 386, "46098": 386, "v248a": 386, "362": 386, "q86a": 386, "12205": 386, "v249": 386, "363": 386, "q87": 386, "profit": 386, "43442": 386, "v250": 386, "spous": 386, "q88": 386, "35914": 386, "v251b": 386, "q88a": 386, "2708": 386, "v251b_r": 386, "366": 386, "v252_edulvlb": 386, "367": 386, "q89": 386, "35069": 386, "f252_edulvlb_ch": 386, "web_german": 386, "web": 386, "ihr": 386, "2501": 386, "v252_edulvlb_2": 386, "369": 386, "v252_edulvlb_1": 386, "370": 386, "v252_isced_3": 386, "371": 386, "v252_isced_2": 386, "v252_isced_2b": 386, "373": 386, "v252_isced_1": 386, "374": 386, "35820": 386, "v252_eisc": 386, "375": 386, "v252_isced97": 386, "v252_8cat": 386, "377": 386, "v252_r": 386, "378": 386, "v252_c": 386, "379": 386, "preschool": 386, "vk1": 386, "folkeh\u00f8gskol": 386, "realskol": 386, "vk2": 386, "vk3": 386, "gymna": 386, "supplementari": 386, "cand": 386, "mag": 386, "33460": 386, "521": 386, "v252_cs_de1": 386, "1471": 386, "v252_cs_de2": 386, "1390": 386, "v252_cs_de3": 386, "382": 386, "1379": 386, "v252_cs_gb1": 386, "383": 386, "q89a": 386, "869": 386, "v252_cs_gb2": 386, "q89b": 386, "v253": 386, "385": 386, "q90": 386, "35752": 386, "v254": 386, "386": 386, "q91": 386, "11543": 386, "v255_isco_2": 386, "387": 386, "q92a": 386, "30950": 386, "v255_siop": 386, "30809": 386, "v255_isei": 386, "389": 386, "v255_esec": 386, "390": 386, "v255_egp": 386, "391": 386, "30796": 386, "v256": 386, "q93": 386, "3522": 386, "v257": 386, "393": 386, "q94": 386, "27871": 386, "v258": 386, "394": 386, "she": 386, "q95": 386, "6562": 386, "v259": 386, "395": 386, "experienc": 386, "q96": 386, "58024": 386, "v260": 386, "396": 386, "q97": 386, "58561": 386, "v261": 386, "397": 386, "net": 386, "q98": 386, "decil": 386, "50698": 386, "v261_ppp": 386, "monthli": 386, "x1000": 386, "ppp": 386, "v261_r": 386, "399": 386, "low": 386, "v262_edulvlb": 386, "q99": 386, "53940": 386, "v262_edulvlb_2": 386, "401": 386, "v262_edulvlb_1": 386, "402": 386, "v262_isced_3": 386, "403": 386, "v262_isced_2": 386, "v262_isced_2b": 386, "405": 386, "v262_isced_1": 386, "406": 386, "55017": 386, "v262_eisc": 386, "407": 386, "v262_isced97": 386, "v262_8cat": 386, "409": 386, "v262_r": 386, "v262_c": 386, "411": 386, "51560": 386, "525": 386, "v262_cs_de1": 386, "1835": 386, "v262_cs_de2": 386, "1822": 386, "v262_cs_de3": 386, "1737": 386, "v262_cs_gb1": 386, "415": 386, "q99a": 386, "1449": 386, "v262_cs_gb2": 386, "416": 386, "q99b": 386, "1456": 386, "v263_edulvlb": 386, "q100": 386, "55028": 386, "v263_edulvlb_2": 386, "v263_edulvlb_1": 386, "419": 386, "v263_isced_3": 386, "420": 386, "v263_isced_2": 386, "v263_isced_2b": 386, "v263_isced_1": 386, "56130": 386, "v263_eisc": 386, "424": 386, "v263_isced97": 386, "425": 386, "v263_8cat": 386, "v263_r": 386, "427": 386, "v263_c": 386, "52602": 386, "v263_cs_de1": 386, "429": 386, "1918": 386, "v263_cs_de2": 386, "1865": 386, "v263_cs_de3": 386, "431": 386, "1781": 386, "v263_cs_gb1": 386, "432": 386, "q100a": 386, "1504": 386, "v263_cs_gb2": 386, "433": 386, "1508": 386, "v264": 386, "q101": 386, "55049": 386, "v265": 386, "435": 386, "q102": 386, "56942": 386, "v266": 386, "436": 386, "earner": 386, "q103": 386, "banker": 386, "secretari": 386, "bookkeep": 386, "shop": 386, "owner": 386, "insur": 386, "agent": 386, "buyer": 386, "restaur": 386, "waitress": 386, "barber": 386, "caretak": 386, "motor": 386, "printer": 386, "seamstress": 386, "die": 386, "maker": 386, "bricklay": 386, "bu": 386, "canneri": 386, "carpent": 386, "sheet": 386, "baker": 386, "porter": 386, "tractor": 386, "proprietor": 386, "55344": 386, "v267": 386, "437": 386, "q104a": 386, "littl": 386, "bit": 386, "56398": 386, "v268": 386, "discuss": 386, "q104b": 386, "57142": 386, "v269": 386, "439": 386, "q104c": 386, "56312": 386, "v270": 386, "q104d": 386, "56977": 386, "v271": 386, "441": 386, "q104e": 386, "54376": 386, "v272": 386, "q104f": 386, "55219": 386, "v273": 386, "443": 386, "q104g": 386, "54635": 386, "v274": 386, "q104h": 386, "55792": 386, "v275b_n2": 386, "445": 386, "conduct": 386, "nut": 386, "q105": 386, "al01": 386, "al02": 386, "al03": 386, "alzz": 386, "extra": 386, "am01": 386, "yerevan": 386, "am02": 386, "am03": 386, "iii": 386, "am04": 386, "amzz": 386, "at11": 386, "ost\u00f6sterreich": 386, "burgenland": 386, "at12": 386, "nieder\u00f6sterreich": 386, "at13": 386, "wien": 386, "at21": 386, "s\u00fcd\u00f6sterreich": 386, "k\u00e4rnten": 386, "at22": 386, "steiermark": 386, "at31": 386, "west\u00f6sterreich": 386, "ober\u00f6sterreich": 386, "at32": 386, "salzburg": 386, "at33": 386, "tirol": 386, "at34": 386, "vorarlberg": 386, "atzz": 386, "regio": 386, "ab": 386, "absheron": 386, "aga": 386, "agstafa": 386, "agc": 386, "agdzhebedinski": 386, "agdash": 386, "agu": 386, "agsu": 386, "ast": 386, "astara": 386, "baku": 386, "bal": 386, "belakanski": 386, "bar": 386, "barda": 386, "bei": 386, "beylagan": 386, "bil": 386, "bilasuvar": 386, "cal": 386, "jalilabad": 386, "dashkesan": 386, "ganja": 386, "gad": 386, "kedabegski": 386, "gor": 386, "goranboi": 386, "goi": 386, "goychai": 386, "gyg": 386, "gai": 386, "gelski": 386, "hac": 386, "hajikabul": 386, "imi": 386, "imishli": 386, "ism": 386, "ismaili": 386, "kur": 386, "kurdamir": 386, "lan": 386, "lankaran": 386, "ler": 386, "lerik": 386, "masal": 386, "mi": 386, "mingechaur": 386, "naftalan": 386, "nef": 386, "neftchala": 386, "ogu": 386, "oguz": 386, "qab": 386, "gabala": 386, "qax": 386, "gakh": 386, "qaz": 386, "gazakh": 386, "qba": 386, "gubinski": 386, "qob": 386, "gobustan": 386, "qu": 386, "gusar": 386, "sab": 386, "sabirabad": 386, "sak": 386, "sheki": 386, "sal": 386, "salyan": 386, "sat": 386, "saatli": 386, "sbn": 386, "shabran": 386, "sii": 386, "siyazan": 386, "skr": 386, "shamkir": 386, "sumgait": 386, "smi": 386, "shemakha": 386, "smx": 386, "samukh": 386, "shirvan": 386, "tov": 386, "tovuz": 386, "uca": 386, "ujar": 386, "xac": 386, "khachmaz": 386, "xiz": 386, "khyzi": 386, "yar": 386, "yardimli": 386, "yev": 386, "yevlakh": 386, "zaq": 386, "zakatala": 386, "zar": 386, "zardob": 386, "babih": 386, "babrc": 386, "br\u010dko": 386, "basrp": 386, "republica": 386, "srpska": 386, "bg31": 386, "severna": 386, "yugoiztochna": 386, "severozapaden": 386, "bg32": 386, "severen": 386, "tsentralen": 386, "bg33": 386, "severoiztochen": 386, "bg34": 386, "yugoiztochen": 386, "bg41": 386, "yugozapadna": 386, "yuzhna": 386, "tsentralna": 386, "yugozapaden": 386, "bg42": 386, "yuzhen": 386, "bgzz": 386, "by01": 386, "brest": 386, "by02": 386, "vitebsk": 386, "by03": 386, "gomel": 386, "by04": 386, "grodno": 386, "by05": 386, "minsk": 386, "capit": 386, "by06": 386, "by07": 386, "mogilev": 386, "byzz": 386, "ch01": 386, "lemaniqu": 386, "ch02": 386, "espac": 386, "mittelland": 386, "ch03": 386, "nordwestschweiz": 386, "ch04": 386, "z\u00fcrich": 386, "ch05": 386, "ostschweiz": 386, "ch06": 386, "zentralschweiz": 386, "ch07": 386, "chzz": 386, "cz01": 386, "\u010desk\u00e1": 386, "republika": 386, "praha": 386, "cz02": 386, "st\u0159edn\u00ed": 386, "\u010dechi": 386, "cz03": 386, "jihoz\u00e1pad": 386, "cz04": 386, "severoz\u00e1pad": 386, "cz05": 386, "severov\u00fdchod": 386, "cz06": 386, "jihov\u00fdchod": 386, "cz07": 386, "morava": 386, "cz08": 386, "moravskoslezsko": 386, "czzz": 386, "de11": 386, "baden": 386, "w\u00fcrttemberg": 386, "stuttgart": 386, "de12": 386, "karlsruh": 386, "de13": 386, "freiburg": 386, "de14": 386, "t\u00fcbingen": 386, "de21": 386, "bayern": 386, "oberbayern": 386, "de22": 386, "niederbayern": 386, "de23": 386, "oberpfalz": 386, "de24": 386, "oberfranken": 386, "de25": 386, "mittelfranken": 386, "de26": 386, "unterfranken": 386, "de27": 386, "schwaben": 386, "de30": 386, "berlin": 386, "de40": 386, "brandenburg": 386, "de50": 386, "bremen": 386, "de60": 386, "hamburg": 386, "de71": 386, "hessen": 386, "darmstadt": 386, "de72": 386, "gie\u00dfen": 386, "de73": 386, "kassel": 386, "de80": 386, "mecklenburg": 386, "vorpommern": 386, "de91": 386, "niedersachsen": 386, "braunschweig": 386, "de92": 386, "hannov": 386, "de93": 386, "l\u00fcneburg": 386, "de94": 386, "weser": 386, "em": 386, "dea1": 386, "nordrhein": 386, "westfalen": 386, "d\u00fcsseldorf": 386, "dea2": 386, "k\u00f6ln": 386, "dea3": 386, "m\u00fcnster": 386, "dea4": 386, "detmold": 386, "dea5": 386, "arnsberg": 386, "deb1": 386, "rheinland": 386, "pfalz": 386, "koblenz": 386, "deb2": 386, "trier": 386, "deb3": 386, "rheinhessen": 386, "dec0": 386, "saarland": 386, "ded2": 386, "sachsen": 386, "dresden": 386, "ded4": 386, "chemnitz": 386, "ded5": 386, "leipzig": 386, "dee0": 386, "anhalt": 386, "def0": 386, "schleswig": 386, "holstein": 386, "deg0": 386, "th\u00fcringen": 386, "dezz": 386, "dk01": 386, "danmark": 386, "hovedstaden": 386, "dk02": 386, "sj\u00e6lland": 386, "dk03": 386, "syddanmark": 386, "dk04": 386, "midtjylland": 386, "dk05": 386, "nordjylland": 386, "dkzz": 386, "ee00": 386, "eesti": 386, "esti": 386, "eezz": 386, "el30": 386, "attica": 386, "attiki": 386, "el41": 386, "nissia": 386, "aigaiou": 386, "kriti": 386, "aegean": 386, "voreio": 386, "aigaio": 386, "el42": 386, "notio": 386, "el43": 386, "crete": 386, "el51": 386, "voreia": 386, "ellada": 386, "thrace": 386, "el52": 386, "el53": 386, "el54": 386, "epiru": 386, "el61": 386, "kentriki": 386, "thessali": 386, "el62": 386, "ionian": 386, "el63": 386, "el64": 386, "sterea": 386, "el65": 386, "peloponnes": 386, "es11": 386, "noroest": 386, "galicia": 386, "es12": 386, "principado": 386, "es13": 386, "cantabria": 386, "es21": 386, "norest": 386, "pa\u00ed": 386, "vasco": 386, "es22": 386, "comunidad": 386, "foral": 386, "navarra": 386, "es23": 386, "rioja": 386, "es24": 386, "arag\u00f3n": 386, "es30": 386, "madrid": 386, "es41": 386, "centro": 386, "castilla": 386, "le\u00f3n": 386, "es42": 386, "mancha": 386, "es43": 386, "extremadura": 386, "es51": 386, "est": 386, "catalu\u00f1a": 386, "es52": 386, "valenciana": 386, "es53": 386, "ill": 386, "balear": 386, "es61": 386, "sur": 386, "andaluc\u00eda": 386, "es62": 386, "regi\u00f3n": 386, "murcia": 386, "es63": 386, "ciudad": 386, "aut\u00f3noma": 386, "ceuta": 386, "es64": 386, "melilla": 386, "es70": 386, "canaria": 386, "eszz": 386, "fi19": 386, "suomi": 386, "l\u00e4nsi": 386, "fi1b": 386, "helsinki": 386, "uusimaa": 386, "fi1c": 386, "etel\u00e4": 386, "fi1d": 386, "pohjoi": 386, "ja": 386, "it\u00e4": 386, "fi20": 386, "fizz": 386, "fr10": 386, "\u00eele": 386, "frb0": 386, "val": 386, "loir": 386, "frc1": 386, "bourgogn": 386, "franch": 386, "comt\u00e9": 386, "frc2": 386, "frd1": 386, "normandi": 386, "bass": 386, "frd2": 386, "haut": 386, "fre1": 386, "nord": 386, "calai": 386, "fre2": 386, "picardi": 386, "frf1": 386, "alsac": 386, "champagn": 386, "ardenn": 386, "lorrain": 386, "frf2": 386, "frf3": 386, "frg0": 386, "frh0": 386, "bretagn": 386, "fri1": 386, "aquitain": 386, "limousin": 386, "poitou": 386, "charent": 386, "fri2": 386, "fri3": 386, "frj1": 386, "languedoc": 386, "roussillon": 386, "midi": 386, "pyr\u00e9n\u00e9": 386, "frj2": 386, "frk1": 386, "auvergn": 386, "rh\u00f4ne": 386, "alp": 386, "frk2": 386, "frl0": 386, "provenc": 386, "azur": 386, "frm0": 386, "cors": 386, "fry1": 386, "rup": 386, "r\u00e9gion": 386, "ultrap\u00e9riph\u00e9riqu": 386, "fran\u00e7ais": 386, "fry2": 386, "fry3": 386, "guyan": 386, "fry4": 386, "fry5": 386, "frzz": 386, "ge01": 386, "ge02": 386, "ge03": 386, "gezz": 386, "grzz": 386, "hr03": 386, "hrvatska": 386, "jadranska": 386, "hr04": 386, "kontinentalna": 386, "hrzz": 386, "hu11": 386, "k\u00f6z\u00e9p": 386, "magyarorsz\u00e1g": 386, "budapest": 386, "hu12": 386, "pest": 386, "hu21": 386, "dun\u00e1nt\u00fal": 386, "hu22": 386, "nyugat": 386, "hu23": 386, "d\u00e9l": 386, "hu31": 386, "alf\u00f6ld": 386, "\u00e9": 386, "\u00e9szak": 386, "hu32": 386, "hu33": 386, "huzz": 386, "is00": 386, "\u00edsland": 386, "iszz": 386, "itc1": 386, "ovest": 386, "piemont": 386, "itc2": 386, "vall": 386, "aosta": 386, "vall\u00e9": 386, "aost": 386, "itc3": 386, "liguria": 386, "itc4": 386, "lombardia": 386, "itf1": 386, "sud": 386, "abruzzo": 386, "itf2": 386, "molis": 386, "itf3": 386, "campania": 386, "itf4": 386, "puglia": 386, "itf5": 386, "basilicata": 386, "itf6": 386, "calabria": 386, "itg1": 386, "isol": 386, "sicilia": 386, "itg2": 386, "sardegna": 386, "ith1": 386, "provincia": 386, "autonoma": 386, "bolzano": 386, "bozen": 386, "ith2": 386, "trento": 386, "ith3": 386, "veneto": 386, "ith4": 386, "friuli": 386, "venezia": 386, "giulia": 386, "ith5": 386, "emilia": 386, "romagna": 386, "iti1": 386, "toscana": 386, "iti2": 386, "umbria": 386, "iti3": 386, "march": 386, "iti4": 386, "lazio": 386, "itzz": 386, "lt01": 386, "lietuva": 386, "sostin\u0117": 386, "regiona": 386, "lt02": 386, "vidurio": 386, "vakar\u0173": 386, "lietuvo": 386, "ltzz": 386, "lv00": 386, "latvija": 386, "lvzz": 386, "me00": 386, "mk00": 386, "mkzz": 386, "nl11": 386, "noord": 386, "nederland": 386, "groningen": 386, "nl12": 386, "friesland": 386, "nl13": 386, "drenth": 386, "nl21": 386, "oost": 386, "overijssel": 386, "nl22": 386, "gelderland": 386, "nl23": 386, "flevoland": 386, "nl31": 386, "west": 386, "utrecht": 386, "nl32": 386, "holland": 386, "nl33": 386, "zuid": 386, "nl34": 386, "zeeland": 386, "nl41": 386, "brabant": 386, "nl42": 386, "limburg": 386, "nlzz": 386, "no01": 386, "oslo": 386, "og": 386, "akershu": 386, "no02": 386, "hedmark": 386, "oppland": 386, "no03": 386, "s\u00f8r": 386, "\u00f8stlandet": 386, "no04": 386, "agder": 386, "rogaland": 386, "no05": 386, "vestlandet": 386, "no06": 386, "tr\u00f8ndelag": 386, "no07": 386, "norg": 386, "nozz": 386, "pl21": 386, "makroregion": 386, "po\u0142udniowi": 386, "ma\u0142opolski": 386, "pl22": 386, "\u015bl\u0105skie": 386, "pl41": 386, "p\u00f3\u0142nocno": 386, "zachodni": 386, "wielkopolski": 386, "pl42": 386, "zachodniopomorski": 386, "pl43": 386, "lubuski": 386, "pl51": 386, "po\u0142udniowo": 386, "dolno\u015bl\u0105ski": 386, "pl52": 386, "opolski": 386, "pl61": 386, "p\u00f3\u0142nocni": 386, "kujawsko": 386, "pomorski": 386, "pl62": 386, "warmi\u0144sko": 386, "mazurski": 386, "pl63": 386, "pl71": 386, "centralni": 386, "\u0142\u00f3dzkie": 386, "pl72": 386, "\u015bwi\u0119tokrzyski": 386, "pl81": 386, "wschodni": 386, "lubelski": 386, "pl82": 386, "podkarpacki": 386, "pl84": 386, "podlaski": 386, "pl91": 386, "wojew\u00f3dztwo": 386, "mazowiecki": 386, "warszawski": 386, "sto\u0142eczni": 386, "pl92": 386, "regionalni": 386, "plzz": 386, "pt11": 386, "continent": 386, "nort": 386, "pt15": 386, "algarv": 386, "pt16": 386, "pt17": 386, "\u00e1rea": 386, "metropolitana": 386, "lisboa": 386, "pt18": 386, "alentejo": 386, "pt20": 386, "regi\u00e3o": 386, "a\u00e7or": 386, "pt30": 386, "madeira": 386, "ptzz": 386, "ro11": 386, "macroregiunea": 386, "unu": 386, "vest": 386, "ro12": 386, "centru": 386, "ro21": 386, "ro22": 386, "ro31": 386, "trei": 386, "muntenia": 386, "ro32": 386, "bucure\u0219ti": 386, "ilfov": 386, "ro41": 386, "patru": 386, "oltenia": 386, "ro42": 386, "rozz": 386, "rs11": 386, "beograd": 386, "rs12": 386, "rs21": 386, "jug": 386, "\u0161umadija": 386, "zapadna": 386, "srbija": 386, "rs22": 386, "ju\u017ena": 386, "isto\u010dna": 386, "rszz": 386, "ru11": 386, "ru21": 386, "ru31": 386, "ru41": 386, "privolzhski": 386, "ru51": 386, "ural": 386, "ru61": 386, "siberian": 386, "ru71": 386, "east": 386, "ru81": 386, "caucasian": 386, "se11": 386, "\u00f6stra": 386, "sverig": 386, "stockholm": 386, "se12": 386, "mellansverig": 386, "se21": 386, "s\u00f6dra": 386, "sm\u00e5land": 386, "med": 386, "\u00f6arna": 386, "se22": 386, "sydsverig": 386, "se23": 386, "v\u00e4stsverig": 386, "se31": 386, "norra": 386, "se32": 386, "mellersta": 386, "norrland": 386, "se33": 386, "\u00f6vre": 386, "sezz": 386, "si03": 386, "slovenija": 386, "vzhodna": 386, "si04": 386, "zahodna": 386, "sizz": 386, "sk01": 386, "slovensko": 386, "bratislavsk\u00fd": 386, "kraj": 386, "sk02": 386, "z\u00e1padn\u00e9": 386, "sk03": 386, "stredn\u00e9": 386, "sk04": 386, "v\u00fdchodn\u00e9": 386, "skzz": 386, "ua11": 386, "volyn": 386, "ua12": 386, "zakarpattya": 386, "ua13": 386, "ivano": 386, "frankivsk": 386, "ua14": 386, "lviv": 386, "ua21": 386, "rivn": 386, "ua22": 386, "ternopil": 386, "ua23": 386, "khmelnytski": 386, "ua24": 386, "chernivtsi": 386, "ua31": 386, "THE": 386, "OF": 386, "kyiv": 386, "ua41": 386, "mykolaiv": 386, "ua42": 386, "odesa": 386, "ua43": 386, "kherson": 386, "ua51": 386, "zhytomyr": 386, "ua52": 386, "ua53": 386, "chernihiv": 386, "ua61": 386, "dnipropetrovsk": 386, "ua62": 386, "sumi": 386, "ua63": 386, "kharkiv": 386, "ua71": 386, "donetsk": 386, "ua72": 386, "zaporizhya": 386, "ua73": 386, "luhansk": 386, "ua81": 386, "vinnytsia": 386, "ua82": 386, "kirovograd": 386, "ua83": 386, "poltava": 386, "ua84": 386, "cherkasi": 386, "ukc1": 386, "gbn": 386, "tee": 386, "vallei": 386, "durham": 386, "ukc2": 386, "northumberland": 386, "tyne": 386, "wear": 386, "ukd1": 386, "cumbria": 386, "ukd3": 386, "manchest": 386, "ukd4": 386, "lancashir": 386, "ukd6": 386, "cheshir": 386, "ukd7": 386, "merseysid": 386, "uke1": 386, "yorkshir": 386, "humber": 386, "lincolnshir": 386, "uke2": 386, "uke3": 386, "uke4": 386, "ukf1": 386, "midland": 386, "derbyshir": 386, "nottinghamshir": 386, "ukf2": 386, "leicestershir": 386, "rutland": 386, "northamptonshir": 386, "ukf3": 386, "ukg1": 386, "herefordshir": 386, "worcestershir": 386, "warwickshir": 386, "ukg2": 386, "shropshir": 386, "staffordshir": 386, "ukg3": 386, "ukh1": 386, "anglia": 386, "ukh2": 386, "bedfordshir": 386, "hertfordshir": 386, "ukh3": 386, "essex": 386, "uki3": 386, "london": 386, "uki4": 386, "uki5": 386, "outer": 386, "uki6": 386, "uki7": 386, "ukj1": 386, "berkshir": 386, "buckinghamshir": 386, "oxfordshir": 386, "ukj2": 386, "surrei": 386, "sussex": 386, "ukj3": 386, "hampshir": 386, "wight": 386, "ukj4": 386, "kent": 386, "ukk1": 386, "gloucestershir": 386, "wiltshir": 386, "bristol": 386, "bath": 386, "ukk2": 386, "dorset": 386, "somerset": 386, "ukk3": 386, "cornwal": 386, "scilli": 386, "ukk4": 386, "devon": 386, "ukl1": 386, "wale": 386, "ukl2": 386, "ukm5": 386, "ukm6": 386, "highland": 386, "ukm7": 386, "ukm8": 386, "ukm9": 386, "ukn0": 386, "nir": 386, "ukzz": 386, "57248": 386, "v275b_n1": 386, "grz": 386, "al0": 386, "alz": 386, "am0": 386, "amz": 386, "at1": 386, "at2": 386, "at3": 386, "atz": 386, "az1": 386, "az2": 386, "apsheron": 386, "az3": 386, "kuba": 386, "az4": 386, "aran": 386, "az5": 386, "lenkaran": 386, "az6": 386, "mountain": 386, "az7": 386, "kazakh": 386, "az8": 386, "bg0": 386, "bg3": 386, "bg4": 386, "bgz": 386, "by0": 386, "byz": 386, "ch0": 386, "chz": 386, "cz0": 386, "czz": 386, "de1": 386, "de2": 386, "de3": 386, "de4": 386, "de5": 386, "de6": 386, "de7": 386, "de8": 386, "de9": 386, "dea": 386, "deb": 386, "ded": 386, "dee": 386, "deg": 386, "dez": 386, "dk0": 386, "dkz": 386, "ee0": 386, "eez": 386, "el3": 386, "el4": 386, "el5": 386, "el6": 386, "es1": 386, "es2": 386, "es3": 386, "es4": 386, "es5": 386, "es6": 386, "es7": 386, "esz": 386, "fi1": 386, "fi2": 386, "fiz": 386, "fr1": 386, "frb": 386, "frc": 386, "frd": 386, "fre": 386, "frf": 386, "frg": 386, "frh": 386, "fri": 386, "frj": 386, "frk": 386, "frl": 386, "frm": 386, "fry": 386, "frz": 386, "ge0": 386, "gez": 386, "hr0": 386, "hrz": 386, "hu1": 386, "hu2": 386, "hu3": 386, "huz": 386, "is0": 386, "isz": 386, "itc": 386, "itf": 386, "itg": 386, "ith": 386, "iti": 386, "itz": 386, "lt0": 386, "ltz": 386, "lv0": 386, "lvz": 386, "me0": 386, "mk0": 386, "mkz": 386, "nl1": 386, "nl2": 386, "nl3": 386, "nl4": 386, "nlz": 386, "no0": 386, "noz": 386, "pl2": 386, "pl4": 386, "pl5": 386, "pl6": 386, "pl7": 386, "pl8": 386, "pl9": 386, "plz": 386, "pt1": 386, "pt2": 386, "pt3": 386, "ptz": 386, "ro1": 386, "ro2": 386, "ro3": 386, "ro4": 386, "roz": 386, "rs1": 386, "rs2": 386, "rsz": 386, "ru1": 386, "ru2": 386, "ru3": 386, "ru4": 386, "ru5": 386, "ru6": 386, "ru7": 386, "ru8": 386, "se1": 386, "se2": 386, "se3": 386, "sez": 386, "si0": 386, "siz": 386, "sk0": 386, "skz": 386, "ua1": 386, "ua2": 386, "ua3": 386, "ua4": 386, "ua5": 386, "ua6": 386, "ua7": 386, "ua8": 386, "ukc": 386, "ukd": 386, "AND": 386, "ukf": 386, "ukg": 386, "ukh": 386, "uki": 386, "ukj": 386, "ukk": 386, "ukl": 386, "ukm": 386, "ukn": 386, "ukz": 386, "59418": 386, "v275c_n2": 386, "447": 386, "80001": 386, "80102": 386, "80203": 386, "80335": 386, "310100": 386, "310201": 386, "310202": 386, "310203": 386, "310300": 386, "310301": 386, "310302": 386, "310303": 386, "310304": 386, "310400": 386, "310401": 386, "310402": 386, "310403": 386, "310404": 386, "310405": 386, "310406": 386, "310407": 386, "310408": 386, "310409": 386, "310410": 386, "310411": 386, "310412": 386, "310413": 386, "310414": 386, "310415": 386, "310416": 386, "310417": 386, "310500": 386, "310501": 386, "310502": 386, "310503": 386, "310504": 386, "310505": 386, "310600": 386, "310601": 386, "310602": 386, "310603": 386, "310700": 386, "310701": 386, "310702": 386, "310703": 386, "310704": 386, "310705": 386, "310706": 386, "310707": 386, "310708": 386, "310709": 386, "310710": 386, "310800": 386, "310801": 386, "310802": 386, "310803": 386, "310804": 386, "310805": 386, "313535": 386, "400101": 386, "400102": 386, "400103": 386, "400201": 386, "400202": 386, "400301": 386, "400302": 386, "400303": 386, "400304": 386, "403535": 386, "510001": 386, "510002": 386, "510003": 386, "510004": 386, "513535": 386, "700001": 386, "700002": 386, "700003": 386, "1000301": 386, "1000302": 386, "1000303": 386, "1000304": 386, "1000401": 386, "1000402": 386, "1003535": 386, "1120000": 386, "1120001": 386, "1120002": 386, "1120003": 386, "1120004": 386, "1120005": 386, "1120006": 386, "1120007": 386, "1123535": 386, "1910003": 386, "1910004": 386, "1913535": 386, "2030001": 386, "2030002": 386, "2030003": 386, "2030004": 386, "2030005": 386, "2030006": 386, "2030007": 386, "2030008": 386, "2033535": 386, "2080001": 386, "2080002": 386, "2080003": 386, "2080004": 386, "2080005": 386, "2083535": 386, "2330000": 386, "2333535": 386, "2460109": 386, "2460111": 386, "2460112": 386, "2460113": 386, "2460200": 386, "2463535": 386, "2500100": 386, "2501100": 386, "2501201": 386, "2501202": 386, "2501301": 386, "2501302": 386, "2501401": 386, "2501402": 386, "2501501": 386, "2501502": 386, "2501503": 386, "2501600": 386, "2501700": 386, "2501801": 386, "2501802": 386, "2501803": 386, "2501901": 386, "2501902": 386, "2502001": 386, "2502002": 386, "2502100": 386, "2502200": 386, "2503401": 386, "2503402": 386, "2503403": 386, "2503404": 386, "2503405": 386, "2503535": 386, "2680001": 386, "2680002": 386, "2680003": 386, "2683535": 386, "2760101": 386, "2760102": 386, "2760103": 386, "2760104": 386, "2760201": 386, "2760202": 386, "2760203": 386, "2760204": 386, "2760205": 386, "2760206": 386, "2760207": 386, "2760300": 386, "2760400": 386, "2760500": 386, "2760600": 386, "2760701": 386, "2760702": 386, "2760703": 386, "2760800": 386, "2760901": 386, "2760902": 386, "2760903": 386, "2760904": 386, "2761001": 386, "2761002": 386, "2761003": 386, "2761004": 386, "2761005": 386, "2761101": 386, "2761102": 386, "2761103": 386, "2761200": 386, "2761302": 386, "2761304": 386, "2761305": 386, "2761400": 386, "2761500": 386, "2761600": 386, "2763535": 386, "3000300": 386, "3000401": 386, "3000402": 386, "3000403": 386, "3000501": 386, "3000502": 386, "3000503": 386, "3000504": 386, "3000601": 386, "3000602": 386, "3000603": 386, "3000604": 386, "3000605": 386, "3003535": 386, "3480101": 386, "3480102": 386, "3480201": 386, "3480202": 386, "3480203": 386, "3480301": 386, "3480302": 386, "3480303": 386, "3483535": 386, "3520000": 386, "3523535": 386, "3801201": 386, "3801202": 386, "3801203": 386, "3801204": 386, "3801501": 386, "3801502": 386, "3801503": 386, "3801504": 386, "3801505": 386, "3801506": 386, "3801601": 386, "3801602": 386, "3801701": 386, "3801702": 386, "3801703": 386, "3801704": 386, "3801705": 386, "3801801": 386, "3801802": 386, "3801803": 386, "3801804": 386, "3803535": 386, "4280000": 386, "4283535": 386, "4400001": 386, "4400002": 386, "4403535": 386, "4990000": 386, "5280101": 386, "5280102": 386, "5280103": 386, "5280201": 386, "5280202": 386, "5280203": 386, "5280301": 386, "5280302": 386, "5280303": 386, "5280304": 386, "5280401": 386, "5280402": 386, "5283535": 386, "5780001": 386, "5780002": 386, "5780003": 386, "5780004": 386, "5780005": 386, "5780006": 386, "5780007": 386, "5783535": 386, "6160201": 386, "6160202": 386, "6160401": 386, "6160402": 386, "6160403": 386, "6160501": 386, "6160502": 386, "6160601": 386, "6160602": 386, "6160603": 386, "6160701": 386, "6160702": 386, "6160801": 386, "6160802": 386, "6160804": 386, "6160901": 386, "6160902": 386, "6163535": 386, "6200101": 386, "6200105": 386, "6200106": 386, "6200107": 386, "6200108": 386, "6200200": 386, "6200300": 386, "6203535": 386, "6420101": 386, "6420102": 386, "6420201": 386, "6420202": 386, "6420301": 386, "6420302": 386, "6420401": 386, "6420402": 386, "6423535": 386, "6430101": 386, "6430201": 386, "6430301": 386, "6430401": 386, "6430501": 386, "6430601": 386, "6430701": 386, "6430801": 386, "6880101": 386, "beogradski": 386, "6880102": 386, "vojvodin": 386, "6880201": 386, "\u0161umadij": 386, "zapadn": 386, "srbije": 386, "6880202": 386, "ju\u017en": 386, "isto\u010dn": 386, "6883535": 386, "7030001": 386, "7030002": 386, "7030003": 386, "7030004": 386, "7033535": 386, "7050003": 386, "7050004": 386, "7053535": 386, "7240101": 386, "7240102": 386, "7240103": 386, "7240201": 386, "7240202": 386, "7240203": 386, "7240204": 386, "7240300": 386, "7240401": 386, "7240402": 386, "7240403": 386, "7240501": 386, "7240502": 386, "7240503": 386, "7240601": 386, "7240602": 386, "7240603": 386, "7240604": 386, "7240700": 386, "7243535": 386, "7520101": 386, "7520102": 386, "7520201": 386, "7520202": 386, "7520203": 386, "7520301": 386, "7520302": 386, "7520303": 386, "7523535": 386, "7560001": 386, "7560002": 386, "7560003": 386, "7560004": 386, "7560005": 386, "7560006": 386, "7560007": 386, "7563535": 386, "8040101": 386, "8040102": 386, "8040103": 386, "8040104": 386, "8040201": 386, "8040202": 386, "8040203": 386, "8040204": 386, "8040301": 386, "8040401": 386, "8040402": 386, "8040403": 386, "8040501": 386, "8040502": 386, "8040503": 386, "8040601": 386, "8040602": 386, "8040603": 386, "8040701": 386, "8040702": 386, "8040703": 386, "8040801": 386, "8040802": 386, "8040803": 386, "8040804": 386, "8070000": 386, "8073535": 386, "8261201": 386, "8261202": 386, "8261301": 386, "8261303": 386, "8261304": 386, "8261306": 386, "8261307": 386, "8261401": 386, "8261402": 386, "8261403": 386, "8261404": 386, "8261501": 386, "8261502": 386, "8261503": 386, "8261601": 386, "8261602": 386, "8261603": 386, "8261701": 386, "8261702": 386, "8261703": 386, "8261803": 386, "8261804": 386, "8261805": 386, "8261806": 386, "8261807": 386, "8261901": 386, "8261902": 386, "8261903": 386, "8261904": 386, "8262001": 386, "8262002": 386, "8262003": 386, "8262004": 386, "8262101": 386, "8262102": 386, "8262205": 386, "8262206": 386, "8262207": 386, "8262208": 386, "8262209": 386, "8263535": 386, "9092300": 386, "v275c_n1": 386, "448": 386, "835": 386, "3135": 386, "4035": 386, "5100": 386, "5135": 386, "7000": 386, "10000": 386, "10035": 386, "11200": 386, "11235": 386, "19100": 386, "19135": 386, "20300": 386, "20335": 386, "20800": 386, "20835": 386, "23300": 386, "23335": 386, "24635": 386, "25034": 386, "25035": 386, "26800": 386, "26835": 386, "27614": 386, "27615": 386, "27616": 386, "27635": 386, "30003": 386, "30004": 386, "30005": 386, "30006": 386, "30035": 386, "34835": 386, "35200": 386, "35235": 386, "38035": 386, "42800": 386, "42835": 386, "44035": 386, "49900": 386, "52835": 386, "57800": 386, "61635": 386, "62035": 386, "64235": 386, "68835": 386, "70300": 386, "70335": 386, "70500": 386, "70535": 386, "72435": 386, "75235": 386, "75600": 386, "75635": 386, "80700": 386, "80735": 386, "82618": 386, "82619": 386, "82620": 386, "82621": 386, "82622": 386, "82635": 386, "90923": 386, "v276_r": 386, "449": 386, "q106": 386, "5000": 386, "20000": 386, "100000": 386, "500000": 386, "53444": 386, "v277": 386, "q107": 386, "57588": 386, "951": 386, "mm_v277_fu": 386, "451": 386, "3376": 386, "v278a": 386, "452": 386, "q108": 386, "56217": 386, "v278b": 386, "minut": 386, "v278c_r": 386, "1278": 386, "v279a": 386, "455": 386, "56138": 386, "v279b": 386, "456": 386, "v279c_r": 386, "457": 386, "1295": 386, "v279d_r": 386, "q109": 386, "55336": 386, "502": 386, "mm_v278a_fu": 386, "459": 386, "2855": 386, "mm_v278b_fu": 386, "460": 386, "mm_v279a_fu": 386, "461": 386, "2823": 386, "mm_v279b_fu": 386, "v280": 386, "463": 386, "54488": 386, "v281a": 386, "464": 386, "639": 386, "q110": 386, "aa": 386, "afar": 386, "abkhazian": 386, "avestan": 386, "afrikaan": 386, "ak": 386, "akan": 386, "amhar": 386, "assames": 386, "av": 386, "avar": 386, "aymara": 386, "azerbaijani": 386, "bashkir": 386, "bihari": 386, "bislama": 386, "bambara": 386, "bengali": 386, "tibetan": 386, "breton": 386, "ce": 386, "chechen": 386, "chamorro": 386, "cnr": 386, "corsican": 386, "cree": 386, "slavic": 386, "chuvash": 386, "welsh": 386, "dv": 386, "divehi": 386, "dzongkha": 386, "ew": 386, "en": 386, "english": 386, "eo": 386, "esperanto": 386, "eu": 386, "fa": 386, "persian": 386, "ff": 386, "fulah": 386, "finnish": 386, "fijian": 386, "faroes": 386, "fy": 386, "frisian": 386, "irish": 386, "gaelic": 386, "guaran\u00ed": 386, "gujarati": 386, "gv": 386, "manx": 386, "hausa": 386, "hebrew": 386, "hi": 386, "hindi": 386, "ho": 386, "hiri": 386, "motu": 386, "haitian": 386, "hy": 386, "hz": 386, "herero": 386, "ia": 386, "interlingua": 386, "auxiliari": 386, "indonesian": 386, "interlingu": 386, "ig": 386, "igbo": 386, "sichuan": 386, "yi": 386, "ik": 386, "inupiaq": 386, "ido": 386, "iu": 386, "inuktitut": 386, "japanes": 386, "jv": 386, "javanes": 386, "ka": 386, "kongo": 386, "kikuyu": 386, "kj": 386, "kwanyama": 386, "kk": 386, "kl": 386, "kalaallisut": 386, "khmer": 386, "kannada": 386, "ko": 386, "korean": 386, "kanuri": 386, "kashmiri": 386, "ku": 386, "kurdish": 386, "kv": 386, "komi": 386, "cornish": 386, "kirghiz": 386, "latin": 386, "luxembourgish": 386, "lg": 386, "ganda": 386, "limburgish": 386, "ln": 386, "lingala": 386, "lo": 386, "luba": 386, "katanga": 386, "malagasi": 386, "marshalles": 386, "m\u0101ori": 386, "malayalam": 386, "mongolian": 386, "moldavian": 386, "marathi": 386, "malai": 386, "maltes": 386, "burmes": 386, "nb": 386, "norwegian": 386, "bokm\u00e5l": 386, "nd": 386, "ndebel": 386, "nepali": 386, "ndonga": 386, "nynorsk": 386, "nv": 386, "navajo": 386, "ny": 386, "chichewa": 386, "oc": 386, "occitan": 386, "oj": 386, "ojibwa": 386, "oromo": 386, "oriya": 386, "o": 386, "ossetian": 386, "panjabi": 386, "pi": 386, "p\u0101li": 386, "pashto": 386, "quechua": 386, "rm": 386, "raeto": 386, "romanc": 386, "rn": 386, "kirundi": 386, "romanian": 386, "kinyarwanda": 386, "sanskrit": 386, "sardinian": 386, "sindhi": 386, "sami": 386, "sango": 386, "serbo": 386, "sinhales": 386, "samoan": 386, "shona": 386, "somali": 386, "sq": 386, "swati": 386, "sotho": 386, "su": 386, "sundanes": 386, "sw": 386, "swahili": 386, "ta": 386, "tamil": 386, "te": 386, "telugu": 386, "tajik": 386, "thai": 386, "tigrinya": 386, "turkmen": 386, "tagalog": 386, "tswana": 386, "turkish": 386, "tsonga": 386, "tatar": 386, "twi": 386, "ty": 386, "tahitian": 386, "uighur": 386, "ur": 386, "urdu": 386, "uzbek": 386, "venda": 386, "vietnames": 386, "vo": 386, "volap\u00fck": 386, "walloon": 386, "wo": 386, "wolof": 386, "xh": 386, "xhosa": 386, "yiddish": 386, "yo": 386, "yoruba": 386, "zhuang": 386, "zh": 386, "chines": 386, "zu": 386, "zulu": 386, "59430": 386, "v281a_r": 386, "465": 386, "wv": 386, "475": 386, "v282": 386, "q111": 386, "51092": 386, "1989": 386, "gweight": 386, "467": 386, "calibr": 386, "6924": 386, "gweight_no_edu": 386, "468": 386, "2849": 386, "dweight": 386, "469": 386, "10246": 386, "2423": 386, "pweight": 386, "popul": 386, "age_r3_weight": 386, "471": 386, "v225_weight": 386, "472": 386, "gender": 386, "v243_r_weight": 386, "473": 386, "criteria": 386, "slightli": 386, "whatev": 386, "creation": 386, "nearli": 386, "heurist": 386, "consult": 386, "lambda": 386, "express": 386, "criterion": 386, "abov": 386, "isnumer": 386, "again": 386, "anymor": 386, "desir": 386, "reason": 386, "now": 386, "still": 386, "columnselect": 386, "observ": 386, "perfectli": 386, "infer": 386, "obvious": 386, "sometim": 386, "aesthet": 386, "ok": 386, "fulli": 386, "soon": 386, "disk": 386, "modif": 386, "easi": 386, "benefici": 386, "persist": 386, "ignor": 386, "select_row": 386, "some_quest": 386, "42710": 386, "phenomenon": 386, "mayb": 386, "common": 386, "confus": 386, "later": 386, "try": 386, "explan": 386, "mandatori": 386, "o2": 386, "That": 386, "simplic": 386, "transpos": 386, "seem": 386, "particularli": 386, "interestingli": 386, "scratch": 386, "dynam": 386, "unfortun": 386, "To": 386, "trigger": 386, "accid": 386, "divis": 386, "situat": 386, "focu": 386, "const_answ": 386, "reflect": 386, "slight": 386, "variat": 386, "transit": 386, "extrem": 386, "inher": 386, "translat": 386, "readabl": 386, "level_label": 386, "edge_label_func": 386, "gca": 386, "draw_edge_label": 386, "_include_split": 386, "edge_label_func_for_meta_data": 386, "primarili": 386, "quickli": 386, "extern": 386, "correctli": 386, "touch": 386, "surfac": 386, "avail": 386, "entireti": 386}, "objects": {"": [[1, 0, 0, "-", "tangles"]], "tangles": [[2, 1, 1, "", "FTreeNode"], [17, 1, 1, "", "Tangle"], [34, 1, 1, "", "TangleSearchTree"], [47, 1, 1, "", "TangleSweep"], [54, 1, 1, "", "ToTEdge"], [56, 1, 1, "", "ToTNode"], [61, 1, 1, "", "TreeOfTangles"], [63, 1, 1, "", "UncrossingSweep"], [68, 0, 0, "-", "agreement"], [73, 4, 1, "", "agreement_func"], [74, 0, 0, "-", "analysis"], [81, 0, 0, "-", "convenience"], [199, 0, 0, "-", "guiding"], [203, 0, 0, "-", "search"], [209, 0, 0, "-", "separations"], [286, 4, 1, "", "uncross_distinguishers"], [287, 0, 0, "-", "util"]], "tangles.FTreeNode": [[3, 2, 1, "", "children"], [4, 2, 1, "", "copy"], [5, 2, 1, "", "copy_subtree"], [6, 2, 1, "", "copy_subtree_into_children"], [7, 2, 1, "", "detach"], [8, 2, 1, "", "from_indicator_matrix"], [9, 2, 1, "", "is_leaf"], [10, 2, 1, "", "leaves_in_subtree"], [11, 2, 1, "", "level"], [12, 2, 1, "", "level_in_subtree"], [13, 2, 1, "", "path_from_root_indicator"], [14, 2, 1, "", "set_left_child"], [15, 2, 1, "", "set_right_child"], [16, 2, 1, "", "to_indicator_matrix"]], "tangles.Tangle": [[18, 2, 1, "", "children"], [19, 2, 1, "", "copy"], [20, 2, 1, "", "copy_subtree"], [21, 2, 1, "", "copy_subtree_into_children"], [22, 2, 1, "", "detach"], [23, 2, 1, "", "equal_data"], [24, 2, 1, "", "from_indicator_matrix"], [25, 2, 1, "", "is_leaf"], [26, 2, 1, "", "leaves_in_subtree"], [27, 2, 1, "", "level"], [28, 2, 1, "", "level_in_subtree"], [29, 2, 1, "", "open"], [30, 2, 1, "", "path_from_root_indicator"], [31, 2, 1, "", "set_left_child"], [32, 2, 1, "", "set_right_child"], [33, 2, 1, "", "to_indicator_matrix"]], "tangles.TangleSearchTree": [[35, 2, 1, "", "get_efficient_distinguishers"], [36, 2, 1, "", "k_tangles"], [37, 3, 1, "", "limit"], [38, 2, 1, "", "load"], [39, 2, 1, "", "maximal_tangles"], [40, 3, 1, "", "number_of_separations"], [41, 3, 1, "", "root"], [42, 2, 1, "", "save"], [43, 2, 1, "", "search_tree"], [44, 3, 1, "", "sep_ids"], [45, 2, 1, "", "tangle_matrix"], [46, 2, 1, "", "tree_height_for_agreement"]], "tangles.TangleSweep": [[48, 2, 1, "", "append_separation"], [49, 2, 1, "", "greedy_search"], [50, 2, 1, "", "insert_separation"], [51, 2, 1, "", "sweep_below"], [52, 2, 1, "", "sweep_one"], [53, 3, 1, "", "tree"]], "tangles.ToTEdge": [[55, 2, 1, "", "other_end"]], "tangles.ToTNode": [[57, 2, 1, "", "degree"], [58, 2, 1, "", "is_leaf"], [59, 3, 1, "", "neighbours"], [60, 2, 1, "", "set_label"]], "tangles.TreeOfTangles": [[62, 2, 1, "", "any_node"]], "tangles.UncrossingSweep": [[64, 2, 1, "", "sweep_below"], [65, 2, 1, "", "sweep_one"], [66, 2, 1, "", "tangle_matrix"], [67, 3, 1, "", "tree"]], "tangles.agreement": [[69, 1, 1, "", "AgreementFunc"], [70, 1, 1, "", "AgreementFuncBitarray"], [71, 1, 1, "", "AgreementFuncBitarrayBips"], [72, 1, 1, "", "CalculateAgreement"]], "tangles.analysis": [[75, 4, 1, "", "coherence_levels"], [76, 4, 1, "", "complexity_levels"], [77, 4, 1, "", "hard_clustering_tuebingen"], [78, 4, 1, "", "soft_clustering_tuebingen"], [79, 4, 1, "", "tangle_score"], [80, 4, 1, "", "visibility"]], "tangles.convenience": [[82, 1, 1, "", "NominalVariableValues"], [86, 1, 1, "", "NumericalVariableValues"], [90, 1, 1, "", "OrderFunctionO1"], [91, 1, 1, "", "OrderFunctionO1biased"], [92, 1, 1, "", "OrderFunctionO2"], [93, 1, 1, "", "OrderFunctionO3"], [94, 1, 1, "", "OrderFunctionO4"], [95, 1, 1, "", "OrdinalVariableValues"], [99, 1, 1, "", "SimpleSurveyFeatureFactory"], [102, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesBothSides"], [105, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesImplicit"], [108, 1, 1, "", "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures"], [111, 1, 1, "", "Survey"], [137, 1, 1, "", "SurveyFeatureFactory"], [140, 1, 1, "", "SurveyFeatureFactoryDecorator"], [143, 1, 1, "", "SurveyFeatureFactory_CherryPicker"], [147, 1, 1, "", "SurveyTangles"], [157, 1, 1, "", "SurveyVariable"], [173, 1, 1, "", "SurveyVariableValues"], [177, 1, 1, "", "TangleSweepFeatureSys"], [188, 1, 1, "", "UnionOfIntervals"], [189, 4, 1, "", "binary_unique_value_features"], [190, 4, 1, "", "extensive_numericvar_features"], [191, 4, 1, "", "feats2seps_invalids_to_both_sides"], [192, 4, 1, "", "nominalvar_features_all_cats"], [193, 4, 1, "", "numericvar_features_inside_regular_bins"], [194, 4, 1, "", "numericvar_features_split_regular_ge"], [195, 4, 1, "", "ordinalvar_features_ge_all_splits"], [196, 4, 1, "", "search_tangles"], [197, 4, 1, "", "search_tangles_uncrossed"], [198, 4, 1, "", "simple_unique_value_features"]], "tangles.convenience.NominalVariableValues": [[83, 2, 1, "", "invert_op"], [84, 2, 1, "", "possible_values_representation"], [85, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.NumericalVariableValues": [[87, 2, 1, "", "invert_op"], [88, 2, 1, "", "possible_values_representation"], [89, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.OrdinalVariableValues": [[96, 2, 1, "", "invert_op"], [97, 2, 1, "", "possible_values_representation"], [98, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.SimpleSurveyFeatureFactory": [[100, 2, 1, "", "create_features"], [101, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides": [[103, 2, 1, "", "create_features"], [104, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit": [[106, 2, 1, "", "create_features"], [107, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures": [[109, 2, 1, "", "create_features"], [110, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.Survey": [[112, 2, 1, "", "__getitem__"], [113, 2, 1, "", "check_variables"], [114, 2, 1, "", "complete_rows"], [115, 2, 1, "", "copy"], [116, 2, 1, "", "count_number_of_unique_answers"], [117, 2, 1, "", "count_valid_answers_per_respondent"], [118, 2, 1, "", "guess_missing_variable_ranges"], [119, 2, 1, "", "guess_missing_variable_types"], [120, 2, 1, "", "interpret_column_selection"], [121, 2, 1, "", "load"], [122, 3, 1, "", "num_questions"], [123, 3, 1, "", "num_respondents"], [124, 2, 1, "", "replace_variable_names"], [125, 2, 1, "", "replace_variable_value_labels"], [126, 2, 1, "", "replace_variable_values"], [127, 2, 1, "", "save"], [128, 2, 1, "", "select_questions"], [129, 2, 1, "", "select_respondents"], [130, 2, 1, "", "set_pyreadstat_meta_data"], [131, 2, 1, "", "set_variable_labels"], [132, 2, 1, "", "set_variable_types"], [133, 2, 1, "", "set_variable_value_lists"], [134, 3, 1, "", "shape"], [135, 2, 1, "", "summarize"], [136, 2, 1, "", "variable_info"]], "tangles.convenience.SurveyFeatureFactory": [[138, 2, 1, "", "create_features"], [139, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyFeatureFactoryDecorator": [[141, 2, 1, "", "create_features"], [142, 2, 1, "", "create_features_for_single_col"]], "tangles.convenience.SurveyFeatureFactory_CherryPicker": [[144, 2, 1, "", "create_features"], [145, 2, 1, "", "create_features_for_single_col"], [146, 2, 1, "", "set_factoryfunc"]], "tangles.convenience.SurveyTangles": [[148, 2, 1, "", "change_agreement"], [149, 3, 1, "", "feature_system"], [150, 2, 1, "", "initialize_search"], [151, 2, 1, "", "ordered_metadata"], [152, 2, 1, "", "search"], [153, 2, 1, "", "sepcified_features"], [154, 2, 1, "", "tangle_matrix"], [155, 2, 1, "", "typical_answers"], [156, 3, 1, "", "valid_agreement_lower_bound"]], "tangles.convenience.SurveyVariable": [[158, 2, 1, "", "add_values"], [159, 2, 1, "", "all_values_as_list"], [160, 2, 1, "", "create_values"], [161, 2, 1, "", "invalid_values_as_list"], [162, 2, 1, "", "is_nominal_type"], [163, 2, 1, "", "is_numeric_type"], [164, 2, 1, "", "is_ordinal_type"], [165, 2, 1, "", "is_valid_type"], [166, 2, 1, "", "is_valid_type_name"], [167, 2, 1, "", "replace_values"], [168, 2, 1, "", "set_value_labels"], [169, 2, 1, "", "set_values"], [170, 2, 1, "", "to_row"], [171, 2, 1, "", "valid_values_as_list"], [172, 2, 1, "", "value_class"]], "tangles.convenience.SurveyVariableValues": [[174, 2, 1, "", "invert_op"], [175, 2, 1, "", "possible_values_representation"], [176, 2, 1, "", "update_values_for_specification"]], "tangles.convenience.TangleSweepFeatureSys": [[178, 3, 1, "", "all_oriented_sep_ids"], [179, 2, 1, "", "append_separation"], [180, 2, 1, "", "greedy_search"], [181, 2, 1, "", "insert_separation"], [182, 2, 1, "", "lower_agreement"], [183, 3, 1, "", "original_sep_ids"], [184, 2, 1, "", "sweep_below"], [185, 2, 1, "", "sweep_one"], [186, 2, 1, "", "tangle_matrix"], [187, 3, 1, "", "tree"]], "tangles.guiding": [[200, 4, 1, "", "get_tangle_by_path"], [201, 4, 1, "", "guided_tangle"], [202, 4, 1, "", "is_guiding"]], "tangles.search": [[204, 0, 0, "-", "extending_tangles"], [207, 0, 0, "-", "progress"]], "tangles.search.extending_tangles": [[205, 1, 1, "", "ExtendingTangles"]], "tangles.search.extending_tangles.ExtendingTangles": [[206, 2, 1, "", "extend_tangles"]], "tangles.search.progress": [[208, 1, 1, "", "DefaultProgressCallback"]], "tangles.separations": [[210, 1, 1, "", "FeatureSystem"], [231, 1, 1, "", "MetaData"], [233, 1, 1, "", "SetSeparationSystem"], [249, 1, 1, "", "SetSeparationSystemBase"], [265, 1, 1, "", "SetSeparationSystemOrderFunc"], [266, 0, 0, "-", "atomic_sets"], [271, 0, 0, "-", "finding"], [283, 0, 0, "-", "util"]], "tangles.separations.FeatureSystem": [[211, 2, 1, "", "__getitem__"], [212, 2, 1, "", "add_features"], [213, 2, 1, "", "add_seps"], [214, 2, 1, "", "all_feature_ids"], [215, 2, 1, "", "all_sep_ids"], [216, 2, 1, "", "assemble_meta_info"], [217, 2, 1, "", "compute_infimum"], [218, 2, 1, "", "crossing_seps"], [219, 2, 1, "", "feature_metadata"], [220, 2, 1, "", "get_corners"], [221, 2, 1, "", "get_feature_ids"], [222, 2, 1, "", "get_sep_ids"], [223, 2, 1, "", "infimum_of_two"], [224, 2, 1, "", "is_le"], [225, 2, 1, "", "is_nested"], [226, 2, 1, "", "is_subset"], [227, 2, 1, "", "metadata_matrix"], [228, 2, 1, "", "separation_metadata"], [229, 2, 1, "", "with_array"], [230, 2, 1, "", "with_sparse_array"]], "tangles.separations.MetaData": [[232, 2, 1, "", "append"]], "tangles.separations.SetSeparationSystem": [[234, 2, 1, "", "__getitem__"], [235, 2, 1, "", "add_seps"], [236, 2, 1, "", "all_sep_ids"], [237, 2, 1, "", "assemble_meta_info"], [238, 2, 1, "", "compute_infimum"], [239, 2, 1, "", "crossing_seps"], [240, 2, 1, "", "get_corners"], [241, 2, 1, "", "get_sep_ids"], [242, 2, 1, "", "infimum_of_two"], [243, 2, 1, "", "is_le"], [244, 2, 1, "", "is_nested"], [245, 2, 1, "", "metadata_matrix"], [246, 2, 1, "", "separation_metadata"], [247, 2, 1, "", "with_array"], [248, 2, 1, "", "with_sparse_array"]], "tangles.separations.SetSeparationSystemBase": [[250, 2, 1, "", "__getitem__"], [251, 2, 1, "", "add_seps"], [252, 2, 1, "", "all_sep_ids"], [253, 2, 1, "", "assemble_meta_info"], [254, 2, 1, "", "compute_infimum"], [255, 2, 1, "", "crossing_seps"], [256, 2, 1, "", "get_corners"], [257, 2, 1, "", "get_sep_ids"], [258, 2, 1, "", "infimum_of_two"], [259, 2, 1, "", "is_le"], [260, 2, 1, "", "is_nested"], [261, 2, 1, "", "metadata_matrix"], [262, 2, 1, "", "separation_metadata"], [263, 2, 1, "", "with_array"], [264, 2, 1, "", "with_sparse_array"]], "tangles.separations.atomic_sets": [[267, 4, 1, "", "atomic_set_indicators"], [268, 4, 1, "", "atomic_sets"], [269, 4, 1, "", "atomic_to_seps"], [270, 4, 1, "", "seps_to_atomic"]], "tangles.separations.finding": [[272, 1, 1, "", "OrderFuncDerivative"], [275, 4, 1, "", "add_all_corners_of_features"], [276, 4, 1, "", "min_S_T_cut"], [277, 4, 1, "", "minimize_cut"], [278, 4, 1, "", "nodal_domains"], [279, 4, 1, "", "pca_features"], [280, 4, 1, "", "random_features"], [281, 4, 1, "", "spectral_features"], [282, 4, 1, "", "spectral_features_splitted"]], "tangles.separations.finding.OrderFuncDerivative": [[273, 2, 1, "", "change_discrete_derivative"], [274, 2, 1, "", "discrete_derivative"]], "tangles.separations.util": [[284, 4, 1, "", "order_func_balance"], [285, 4, 1, "", "order_func_min_side_size"]], "tangles.util": [[288, 0, 0, "-", "entropy"], [295, 0, 0, "-", "graph"], [324, 0, 0, "-", "logic"], [336, 0, 0, "-", "matrix_order"], [344, 0, 0, "-", "preprocessing"], [348, 0, 0, "-", "tree"], [375, 0, 0, "-", "ui"]], "tangles.util.entropy": [[289, 4, 1, "", "colsplit_mutual_information"], [290, 4, 1, "", "datapointwise_information_gains"], [291, 4, 1, "", "entropy"], [292, 4, 1, "", "information_gain"], [293, 4, 1, "", "joint_entropy"], [294, 4, 1, "", "pairwise_mutual_information"]], "tangles.util.graph": [[296, 4, 1, "", "connected_component_indicators"], [297, 0, 0, "-", "cut_weight"], [310, 4, 1, "", "greedy_neighborhood"], [311, 4, 1, "", "greedy_neighborhood_old"], [312, 4, 1, "", "laplacian"], [313, 0, 0, "-", "minor"], [315, 4, 1, "", "modularity_matrix"], [316, 4, 1, "", "normalized_laplacian"], [317, 0, 0, "-", "similarity"]], "tangles.util.graph.cut_weight": [[298, 1, 1, "", "CutWeightOrder"], [301, 1, 1, "", "NCutOrder"], [304, 1, 1, "", "RatioCutOrder"], [307, 4, 1, "", "cut_weight_order"], [308, 4, 1, "", "ncut_order"], [309, 4, 1, "", "ratiocut_order"]], "tangles.util.graph.cut_weight.CutWeightOrder": [[299, 2, 1, "", "change_discrete_derivative"], [300, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.NCutOrder": [[302, 2, 1, "", "change_discrete_derivative"], [303, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.cut_weight.RatioCutOrder": [[305, 2, 1, "", "change_discrete_derivative"], [306, 2, 1, "", "discrete_derivative"]], "tangles.util.graph.minor": [[314, 4, 1, "", "contract_graph"]], "tangles.util.graph.similarity": [[318, 4, 1, "", "cosine_similarity"], [319, 4, 1, "", "cosine_similarity_graph_csr_data"], [320, 4, 1, "", "epsilon_neighborhood_graph"], [321, 4, 1, "", "grid_distance_graph"], [322, 4, 1, "", "image_to_similarity_graph"], [323, 4, 1, "", "k_nearest_neighbors"]], "tangles.util.logic": [[325, 1, 1, "", "ConjunctiveNormalForm"], [326, 1, 1, "", "DisjunctiveNormalForm"], [327, 1, 1, "", "LogicTerm"], [328, 1, 1, "", "TextTerm"], [329, 4, 1, "", "append"], [330, 4, 1, "", "distribute"], [331, 0, 0, "-", "sep_to_term"], [333, 4, 1, "", "simplify"], [334, 0, 0, "-", "term"]], "tangles.util.logic.sep_to_term": [[332, 1, 1, "", "RecursionLogic"]], "tangles.util.logic.term": [[335, 1, 1, "", "SemanticTextTerm"]], "tangles.util.matrix_order": [[337, 1, 1, "", "MatrixOrderSVD"], [338, 4, 1, "", "covariance_order"], [339, 4, 1, "", "logdet_order"], [340, 4, 1, "", "margin_order_matrix"], [341, 4, 1, "", "matrix_order"], [342, 4, 1, "", "o_five"], [343, 4, 1, "", "o_seven"]], "tangles.util.preprocessing": [[345, 4, 1, "", "balance"], [346, 4, 1, "", "normalize_length"], [347, 4, 1, "", "standardize"]], "tangles.util.tree": [[349, 1, 1, "", "BinTreeNetworkX"], [356, 1, 1, "", "BinTreeNode"], [371, 1, 1, "", "GraphNode"], [372, 1, 1, "", "TreeNode"], [373, 4, 1, "", "plot_tree"], [374, 4, 1, "", "print_node_label"]], "tangles.util.tree.BinTreeNetworkX": [[350, 2, 1, "", "draw"], [351, 2, 1, "", "get_ids_from_label"], [352, 2, 1, "", "get_label"], [353, 3, 1, "", "graph"], [354, 2, 1, "", "relabel"], [355, 2, 1, "", "tst_layout"]], "tangles.util.tree.BinTreeNode": [[357, 2, 1, "", "children"], [358, 2, 1, "", "copy"], [359, 2, 1, "", "copy_subtree"], [360, 2, 1, "", "copy_subtree_into_children"], [361, 2, 1, "", "detach"], [362, 2, 1, "", "from_indicator_matrix"], [363, 2, 1, "", "is_leaf"], [364, 2, 1, "", "leaves_in_subtree"], [365, 2, 1, "", "level"], [366, 2, 1, "", "level_in_subtree"], [367, 2, 1, "", "path_from_root_indicator"], [368, 2, 1, "", "set_left_child"], [369, 2, 1, "", "set_right_child"], [370, 2, 1, "", "to_indicator_matrix"]], "tangles.util.ui": [[376, 1, 1, "", "SplitGraph"], [380, 1, 1, "", "XYPicker"], [383, 4, 1, "", "plot_annotated"], [384, 4, 1, "", "wrap_annotation_func_ax"]], "tangles.util.ui.SplitGraph": [[377, 2, 1, "", "draw_ellipses"], [378, 2, 1, "", "draw_side_and_boundary"], [379, 2, 1, "", "draw_stacked_circles"]], "tangles.util.ui.XYPicker": [[381, 2, 1, "", "show"], [382, 2, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"tangl": [0, 1, 17, 68, 74, 81, 199, 203, 204, 207, 209, 266, 271, 283, 287, 288, 295, 297, 313, 317, 324, 331, 334, 336, 344, 348, 375, 386], "softwar": 0, "document": 0, "ftreenod": 2, "children": [3, 18, 357], "return": [3, 5, 8, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 26, 27, 28, 30, 33, 35, 36, 37, 38, 39, 43, 45, 46, 48, 51, 52, 55, 57, 58, 62, 64, 65, 66, 73, 75, 76, 77, 78, 79, 80, 83, 87, 96, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 114, 117, 120, 122, 123, 128, 129, 134, 135, 136, 138, 139, 141, 142, 144, 145, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 174, 179, 184, 185, 186, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 286, 289, 290, 291, 293, 294, 296, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 329, 330, 338, 339, 340, 341, 345, 346, 347, 351, 352, 353, 355, 357, 359, 362, 364, 365, 366, 367, 370, 379, 384], "copi": [4, 19, 115, 358], "copy_subtre": [5, 20, 359], "copy_subtree_into_children": [6, 21, 360], "detach": [7, 22, 361], "from_indicator_matrix": [8, 24, 362], "paramet": [8, 10, 12, 14, 15, 16, 24, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 43, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 64, 66, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 166, 167, 168, 169, 173, 174, 175, 176, 179, 180, 181, 182, 184, 186, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 286, 289, 290, 291, 293, 294, 296, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 329, 330, 338, 339, 340, 341, 345, 346, 347, 349, 351, 352, 354, 355, 356, 362, 364, 366, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 383, 384], "is_leaf": [9, 25, 58, 363], "leaves_in_subtre": [10, 26, 364], "level": [11, 27, 365], "level_in_subtre": [12, 28, 366], "path_from_root_ind": [13, 30, 367], "set_left_child": [14, 31, 368], "set_right_child": [15, 32, 369], "to_indicator_matrix": [16, 33, 370], "attribut": [17, 99, 140, 147, 177, 356, 380], "equal_data": 23, "open": 29, "tanglesearchtre": 34, "get_efficient_distinguish": 35, "k_tangl": 36, "limit": 37, "load": [38, 121], "maximal_tangl": 39, "number_of_separ": 40, "root": 41, "save": [42, 127], "search_tre": 43, "sep_id": 44, "tangle_matrix": [45, 66, 154, 186], "tree_height_for_agr": 46, "tanglesweep": 47, "append_separ": [48, 179], "greedy_search": [49, 180], "insert_separ": [50, 181], "sweep_below": [51, 64, 184], "sweep_on": [52, 65, 185], "tree": [53, 67, 187, 348], "totedg": 54, "other_end": 55, "totnod": 56, "degre": 57, "neighbour": 59, "set_label": 60, "treeoftangl": 61, "any_nod": 62, "uncrossingsweep": 63, "agreement": 68, "agreementfunc": 69, "agreementfuncbitarrai": 70, "agreementfuncbitarraybip": 71, "calculateagr": 72, "agreement_func": 73, "analysi": [74, 386], "coherence_level": 75, "complexity_level": 76, "hard_clustering_tuebingen": 77, "soft_clustering_tuebingen": 78, "tangle_scor": 79, "visibl": 80, "conveni": 81, "nominalvariablevalu": 82, "invert_op": [83, 87, 96, 174], "possible_values_represent": [84, 88, 97, 175], "update_values_for_specif": [85, 89, 98, 176], "numericalvariablevalu": 86, "orderfunctiono1": 90, "orderfunctiono1bias": 91, "orderfunctiono2": 92, "orderfunctiono3": 93, "orderfunctiono4": 94, "ordinalvariablevalu": 95, "simplesurveyfeaturefactori": 99, "create_featur": [100, 103, 106, 109, 138, 141, 144], "create_features_for_single_col": [101, 104, 107, 110, 139, 142, 145], "simplesurveyfeaturefactory_missingvaluesbothsid": 102, "simplesurveyfeaturefactory_missingvaluesimplicit": 105, "simplesurveyfeaturefactory_missingvaluesownfeatur": 108, "survei": [111, 386], "__getitem__": [112, 211, 234, 250], "check_vari": 113, "complete_row": 114, "count_number_of_unique_answ": 116, "count_valid_answers_per_respond": 117, "guess_missing_variable_rang": 118, "guess_missing_variable_typ": 119, "interpret_column_select": 120, "num_quest": 122, "num_respond": 123, "replace_variable_nam": 124, "replace_variable_value_label": 125, "replace_variable_valu": 126, "select_quest": 128, "select_respond": 129, "set_pyreadstat_meta_data": 130, "set_variable_label": 131, "set_variable_typ": 132, "set_variable_value_list": 133, "shape": 134, "summar": 135, "variable_info": 136, "surveyfeaturefactori": 137, "surveyfeaturefactorydecor": 140, "surveyfeaturefactory_cherrypick": 143, "set_factoryfunc": 146, "surveytangl": 147, "change_agr": 148, "feature_system": 149, "initialize_search": 150, "ordered_metadata": 151, "search": [152, 203, 204, 207], "sepcified_featur": 153, "typical_answ": 155, "valid_agreement_lower_bound": 156, "surveyvari": 157, "add_valu": 158, "all_values_as_list": 159, "create_valu": 160, "invalid_values_as_list": 161, "is_nominal_typ": 162, "is_numeric_typ": 163, "is_ordinal_typ": 164, "is_valid_typ": 165, "is_valid_type_nam": 166, "replace_valu": 167, "set_value_label": 168, "set_valu": 169, "to_row": 170, "valid_values_as_list": 171, "value_class": 172, "surveyvariablevalu": 173, "tanglesweepfeaturesi": 177, "all_oriented_sep_id": 178, "lower_agr": 182, "original_sep_id": 183, "unionofinterv": 188, "binary_unique_value_featur": 189, "extensive_numericvar_featur": 190, "feats2seps_invalids_to_both_sid": 191, "nominalvar_features_all_cat": 192, "numericvar_features_inside_regular_bin": 193, "numericvar_features_split_regular_g": 194, "ordinalvar_features_ge_all_split": 195, "search_tangl": 196, "search_tangles_uncross": 197, "simple_unique_value_featur": 198, "guid": 199, "get_tangle_by_path": 200, "guided_tangl": 201, "is_guid": 202, "extending_tangl": 204, "extendingtangl": 205, "extend_tangl": 206, "progress": 207, "defaultprogresscallback": 208, "separ": [209, 266, 271, 283], "featuresystem": 210, "add_featur": 212, "add_sep": [213, 235, 251], "all_feature_id": 214, "all_sep_id": [215, 236, 252], "assemble_meta_info": [216, 237, 253], "compute_infimum": [217, 238, 254], "crossing_sep": [218, 239, 255], "feature_metadata": 219, "get_corn": [220, 240, 256], "get_feature_id": 221, "get_sep_id": [222, 241, 257], "infimum_of_two": [223, 242, 258], "is_l": [224, 243, 259], "is_nest": [225, 244, 260], "is_subset": 226, "metadata_matrix": [227, 245, 261], "separation_metadata": [228, 246, 262], "with_arrai": [229, 247, 263], "with_sparse_arrai": [230, 248, 264], "metadata": 231, "append": [232, 329], "setseparationsystem": 233, "setseparationsystembas": 249, "setseparationsystemorderfunc": 265, "atomic_set": [266, 268], "atomic_set_ind": 267, "atomic_to_sep": 269, "seps_to_atom": 270, "find": 271, "orderfuncderiv": 272, "change_discrete_deriv": [273, 299, 302, 305], "discrete_deriv": [274, 300, 303, 306], "add_all_corners_of_featur": 275, "min_s_t_cut": 276, "minimize_cut": 277, "nodal_domain": 278, "pca_featur": 279, "random_featur": 280, "spectral_featur": 281, "spectral_features_split": 282, "util": [283, 287, 288, 295, 297, 313, 317, 324, 331, 334, 336, 344, 348, 375], "order_func_bal": 284, "order_func_min_side_s": 285, "uncross_distinguish": 286, "entropi": [288, 291], "colsplit_mutual_inform": 289, "datapointwise_information_gain": 290, "information_gain": 292, "joint_entropi": 293, "pairwise_mutual_inform": 294, "graph": [295, 297, 313, 317, 353], "connected_component_ind": 296, "cut_weight": 297, "cutweightord": 298, "ncutord": 301, "ratiocutord": 304, "cut_weight_ord": 307, "ncut_ord": 308, "ratiocut_ord": 309, "greedy_neighborhood": 310, "greedy_neighborhood_old": 311, "laplacian": 312, "minor": 313, "contract_graph": 314, "modularity_matrix": 315, "normalized_laplacian": 316, "similar": 317, "cosine_similar": 318, "cosine_similarity_graph_csr_data": 319, "epsilon_neighborhood_graph": 320, "grid_distance_graph": 321, "image_to_similarity_graph": 322, "k_nearest_neighbor": 323, "logic": [324, 331, 334], "conjunctivenormalform": 325, "disjunctivenormalform": 326, "logicterm": 327, "textterm": 328, "distribut": 330, "sep_to_term": 331, "recursionlog": 332, "simplifi": 333, "term": 334, "semantictextterm": 335, "matrix_ord": [336, 341], "matrixordersvd": 337, "member": 337, "covariance_ord": 338, "logdet_ord": 339, "margin_order_matrix": 340, "o_fiv": 342, "o_seven": 343, "preprocess": 344, "balanc": 345, "normalize_length": 346, "standard": 347, "bintreenetworkx": 349, "draw": 350, "get_ids_from_label": 351, "get_label": 352, "relabel": 354, "tst_layout": 355, "bintreenod": 356, "graphnod": 371, "treenod": 372, "plot_tre": 373, "print_node_label": 374, "ui": 375, "splitgraph": 376, "draw_ellips": 377, "draw_side_and_boundari": 378, "draw_stacked_circl": 379, "xypick": 380, "show": 381, "updat": 382, "plot_annot": 383, "wrap_annotation_func_ax": 384, "refer": 385, "mindset": 386, "prepar": 386, "clean": 386, "select": 386, "data": 386, "A": 386, "simpl": 386, "summari": 386, "tutori": 387}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Tangle Software Documentation": [[0, "tangle-software-documentation"]], "tangles": [[1, "module-tangles"]], "FTreeNode": [[2, "ftreenode"]], "children": [[3, "children"], [18, "children"], [357, "children"]], "Returns": [[3, "returns"], [5, "returns"], [8, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [16, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [23, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [57, "returns"], [58, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [73, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [83, "returns"], [87, "returns"], [96, "returns"], [100, "returns"], [101, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [109, "returns"], [110, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [117, "returns"], [120, "returns"], [122, "returns"], [123, "returns"], [128, "returns"], [129, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [144, "returns"], [145, "returns"], [149, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [170, "returns"], [171, "returns"], [174, "returns"], [179, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [189, "returns"], [190, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [286, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [293, "returns"], [294, "returns"], [296, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [329, "returns"], [330, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [345, "returns"], [346, "returns"], [347, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [355, "returns"], [357, "returns"], [359, "returns"], [362, "returns"], [364, "returns"], [365, "returns"], [366, "returns"], [367, "returns"], [370, "returns"], [379, "returns"], [384, "returns"]], "copy": [[4, "copy"], [19, "copy"], [115, "copy"], [358, "copy"]], "copy_subtree": [[5, "copy-subtree"], [20, "copy-subtree"], [359, "copy-subtree"]], "copy_subtree_into_children": [[6, "copy-subtree-into-children"], [21, "copy-subtree-into-children"], [360, "copy-subtree-into-children"]], "detach": [[7, "detach"], [22, "detach"], [361, "detach"]], "from_indicator_matrix": [[8, "from-indicator-matrix"], [24, "from-indicator-matrix"], [362, "from-indicator-matrix"]], "Parameters": [[8, "parameters"], [10, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [24, "parameters"], [26, "parameters"], [28, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [39, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [55, "parameters"], [60, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [73, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [106, "parameters"], [107, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [148, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [157, "parameters"], [158, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [184, "parameters"], [186, "parameters"], [189, "parameters"], [190, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [205, "parameters"], [206, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [232, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [250, "parameters"], [251, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [286, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [293, "parameters"], [294, "parameters"], [296, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [329, "parameters"], [330, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [349, "parameters"], [351, "parameters"], [352, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [362, "parameters"], [364, "parameters"], [366, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [373, "parameters"], [374, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [383, "parameters"], [384, "parameters"]], "is_leaf": [[9, "is-leaf"], [25, "is-leaf"], [58, "is-leaf"], [363, "is-leaf"]], "leaves_in_subtree": [[10, "leaves-in-subtree"], [26, "leaves-in-subtree"], [364, "leaves-in-subtree"]], "level": [[11, "level"], [27, "level"], [365, "level"]], "level_in_subtree": [[12, "level-in-subtree"], [28, "level-in-subtree"], [366, "level-in-subtree"]], "path_from_root_indicator": [[13, "path-from-root-indicator"], [30, "path-from-root-indicator"], [367, "path-from-root-indicator"]], "set_left_child": [[14, "set-left-child"], [31, "set-left-child"], [368, "set-left-child"]], "set_right_child": [[15, "set-right-child"], [32, "set-right-child"], [369, "set-right-child"]], "to_indicator_matrix": [[16, "to-indicator-matrix"], [33, "to-indicator-matrix"], [370, "to-indicator-matrix"]], "Tangle": [[17, "tangle"]], "Attributes": [[17, "attributes"], [99, "attributes"], [140, "attributes"], [147, "attributes"], [177, "attributes"], [356, "attributes"], [380, "attributes"]], "equal_data": [[23, "equal-data"]], "open": [[29, "open"]], "TangleSearchTree": [[34, "tanglesearchtree"]], "get_efficient_distinguishers": [[35, "get-efficient-distinguishers"]], "k_tangles": [[36, "k-tangles"]], "limit": [[37, "limit"]], "load": [[38, "load"], [121, "load"]], "maximal_tangles": [[39, "maximal-tangles"]], "number_of_separations": [[40, "number-of-separations"]], "root": [[41, "root"]], "save": [[42, "save"], [127, "save"]], "search_tree": [[43, "search-tree"]], "sep_ids": [[44, "sep-ids"]], "tangle_matrix": [[45, "tangle-matrix"], [66, "tangle-matrix"], [154, "tangle-matrix"], [186, "tangle-matrix"]], "tree_height_for_agreement": [[46, "tree-height-for-agreement"]], "TangleSweep": [[47, "tanglesweep"]], "append_separation": [[48, "append-separation"], [179, "append-separation"]], "greedy_search": [[49, "greedy-search"], [180, "greedy-search"]], "insert_separation": [[50, "insert-separation"], [181, "insert-separation"]], "sweep_below": [[51, "sweep-below"], [64, "sweep-below"], [184, "sweep-below"]], "sweep_one": [[52, "sweep-one"], [65, "sweep-one"], [185, "sweep-one"]], "tree": [[53, "tree"], [67, "tree"], [187, "tree"]], "ToTEdge": [[54, "totedge"]], "other_end": [[55, "other-end"]], "ToTNode": [[56, "totnode"]], "degree": [[57, "degree"]], "neighbours": [[59, "neighbours"]], "set_label": [[60, "set-label"]], "TreeOfTangles": [[61, "treeoftangles"]], "any_node": [[62, "any-node"]], "UncrossingSweep": [[63, "uncrossingsweep"]], "tangles.agreement": [[68, "module-tangles.agreement"]], "AgreementFunc": [[69, "agreementfunc"]], "AgreementFuncBitarray": [[70, "agreementfuncbitarray"]], "AgreementFuncBitarrayBips": [[71, "agreementfuncbitarraybips"]], "CalculateAgreement": [[72, "calculateagreement"]], "agreement_func": [[73, "agreement-func"]], "tangles.analysis": [[74, "module-tangles.analysis"]], "coherence_levels": [[75, "coherence-levels"]], "complexity_levels": [[76, "complexity-levels"]], "hard_clustering_tuebingen": [[77, "hard-clustering-tuebingen"]], "soft_clustering_tuebingen": [[78, "soft-clustering-tuebingen"]], "tangle_score": [[79, "tangle-score"]], "visibility": [[80, "visibility"]], "tangles.convenience": [[81, "module-tangles.convenience"]], "NominalVariableValues": [[82, "nominalvariablevalues"]], "invert_op": [[83, "invert-op"], [87, "invert-op"], [96, "invert-op"], [174, "invert-op"]], "Parameter": [[83, "parameter"], [87, "parameter"], [96, "parameter"], [125, "parameter"], [174, "parameter"], [182, "parameter"]], "possible_values_representation": [[84, "possible-values-representation"], [88, "possible-values-representation"], [97, "possible-values-representation"], [175, "possible-values-representation"]], "update_values_for_specification": [[85, "update-values-for-specification"], [89, "update-values-for-specification"], [98, "update-values-for-specification"], [176, "update-values-for-specification"]], "NumericalVariableValues": [[86, "numericalvariablevalues"]], "OrderFunctionO1": [[90, "orderfunctiono1"]], "OrderFunctionO1biased": [[91, "orderfunctiono1biased"]], "OrderFunctionO2": [[92, "orderfunctiono2"]], "OrderFunctionO3": [[93, "orderfunctiono3"]], "OrderFunctionO4": [[94, "orderfunctiono4"]], "OrdinalVariableValues": [[95, "ordinalvariablevalues"]], "SimpleSurveyFeatureFactory": [[99, "simplesurveyfeaturefactory"]], "create_features": [[100, "create-features"], [103, "create-features"], [106, "create-features"], [109, "create-features"], [138, "create-features"], [141, "create-features"], [144, "create-features"]], "create_features_for_single_col": [[101, "create-features-for-single-col"], [104, "create-features-for-single-col"], [107, "create-features-for-single-col"], [110, "create-features-for-single-col"], [139, "create-features-for-single-col"], [142, "create-features-for-single-col"], [145, "create-features-for-single-col"]], "SimpleSurveyFeatureFactory_MissingValuesBothSides": [[102, "simplesurveyfeaturefactory-missingvaluesbothsides"]], "SimpleSurveyFeatureFactory_MissingValuesImplicit": [[105, "simplesurveyfeaturefactory-missingvaluesimplicit"]], "SimpleSurveyFeatureFactory_MissingValuesOwnFeatures": [[108, "simplesurveyfeaturefactory-missingvaluesownfeatures"]], "Survey": [[111, "survey"]], "__getitem__": [[112, "getitem"], [211, "getitem"], [234, "getitem"], [250, "getitem"]], "check_variables": [[113, "check-variables"]], "complete_rows": [[114, "complete-rows"]], "count_number_of_unique_answers": [[116, "count-number-of-unique-answers"]], "count_valid_answers_per_respondent": [[117, "count-valid-answers-per-respondent"]], "guess_missing_variable_ranges": [[118, "guess-missing-variable-ranges"]], "guess_missing_variable_types": [[119, "guess-missing-variable-types"]], "interpret_column_selection": [[120, "interpret-column-selection"]], "num_questions": [[122, "num-questions"]], "num_respondents": [[123, "num-respondents"]], "replace_variable_names": [[124, "replace-variable-names"]], "replace_variable_value_labels": [[125, "replace-variable-value-labels"]], "replace_variable_values": [[126, "replace-variable-values"]], "select_questions": [[128, "select-questions"]], "select_respondents": [[129, "select-respondents"]], "set_pyreadstat_meta_data": [[130, "set-pyreadstat-meta-data"]], "set_variable_labels": [[131, "set-variable-labels"]], "set_variable_types": [[132, "set-variable-types"]], "set_variable_value_lists": [[133, "set-variable-value-lists"]], "shape": [[134, "shape"]], "summarize": [[135, "summarize"]], "variable_info": [[136, "variable-info"]], "SurveyFeatureFactory": [[137, "surveyfeaturefactory"]], "SurveyFeatureFactoryDecorator": [[140, "surveyfeaturefactorydecorator"]], "SurveyFeatureFactory_CherryPicker": [[143, "surveyfeaturefactory-cherrypicker"]], "set_factoryfunc": [[146, "set-factoryfunc"]], "SurveyTangles": [[147, "surveytangles"]], "change_agreement": [[148, "change-agreement"]], "feature_system": [[149, "feature-system"]], "initialize_search": [[150, "initialize-search"]], "ordered_metadata": [[151, "ordered-metadata"]], "search": [[152, "search"]], "sepcified_features": [[153, "sepcified-features"]], "typical_answers": [[155, "typical-answers"]], "valid_agreement_lower_bound": [[156, "valid-agreement-lower-bound"]], "SurveyVariable": [[157, "surveyvariable"]], "add_values": [[158, "add-values"]], "all_values_as_list": [[159, "all-values-as-list"]], "create_values": [[160, "create-values"]], "invalid_values_as_list": [[161, "invalid-values-as-list"]], "is_nominal_type": [[162, "is-nominal-type"]], "is_numeric_type": [[163, "is-numeric-type"]], "is_ordinal_type": [[164, "is-ordinal-type"]], "is_valid_type": [[165, "is-valid-type"]], "is_valid_type_name": [[166, "is-valid-type-name"]], "replace_values": [[167, "replace-values"]], "set_value_labels": [[168, "set-value-labels"]], "set_values": [[169, "set-values"]], "to_row": [[170, "to-row"]], "valid_values_as_list": [[171, "valid-values-as-list"]], "value_class": [[172, "value-class"]], "SurveyVariableValues": [[173, "surveyvariablevalues"]], "TangleSweepFeatureSys": [[177, "tanglesweepfeaturesys"]], "all_oriented_sep_ids": [[178, "all-oriented-sep-ids"]], "lower_agreement": [[182, "lower-agreement"]], "original_sep_ids": [[183, "original-sep-ids"]], "UnionOfIntervals": [[188, "unionofintervals"]], "binary_unique_value_features": [[189, "binary-unique-value-features"]], "extensive_numericvar_features": [[190, "extensive-numericvar-features"]], "feats2seps_invalids_to_both_sides": [[191, "feats2seps-invalids-to-both-sides"]], "nominalvar_features_all_cats": [[192, "nominalvar-features-all-cats"]], "numericvar_features_inside_regular_bins": [[193, "numericvar-features-inside-regular-bins"]], "numericvar_features_split_regular_ge": [[194, "numericvar-features-split-regular-ge"]], "ordinalvar_features_ge_all_splits": [[195, "ordinalvar-features-ge-all-splits"]], "search_tangles": [[196, "search-tangles"]], "search_tangles_uncrossed": [[197, "search-tangles-uncrossed"]], "simple_unique_value_features": [[198, "simple-unique-value-features"]], "tangles.guiding": [[199, "module-tangles.guiding"]], "get_tangle_by_path": [[200, "get-tangle-by-path"]], "guided_tangle": [[201, "guided-tangle"]], "is_guiding": [[202, "is-guiding"]], "tangles.search": [[203, "module-tangles.search"]], "tangles.search.extending_tangles": [[204, "module-tangles.search.extending_tangles"]], "ExtendingTangles": [[205, "extendingtangles"]], "extend_tangles": [[206, "extend-tangles"]], "tangles.search.progress": [[207, "module-tangles.search.progress"]], "DefaultProgressCallback": [[208, "defaultprogresscallback"]], "tangles.separations": [[209, "module-tangles.separations"]], "FeatureSystem": [[210, "featuresystem"]], "add_features": [[212, "add-features"]], "add_seps": [[213, "add-seps"], [235, "add-seps"], [251, "add-seps"]], "all_feature_ids": [[214, "all-feature-ids"]], "all_sep_ids": [[215, "all-sep-ids"], [236, "all-sep-ids"], [252, "all-sep-ids"]], "assemble_meta_info": [[216, "assemble-meta-info"], [237, "assemble-meta-info"], [253, "assemble-meta-info"]], "compute_infimum": [[217, "compute-infimum"], [238, "compute-infimum"], [254, "compute-infimum"]], "crossing_seps": [[218, "crossing-seps"], [239, "crossing-seps"], [255, "crossing-seps"]], "feature_metadata": [[219, "feature-metadata"]], "get_corners": [[220, "get-corners"], [240, "get-corners"], [256, "get-corners"]], "get_feature_ids": [[221, "get-feature-ids"]], "get_sep_ids": [[222, "get-sep-ids"], [241, "get-sep-ids"], [257, "get-sep-ids"]], "infimum_of_two": [[223, "infimum-of-two"], [242, "infimum-of-two"], [258, "infimum-of-two"]], "is_le": [[224, "is-le"], [243, "is-le"], [259, "is-le"]], "is_nested": [[225, "is-nested"], [244, "is-nested"], [260, "is-nested"]], "is_subset": [[226, "is-subset"]], "metadata_matrix": [[227, "metadata-matrix"], [245, "metadata-matrix"], [261, "metadata-matrix"]], "separation_metadata": [[228, "separation-metadata"], [246, "separation-metadata"], [262, "separation-metadata"]], "with_array": [[229, "with-array"], [247, "with-array"], [263, "with-array"]], "with_sparse_array": [[230, "with-sparse-array"], [248, "with-sparse-array"], [264, "with-sparse-array"]], "MetaData": [[231, "metadata"]], "append": [[232, "append"], [329, "append"]], "SetSeparationSystem": [[233, "setseparationsystem"]], "SetSeparationSystemBase": [[249, "setseparationsystembase"]], "SetSeparationSystemOrderFunc": [[265, "setseparationsystemorderfunc"]], "tangles.separations.atomic_sets": [[266, "module-tangles.separations.atomic_sets"]], "atomic_set_indicators": [[267, "atomic-set-indicators"]], "atomic_sets": [[268, "atomic-sets"]], "atomic_to_seps": [[269, "atomic-to-seps"]], "seps_to_atomic": [[270, "seps-to-atomic"]], "tangles.separations.finding": [[271, "module-tangles.separations.finding"]], "OrderFuncDerivative": [[272, "orderfuncderivative"]], "change_discrete_derivative": [[273, "change-discrete-derivative"], [299, "change-discrete-derivative"], [302, "change-discrete-derivative"], [305, "change-discrete-derivative"]], "discrete_derivative": [[274, "discrete-derivative"], [300, "discrete-derivative"], [303, "discrete-derivative"], [306, "discrete-derivative"]], "add_all_corners_of_features": [[275, "add-all-corners-of-features"]], "min_S_T_cut": [[276, "min-s-t-cut"]], "minimize_cut": [[277, "minimize-cut"]], "nodal_domains": [[278, "nodal-domains"]], "pca_features": [[279, "pca-features"]], "random_features": [[280, "random-features"]], "spectral_features": [[281, "spectral-features"]], "spectral_features_splitted": [[282, "spectral-features-splitted"]], "tangles.separations.util": [[283, "module-tangles.separations.util"]], "order_func_balance": [[284, "order-func-balance"]], "order_func_min_side_size": [[285, "order-func-min-side-size"]], "uncross_distinguishers": [[286, "uncross-distinguishers"]], "tangles.util": [[287, "module-tangles.util"]], "tangles.util.entropy": [[288, "module-tangles.util.entropy"]], "colsplit_mutual_information": [[289, "colsplit-mutual-information"]], "datapointwise_information_gains": [[290, "datapointwise-information-gains"]], "entropy": [[291, "entropy"]], "information_gain": [[292, "information-gain"]], "joint_entropy": [[293, "joint-entropy"]], "pairwise_mutual_information": [[294, "pairwise-mutual-information"]], "tangles.util.graph": [[295, "module-tangles.util.graph"]], "connected_component_indicators": [[296, "connected-component-indicators"]], "tangles.util.graph.cut_weight": [[297, "module-tangles.util.graph.cut_weight"]], "CutWeightOrder": [[298, "cutweightorder"]], "NCutOrder": [[301, "ncutorder"]], "RatioCutOrder": [[304, "ratiocutorder"]], "cut_weight_order": [[307, "cut-weight-order"]], "ncut_order": [[308, "ncut-order"]], "ratiocut_order": [[309, "ratiocut-order"]], "greedy_neighborhood": [[310, "greedy-neighborhood"]], "greedy_neighborhood_old": [[311, "greedy-neighborhood-old"]], "laplacian": [[312, "laplacian"]], "tangles.util.graph.minor": [[313, "module-tangles.util.graph.minor"]], "contract_graph": [[314, "contract-graph"]], "modularity_matrix": [[315, "modularity-matrix"]], "normalized_laplacian": [[316, "normalized-laplacian"]], "tangles.util.graph.similarity": [[317, "module-tangles.util.graph.similarity"]], "cosine_similarity": [[318, "cosine-similarity"]], "cosine_similarity_graph_csr_data": [[319, "cosine-similarity-graph-csr-data"]], "epsilon_neighborhood_graph": [[320, "epsilon-neighborhood-graph"]], "grid_distance_graph": [[321, "grid-distance-graph"]], "image_to_similarity_graph": [[322, "image-to-similarity-graph"]], "k_nearest_neighbors": [[323, "k-nearest-neighbors"]], "tangles.util.logic": [[324, "module-tangles.util.logic"]], "ConjunctiveNormalForm": [[325, "conjunctivenormalform"]], "DisjunctiveNormalForm": [[326, "disjunctivenormalform"]], "LogicTerm": [[327, "logicterm"]], "TextTerm": [[328, "textterm"]], "distribute": [[330, "distribute"]], "tangles.util.logic.sep_to_term": [[331, "module-tangles.util.logic.sep_to_term"]], "RecursionLogic": [[332, "recursionlogic"]], "simplify": [[333, "simplify"]], "tangles.util.logic.term": [[334, "module-tangles.util.logic.term"]], "SemanticTextTerm": [[335, "semantictextterm"]], "tangles.util.matrix_order": [[336, "module-tangles.util.matrix_order"]], "MatrixOrderSVD": [[337, "matrixordersvd"]], "Members": [[337, "members"]], "covariance_order": [[338, "covariance-order"]], "logdet_order": [[339, "logdet-order"]], "margin_order_matrix": [[340, "margin-order-matrix"]], "matrix_order": [[341, "matrix-order"]], "o_five": [[342, "o-five"]], "o_seven": [[343, "o-seven"]], "tangles.util.preprocessing": [[344, "module-tangles.util.preprocessing"]], "balance": [[345, "balance"]], "normalize_length": [[346, "normalize-length"]], "standardize": [[347, "standardize"]], "tangles.util.tree": [[348, "module-tangles.util.tree"]], "BinTreeNetworkX": [[349, "bintreenetworkx"]], "draw": [[350, "draw"]], "get_ids_from_label": [[351, "get-ids-from-label"]], "get_label": [[352, "get-label"]], "graph": [[353, "graph"]], "relabel": [[354, "relabel"]], "tst_layout": [[355, "tst-layout"]], "BinTreeNode": [[356, "bintreenode"]], "GraphNode": [[371, "graphnode"]], "TreeNode": [[372, "treenode"]], "plot_tree": [[373, "plot-tree"]], "print_node_label": [[374, "print-node-label"]], "tangles.util.ui": [[375, "module-tangles.util.ui"]], "SplitGraph": [[376, "splitgraph"]], "draw_ellipses": [[377, "draw-ellipses"]], "draw_side_and_boundary": [[378, "draw-side-and-boundary"]], "draw_stacked_circles": [[379, "draw-stacked-circles"]], "XYPicker": [[380, "xypicker"]], "show": [[381, "show"]], "update": [[382, "update"]], "plot_annotated": [[383, "plot-annotated"]], "wrap_annotation_func_ax": [[384, "wrap-annotation-func-ax"]], "Reference": [[385, "reference"]], "Mindsets - Survey Tangles": [[386, "mindsets-survey-tangles"]], "Preparing, Cleaning and Selecting Data": [[386, "preparing-cleaning-and-selecting-data"]], "A simple tangle analysis": [[386, "a-simple-tangle-analysis"]], "Summary": [[386, "summary"]], "Tutorials": [[387, "tutorials"]]}, "indexentries": {"module": [[1, "module-tangles"], [68, "module-tangles.agreement"], [74, "module-tangles.analysis"], [81, "module-tangles.convenience"], [199, "module-tangles.guiding"], [203, "module-tangles.search"], [204, "module-tangles.search.extending_tangles"], [207, "module-tangles.search.progress"], [209, "module-tangles.separations"], [266, "module-tangles.separations.atomic_sets"], [271, "module-tangles.separations.finding"], [283, "module-tangles.separations.util"], [287, "module-tangles.util"], [288, "module-tangles.util.entropy"], [295, "module-tangles.util.graph"], [297, "module-tangles.util.graph.cut_weight"], [313, "module-tangles.util.graph.minor"], [317, "module-tangles.util.graph.similarity"], [324, "module-tangles.util.logic"], [331, "module-tangles.util.logic.sep_to_term"], [334, "module-tangles.util.logic.term"], [336, "module-tangles.util.matrix_order"], [344, "module-tangles.util.preprocessing"], [348, "module-tangles.util.tree"], [375, "module-tangles.util.ui"]], "tangles": [[1, "module-tangles"]], "ftreenode (class in tangles)": [[2, "tangles.FTreeNode"]], "children() (tangles.ftreenode method)": [[3, "tangles.FTreeNode.children"]], "copy() (tangles.ftreenode method)": [[4, "tangles.FTreeNode.copy"]], "copy_subtree() (tangles.ftreenode method)": [[5, "tangles.FTreeNode.copy_subtree"]], "copy_subtree_into_children() (tangles.ftreenode method)": [[6, "tangles.FTreeNode.copy_subtree_into_children"]], "detach() (tangles.ftreenode method)": [[7, "tangles.FTreeNode.detach"]], "from_indicator_matrix() (tangles.ftreenode class method)": [[8, "tangles.FTreeNode.from_indicator_matrix"]], "is_leaf() (tangles.ftreenode method)": [[9, "tangles.FTreeNode.is_leaf"]], "leaves_in_subtree() (tangles.ftreenode method)": [[10, "tangles.FTreeNode.leaves_in_subtree"]], "level() (tangles.ftreenode method)": [[11, "tangles.FTreeNode.level"]], "level_in_subtree() (tangles.ftreenode method)": [[12, "tangles.FTreeNode.level_in_subtree"]], "path_from_root_indicator() (tangles.ftreenode method)": [[13, "tangles.FTreeNode.path_from_root_indicator"]], "set_left_child() (tangles.ftreenode method)": [[14, "tangles.FTreeNode.set_left_child"]], "set_right_child() (tangles.ftreenode method)": [[15, "tangles.FTreeNode.set_right_child"]], "to_indicator_matrix() (tangles.ftreenode static method)": [[16, "tangles.FTreeNode.to_indicator_matrix"]], "tangle (class in tangles)": [[17, "tangles.Tangle"]], "children() (tangles.tangle method)": [[18, "tangles.Tangle.children"]], "copy() (tangles.tangle method)": [[19, "tangles.Tangle.copy"]], "copy_subtree() (tangles.tangle method)": [[20, "tangles.Tangle.copy_subtree"]], "copy_subtree_into_children() (tangles.tangle method)": [[21, "tangles.Tangle.copy_subtree_into_children"]], "detach() (tangles.tangle method)": [[22, "tangles.Tangle.detach"]], "equal_data() (tangles.tangle method)": [[23, "tangles.Tangle.equal_data"]], "from_indicator_matrix() (tangles.tangle class method)": [[24, "tangles.Tangle.from_indicator_matrix"]], "is_leaf() (tangles.tangle method)": [[25, "tangles.Tangle.is_leaf"]], "leaves_in_subtree() (tangles.tangle method)": [[26, "tangles.Tangle.leaves_in_subtree"]], "level() (tangles.tangle method)": [[27, "tangles.Tangle.level"]], "level_in_subtree() (tangles.tangle method)": [[28, "tangles.Tangle.level_in_subtree"]], "open() (tangles.tangle method)": [[29, "tangles.Tangle.open"]], "path_from_root_indicator() (tangles.tangle method)": [[30, "tangles.Tangle.path_from_root_indicator"]], "set_left_child() (tangles.tangle method)": [[31, "tangles.Tangle.set_left_child"]], "set_right_child() (tangles.tangle method)": [[32, "tangles.Tangle.set_right_child"]], "to_indicator_matrix() (tangles.tangle static method)": [[33, "tangles.Tangle.to_indicator_matrix"]], "tanglesearchtree (class in tangles)": [[34, "tangles.TangleSearchTree"]], "get_efficient_distinguishers() (tangles.tanglesearchtree method)": [[35, "tangles.TangleSearchTree.get_efficient_distinguishers"]], "k_tangles() (tangles.tanglesearchtree method)": [[36, "tangles.TangleSearchTree.k_tangles"]], "limit (tangles.tanglesearchtree property)": [[37, "tangles.TangleSearchTree.limit"]], "load() (tangles.tanglesearchtree static method)": [[38, "tangles.TangleSearchTree.load"]], "maximal_tangles() (tangles.tanglesearchtree method)": [[39, "tangles.TangleSearchTree.maximal_tangles"]], "number_of_separations (tangles.tanglesearchtree property)": [[40, "tangles.TangleSearchTree.number_of_separations"]], "root (tangles.tanglesearchtree property)": [[41, "tangles.TangleSearchTree.root"]], "save() (tangles.tanglesearchtree method)": [[42, "tangles.TangleSearchTree.save"]], "search_tree() (tangles.tanglesearchtree method)": [[43, "tangles.TangleSearchTree.search_tree"]], "sep_ids (tangles.tanglesearchtree property)": [[44, "tangles.TangleSearchTree.sep_ids"]], "tangle_matrix() (tangles.tanglesearchtree method)": [[45, "tangles.TangleSearchTree.tangle_matrix"]], "tree_height_for_agreement() (tangles.tanglesearchtree method)": [[46, "tangles.TangleSearchTree.tree_height_for_agreement"]], "tanglesweep (class in tangles)": [[47, "tangles.TangleSweep"]], "append_separation() (tangles.tanglesweep method)": [[48, "tangles.TangleSweep.append_separation"]], "greedy_search() (tangles.tanglesweep method)": [[49, "tangles.TangleSweep.greedy_search"]], "insert_separation() (tangles.tanglesweep method)": [[50, "tangles.TangleSweep.insert_separation"]], "sweep_below() (tangles.tanglesweep method)": [[51, "tangles.TangleSweep.sweep_below"]], "sweep_one() (tangles.tanglesweep method)": [[52, "tangles.TangleSweep.sweep_one"]], "tree (tangles.tanglesweep property)": [[53, "tangles.TangleSweep.tree"]], "totedge (class in tangles)": [[54, "tangles.ToTEdge"]], "other_end() (tangles.totedge method)": [[55, "tangles.ToTEdge.other_end"]], "totnode (class in tangles)": [[56, "tangles.ToTNode"]], "degree() (tangles.totnode method)": [[57, "tangles.ToTNode.degree"]], "is_leaf() (tangles.totnode method)": [[58, "tangles.ToTNode.is_leaf"]], "neighbours (tangles.totnode property)": [[59, "tangles.ToTNode.neighbours"]], "set_label() (tangles.totnode method)": [[60, "tangles.ToTNode.set_label"]], "treeoftangles (class in tangles)": [[61, "tangles.TreeOfTangles"]], "any_node() (tangles.treeoftangles method)": [[62, "tangles.TreeOfTangles.any_node"]], "uncrossingsweep (class in tangles)": [[63, "tangles.UncrossingSweep"]], "sweep_below() (tangles.uncrossingsweep method)": [[64, "tangles.UncrossingSweep.sweep_below"]], "sweep_one() (tangles.uncrossingsweep method)": [[65, "tangles.UncrossingSweep.sweep_one"]], "tangle_matrix() (tangles.uncrossingsweep method)": [[66, "tangles.UncrossingSweep.tangle_matrix"]], "tree (tangles.uncrossingsweep property)": [[67, "tangles.UncrossingSweep.tree"]], "tangles.agreement": [[68, "module-tangles.agreement"]], "agreementfunc (class in tangles.agreement)": [[69, "tangles.agreement.AgreementFunc"]], "agreementfuncbitarray (class in tangles.agreement)": [[70, "tangles.agreement.AgreementFuncBitarray"]], "agreementfuncbitarraybips (class in tangles.agreement)": [[71, "tangles.agreement.AgreementFuncBitarrayBips"]], "calculateagreement (class in tangles.agreement)": [[72, "tangles.agreement.CalculateAgreement"]], "agreement_func() (in module tangles)": [[73, "tangles.agreement_func"]], "tangles.analysis": [[74, "module-tangles.analysis"]], "coherence_levels() (in module tangles.analysis)": [[75, "tangles.analysis.coherence_levels"]], "complexity_levels() (in module tangles.analysis)": [[76, "tangles.analysis.complexity_levels"]], "hard_clustering_tuebingen() (in module tangles.analysis)": [[77, "tangles.analysis.hard_clustering_tuebingen"]], "soft_clustering_tuebingen() (in module tangles.analysis)": [[78, "tangles.analysis.soft_clustering_tuebingen"]], "tangle_score() (in module tangles.analysis)": [[79, "tangles.analysis.tangle_score"]], "visibility() (in module tangles.analysis)": [[80, "tangles.analysis.visibility"]], "tangles.convenience": [[81, "module-tangles.convenience"]], "nominalvariablevalues (class in tangles.convenience)": [[82, "tangles.convenience.NominalVariableValues"]], "invert_op() (tangles.convenience.nominalvariablevalues static method)": [[83, "tangles.convenience.NominalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.nominalvariablevalues method)": [[84, "tangles.convenience.NominalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.nominalvariablevalues method)": [[85, "tangles.convenience.NominalVariableValues.update_values_for_specification"]], "numericalvariablevalues (class in tangles.convenience)": [[86, "tangles.convenience.NumericalVariableValues"]], "invert_op() (tangles.convenience.numericalvariablevalues static method)": [[87, "tangles.convenience.NumericalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.numericalvariablevalues method)": [[88, "tangles.convenience.NumericalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.numericalvariablevalues method)": [[89, "tangles.convenience.NumericalVariableValues.update_values_for_specification"]], "orderfunctiono1 (class in tangles.convenience)": [[90, "tangles.convenience.OrderFunctionO1"]], "orderfunctiono1biased (class in tangles.convenience)": [[91, "tangles.convenience.OrderFunctionO1biased"]], "orderfunctiono2 (class in tangles.convenience)": [[92, "tangles.convenience.OrderFunctionO2"]], "orderfunctiono3 (class in tangles.convenience)": [[93, "tangles.convenience.OrderFunctionO3"]], "orderfunctiono4 (class in tangles.convenience)": [[94, "tangles.convenience.OrderFunctionO4"]], "ordinalvariablevalues (class in tangles.convenience)": [[95, "tangles.convenience.OrdinalVariableValues"]], "invert_op() (tangles.convenience.ordinalvariablevalues static method)": [[96, "tangles.convenience.OrdinalVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.ordinalvariablevalues method)": [[97, "tangles.convenience.OrdinalVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.ordinalvariablevalues method)": [[98, "tangles.convenience.OrdinalVariableValues.update_values_for_specification"]], "simplesurveyfeaturefactory (class in tangles.convenience)": [[99, "tangles.convenience.SimpleSurveyFeatureFactory"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory method)": [[100, "tangles.convenience.SimpleSurveyFeatureFactory.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory method)": [[101, "tangles.convenience.SimpleSurveyFeatureFactory.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesbothsides (class in tangles.convenience)": [[102, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesbothsides method)": [[103, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesbothsides method)": [[104, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesBothSides.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesimplicit (class in tangles.convenience)": [[105, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesimplicit method)": [[106, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesimplicit method)": [[107, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesImplicit.create_features_for_single_col"]], "simplesurveyfeaturefactory_missingvaluesownfeatures (class in tangles.convenience)": [[108, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures"]], "create_features() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesownfeatures method)": [[109, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features"]], "create_features_for_single_col() (tangles.convenience.simplesurveyfeaturefactory_missingvaluesownfeatures method)": [[110, "tangles.convenience.SimpleSurveyFeatureFactory_MissingValuesOwnFeatures.create_features_for_single_col"]], "survey (class in tangles.convenience)": [[111, "tangles.convenience.Survey"]], "__getitem__() (tangles.convenience.survey method)": [[112, "tangles.convenience.Survey.__getitem__"]], "check_variables() (tangles.convenience.survey method)": [[113, "tangles.convenience.Survey.check_variables"]], "complete_rows() (tangles.convenience.survey method)": [[114, "tangles.convenience.Survey.complete_rows"]], "copy() (tangles.convenience.survey method)": [[115, "tangles.convenience.Survey.copy"]], "count_number_of_unique_answers() (tangles.convenience.survey method)": [[116, "tangles.convenience.Survey.count_number_of_unique_answers"]], "count_valid_answers_per_respondent() (tangles.convenience.survey method)": [[117, "tangles.convenience.Survey.count_valid_answers_per_respondent"]], "guess_missing_variable_ranges() (tangles.convenience.survey method)": [[118, "tangles.convenience.Survey.guess_missing_variable_ranges"]], "guess_missing_variable_types() (tangles.convenience.survey method)": [[119, "tangles.convenience.Survey.guess_missing_variable_types"]], "interpret_column_selection() (tangles.convenience.survey method)": [[120, "tangles.convenience.Survey.interpret_column_selection"]], "load() (tangles.convenience.survey static method)": [[121, "tangles.convenience.Survey.load"]], "num_questions (tangles.convenience.survey property)": [[122, "tangles.convenience.Survey.num_questions"]], "num_respondents (tangles.convenience.survey property)": [[123, "tangles.convenience.Survey.num_respondents"]], "replace_variable_names() (tangles.convenience.survey method)": [[124, "tangles.convenience.Survey.replace_variable_names"]], "replace_variable_value_labels() (tangles.convenience.survey method)": [[125, "tangles.convenience.Survey.replace_variable_value_labels"]], "replace_variable_values() (tangles.convenience.survey method)": [[126, "tangles.convenience.Survey.replace_variable_values"]], "save() (tangles.convenience.survey method)": [[127, "tangles.convenience.Survey.save"]], "select_questions() (tangles.convenience.survey method)": [[128, "tangles.convenience.Survey.select_questions"]], "select_respondents() (tangles.convenience.survey method)": [[129, "tangles.convenience.Survey.select_respondents"]], "set_pyreadstat_meta_data() (tangles.convenience.survey method)": [[130, "tangles.convenience.Survey.set_pyreadstat_meta_data"]], "set_variable_labels() (tangles.convenience.survey method)": [[131, "tangles.convenience.Survey.set_variable_labels"]], "set_variable_types() (tangles.convenience.survey method)": [[132, "tangles.convenience.Survey.set_variable_types"]], "set_variable_value_lists() (tangles.convenience.survey method)": [[133, "tangles.convenience.Survey.set_variable_value_lists"]], "shape (tangles.convenience.survey property)": [[134, "tangles.convenience.Survey.shape"]], "summarize() (tangles.convenience.survey method)": [[135, "tangles.convenience.Survey.summarize"]], "variable_info() (tangles.convenience.survey method)": [[136, "tangles.convenience.Survey.variable_info"]], "surveyfeaturefactory (class in tangles.convenience)": [[137, "tangles.convenience.SurveyFeatureFactory"]], "create_features() (tangles.convenience.surveyfeaturefactory method)": [[138, "tangles.convenience.SurveyFeatureFactory.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactory method)": [[139, "tangles.convenience.SurveyFeatureFactory.create_features_for_single_col"]], "surveyfeaturefactorydecorator (class in tangles.convenience)": [[140, "tangles.convenience.SurveyFeatureFactoryDecorator"]], "create_features() (tangles.convenience.surveyfeaturefactorydecorator method)": [[141, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactorydecorator method)": [[142, "tangles.convenience.SurveyFeatureFactoryDecorator.create_features_for_single_col"]], "surveyfeaturefactory_cherrypicker (class in tangles.convenience)": [[143, "tangles.convenience.SurveyFeatureFactory_CherryPicker"]], "create_features() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[144, "tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features"]], "create_features_for_single_col() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[145, "tangles.convenience.SurveyFeatureFactory_CherryPicker.create_features_for_single_col"]], "set_factoryfunc() (tangles.convenience.surveyfeaturefactory_cherrypicker method)": [[146, "tangles.convenience.SurveyFeatureFactory_CherryPicker.set_factoryfunc"]], "surveytangles (class in tangles.convenience)": [[147, "tangles.convenience.SurveyTangles"]], "change_agreement() (tangles.convenience.surveytangles method)": [[148, "tangles.convenience.SurveyTangles.change_agreement"]], "feature_system (tangles.convenience.surveytangles property)": [[149, "tangles.convenience.SurveyTangles.feature_system"]], "initialize_search() (tangles.convenience.surveytangles method)": [[150, "tangles.convenience.SurveyTangles.initialize_search"]], "ordered_metadata() (tangles.convenience.surveytangles method)": [[151, "tangles.convenience.SurveyTangles.ordered_metadata"]], "search() (tangles.convenience.surveytangles class method)": [[152, "tangles.convenience.SurveyTangles.search"]], "sepcified_features() (tangles.convenience.surveytangles method)": [[153, "tangles.convenience.SurveyTangles.sepcified_features"]], "tangle_matrix() (tangles.convenience.surveytangles method)": [[154, "tangles.convenience.SurveyTangles.tangle_matrix"]], "typical_answers() (tangles.convenience.surveytangles method)": [[155, "tangles.convenience.SurveyTangles.typical_answers"]], "valid_agreement_lower_bound (tangles.convenience.surveytangles property)": [[156, "tangles.convenience.SurveyTangles.valid_agreement_lower_bound"]], "surveyvariable (class in tangles.convenience)": [[157, "tangles.convenience.SurveyVariable"]], "add_values() (tangles.convenience.surveyvariable method)": [[158, "tangles.convenience.SurveyVariable.add_values"]], "all_values_as_list() (tangles.convenience.surveyvariable method)": [[159, "tangles.convenience.SurveyVariable.all_values_as_list"]], "create_values() (tangles.convenience.surveyvariable method)": [[160, "tangles.convenience.SurveyVariable.create_values"]], "invalid_values_as_list() (tangles.convenience.surveyvariable method)": [[161, "tangles.convenience.SurveyVariable.invalid_values_as_list"]], "is_nominal_type() (tangles.convenience.surveyvariable method)": [[162, "tangles.convenience.SurveyVariable.is_nominal_type"]], "is_numeric_type() (tangles.convenience.surveyvariable method)": [[163, "tangles.convenience.SurveyVariable.is_numeric_type"]], "is_ordinal_type() (tangles.convenience.surveyvariable method)": [[164, "tangles.convenience.SurveyVariable.is_ordinal_type"]], "is_valid_type() (tangles.convenience.surveyvariable method)": [[165, "tangles.convenience.SurveyVariable.is_valid_type"]], "is_valid_type_name() (tangles.convenience.surveyvariable static method)": [[166, "tangles.convenience.SurveyVariable.is_valid_type_name"]], "replace_values() (tangles.convenience.surveyvariable method)": [[167, "tangles.convenience.SurveyVariable.replace_values"]], "set_value_labels() (tangles.convenience.surveyvariable method)": [[168, "tangles.convenience.SurveyVariable.set_value_labels"]], "set_values() (tangles.convenience.surveyvariable method)": [[169, "tangles.convenience.SurveyVariable.set_values"]], "to_row() (tangles.convenience.surveyvariable method)": [[170, "tangles.convenience.SurveyVariable.to_row"]], "valid_values_as_list() (tangles.convenience.surveyvariable method)": [[171, "tangles.convenience.SurveyVariable.valid_values_as_list"]], "value_class() (tangles.convenience.surveyvariable method)": [[172, "tangles.convenience.SurveyVariable.value_class"]], "surveyvariablevalues (class in tangles.convenience)": [[173, "tangles.convenience.SurveyVariableValues"]], "invert_op() (tangles.convenience.surveyvariablevalues static method)": [[174, "tangles.convenience.SurveyVariableValues.invert_op"]], "possible_values_representation() (tangles.convenience.surveyvariablevalues method)": [[175, "tangles.convenience.SurveyVariableValues.possible_values_representation"]], "update_values_for_specification() (tangles.convenience.surveyvariablevalues method)": [[176, "tangles.convenience.SurveyVariableValues.update_values_for_specification"]], "tanglesweepfeaturesys (class in tangles.convenience)": [[177, "tangles.convenience.TangleSweepFeatureSys"]], "all_oriented_sep_ids (tangles.convenience.tanglesweepfeaturesys property)": [[178, "tangles.convenience.TangleSweepFeatureSys.all_oriented_sep_ids"]], "append_separation() (tangles.convenience.tanglesweepfeaturesys method)": [[179, "tangles.convenience.TangleSweepFeatureSys.append_separation"]], "greedy_search() (tangles.convenience.tanglesweepfeaturesys method)": [[180, "tangles.convenience.TangleSweepFeatureSys.greedy_search"]], "insert_separation() (tangles.convenience.tanglesweepfeaturesys method)": [[181, "tangles.convenience.TangleSweepFeatureSys.insert_separation"]], "lower_agreement() (tangles.convenience.tanglesweepfeaturesys method)": [[182, "tangles.convenience.TangleSweepFeatureSys.lower_agreement"]], "original_sep_ids (tangles.convenience.tanglesweepfeaturesys property)": [[183, "tangles.convenience.TangleSweepFeatureSys.original_sep_ids"]], "sweep_below() (tangles.convenience.tanglesweepfeaturesys method)": [[184, "tangles.convenience.TangleSweepFeatureSys.sweep_below"]], "sweep_one() (tangles.convenience.tanglesweepfeaturesys method)": [[185, "tangles.convenience.TangleSweepFeatureSys.sweep_one"]], "tangle_matrix() (tangles.convenience.tanglesweepfeaturesys method)": [[186, "tangles.convenience.TangleSweepFeatureSys.tangle_matrix"]], "tree (tangles.convenience.tanglesweepfeaturesys property)": [[187, "tangles.convenience.TangleSweepFeatureSys.tree"]], "unionofintervals (class in tangles.convenience)": [[188, "tangles.convenience.UnionOfIntervals"]], "binary_unique_value_features() (in module tangles.convenience)": [[189, "tangles.convenience.binary_unique_value_features"]], "extensive_numericvar_features() (in module tangles.convenience)": [[190, "tangles.convenience.extensive_numericvar_features"]], "feats2seps_invalids_to_both_sides() (in module tangles.convenience)": [[191, "tangles.convenience.feats2seps_invalids_to_both_sides"]], "nominalvar_features_all_cats() (in module tangles.convenience)": [[192, "tangles.convenience.nominalvar_features_all_cats"]], "numericvar_features_inside_regular_bins() (in module tangles.convenience)": [[193, "tangles.convenience.numericvar_features_inside_regular_bins"]], "numericvar_features_split_regular_ge() (in module tangles.convenience)": [[194, "tangles.convenience.numericvar_features_split_regular_ge"]], "ordinalvar_features_ge_all_splits() (in module tangles.convenience)": [[195, "tangles.convenience.ordinalvar_features_ge_all_splits"]], "search_tangles() (in module tangles.convenience)": [[196, "tangles.convenience.search_tangles"]], "search_tangles_uncrossed() (in module tangles.convenience)": [[197, "tangles.convenience.search_tangles_uncrossed"]], "simple_unique_value_features() (in module tangles.convenience)": [[198, "tangles.convenience.simple_unique_value_features"]], "tangles.guiding": [[199, "module-tangles.guiding"]], "get_tangle_by_path() (in module tangles.guiding)": [[200, "tangles.guiding.get_tangle_by_path"]], "guided_tangle() (in module tangles.guiding)": [[201, "tangles.guiding.guided_tangle"]], "is_guiding() (in module tangles.guiding)": [[202, "tangles.guiding.is_guiding"]], "tangles.search": [[203, "module-tangles.search"]], "tangles.search.extending_tangles": [[204, "module-tangles.search.extending_tangles"]], "extendingtangles (class in tangles.search.extending_tangles)": [[205, "tangles.search.extending_tangles.ExtendingTangles"]], "extend_tangles() (tangles.search.extending_tangles.extendingtangles method)": [[206, "tangles.search.extending_tangles.ExtendingTangles.extend_tangles"]], "tangles.search.progress": [[207, "module-tangles.search.progress"]], "defaultprogresscallback (class in tangles.search.progress)": [[208, "tangles.search.progress.DefaultProgressCallback"]], "tangles.separations": [[209, "module-tangles.separations"]], "featuresystem (class in tangles.separations)": [[210, "tangles.separations.FeatureSystem"]], "__getitem__() (tangles.separations.featuresystem method)": [[211, "tangles.separations.FeatureSystem.__getitem__"]], "add_features() (tangles.separations.featuresystem method)": [[212, "tangles.separations.FeatureSystem.add_features"]], "add_seps() (tangles.separations.featuresystem method)": [[213, "tangles.separations.FeatureSystem.add_seps"]], "all_feature_ids() (tangles.separations.featuresystem method)": [[214, "tangles.separations.FeatureSystem.all_feature_ids"]], "all_sep_ids() (tangles.separations.featuresystem method)": [[215, "tangles.separations.FeatureSystem.all_sep_ids"]], "assemble_meta_info() (tangles.separations.featuresystem method)": [[216, "tangles.separations.FeatureSystem.assemble_meta_info"]], "compute_infimum() (tangles.separations.featuresystem method)": [[217, "tangles.separations.FeatureSystem.compute_infimum"]], "crossing_seps() (tangles.separations.featuresystem method)": [[218, "tangles.separations.FeatureSystem.crossing_seps"]], "feature_metadata() (tangles.separations.featuresystem method)": [[219, "tangles.separations.FeatureSystem.feature_metadata"]], "get_corners() (tangles.separations.featuresystem method)": [[220, "tangles.separations.FeatureSystem.get_corners"]], "get_feature_ids() (tangles.separations.featuresystem method)": [[221, "tangles.separations.FeatureSystem.get_feature_ids"]], "get_sep_ids() (tangles.separations.featuresystem method)": [[222, "tangles.separations.FeatureSystem.get_sep_ids"]], "infimum_of_two() (tangles.separations.featuresystem method)": [[223, "tangles.separations.FeatureSystem.infimum_of_two"]], "is_le() (tangles.separations.featuresystem method)": [[224, "tangles.separations.FeatureSystem.is_le"]], "is_nested() (tangles.separations.featuresystem method)": [[225, "tangles.separations.FeatureSystem.is_nested"]], "is_subset() (tangles.separations.featuresystem method)": [[226, "tangles.separations.FeatureSystem.is_subset"]], "metadata_matrix() (tangles.separations.featuresystem method)": [[227, "tangles.separations.FeatureSystem.metadata_matrix"]], "separation_metadata() (tangles.separations.featuresystem method)": [[228, "tangles.separations.FeatureSystem.separation_metadata"]], "with_array() (tangles.separations.featuresystem class method)": [[229, "tangles.separations.FeatureSystem.with_array"]], "with_sparse_array() (tangles.separations.featuresystem class method)": [[230, "tangles.separations.FeatureSystem.with_sparse_array"]], "metadata (class in tangles.separations)": [[231, "tangles.separations.MetaData"]], "append() (tangles.separations.metadata method)": [[232, "tangles.separations.MetaData.append"]], "setseparationsystem (class in tangles.separations)": [[233, "tangles.separations.SetSeparationSystem"]], "__getitem__() (tangles.separations.setseparationsystem method)": [[234, "tangles.separations.SetSeparationSystem.__getitem__"]], "add_seps() (tangles.separations.setseparationsystem method)": [[235, "tangles.separations.SetSeparationSystem.add_seps"]], "all_sep_ids() (tangles.separations.setseparationsystem method)": [[236, "tangles.separations.SetSeparationSystem.all_sep_ids"]], "assemble_meta_info() (tangles.separations.setseparationsystem method)": [[237, "tangles.separations.SetSeparationSystem.assemble_meta_info"]], "compute_infimum() (tangles.separations.setseparationsystem method)": [[238, "tangles.separations.SetSeparationSystem.compute_infimum"]], "crossing_seps() (tangles.separations.setseparationsystem method)": [[239, "tangles.separations.SetSeparationSystem.crossing_seps"]], "get_corners() (tangles.separations.setseparationsystem method)": [[240, "tangles.separations.SetSeparationSystem.get_corners"]], "get_sep_ids() (tangles.separations.setseparationsystem method)": [[241, "tangles.separations.SetSeparationSystem.get_sep_ids"]], "infimum_of_two() (tangles.separations.setseparationsystem method)": [[242, "tangles.separations.SetSeparationSystem.infimum_of_two"]], "is_le() (tangles.separations.setseparationsystem method)": [[243, "tangles.separations.SetSeparationSystem.is_le"]], "is_nested() (tangles.separations.setseparationsystem method)": [[244, "tangles.separations.SetSeparationSystem.is_nested"]], "metadata_matrix() (tangles.separations.setseparationsystem method)": [[245, "tangles.separations.SetSeparationSystem.metadata_matrix"]], "separation_metadata() (tangles.separations.setseparationsystem method)": [[246, "tangles.separations.SetSeparationSystem.separation_metadata"]], "with_array() (tangles.separations.setseparationsystem class method)": [[247, "tangles.separations.SetSeparationSystem.with_array"]], "with_sparse_array() (tangles.separations.setseparationsystem class method)": [[248, "tangles.separations.SetSeparationSystem.with_sparse_array"]], "setseparationsystembase (class in tangles.separations)": [[249, "tangles.separations.SetSeparationSystemBase"]], "__getitem__() (tangles.separations.setseparationsystembase method)": [[250, "tangles.separations.SetSeparationSystemBase.__getitem__"]], "add_seps() (tangles.separations.setseparationsystembase method)": [[251, "tangles.separations.SetSeparationSystemBase.add_seps"]], "all_sep_ids() (tangles.separations.setseparationsystembase method)": [[252, "tangles.separations.SetSeparationSystemBase.all_sep_ids"]], "assemble_meta_info() (tangles.separations.setseparationsystembase method)": [[253, "tangles.separations.SetSeparationSystemBase.assemble_meta_info"]], "compute_infimum() (tangles.separations.setseparationsystembase method)": [[254, "tangles.separations.SetSeparationSystemBase.compute_infimum"]], "crossing_seps() (tangles.separations.setseparationsystembase method)": [[255, "tangles.separations.SetSeparationSystemBase.crossing_seps"]], "get_corners() (tangles.separations.setseparationsystembase method)": [[256, "tangles.separations.SetSeparationSystemBase.get_corners"]], "get_sep_ids() (tangles.separations.setseparationsystembase method)": [[257, "tangles.separations.SetSeparationSystemBase.get_sep_ids"]], "infimum_of_two() (tangles.separations.setseparationsystembase method)": [[258, "tangles.separations.SetSeparationSystemBase.infimum_of_two"]], "is_le() (tangles.separations.setseparationsystembase method)": [[259, "tangles.separations.SetSeparationSystemBase.is_le"]], "is_nested() (tangles.separations.setseparationsystembase method)": [[260, "tangles.separations.SetSeparationSystemBase.is_nested"]], "metadata_matrix() (tangles.separations.setseparationsystembase method)": [[261, "tangles.separations.SetSeparationSystemBase.metadata_matrix"]], "separation_metadata() (tangles.separations.setseparationsystembase method)": [[262, "tangles.separations.SetSeparationSystemBase.separation_metadata"]], "with_array() (tangles.separations.setseparationsystembase class method)": [[263, "tangles.separations.SetSeparationSystemBase.with_array"]], "with_sparse_array() (tangles.separations.setseparationsystembase class method)": [[264, "tangles.separations.SetSeparationSystemBase.with_sparse_array"]], "setseparationsystemorderfunc (class in tangles.separations)": [[265, "tangles.separations.SetSeparationSystemOrderFunc"]], "tangles.separations.atomic_sets": [[266, "module-tangles.separations.atomic_sets"]], "atomic_set_indicators() (in module tangles.separations.atomic_sets)": [[267, "tangles.separations.atomic_sets.atomic_set_indicators"]], "atomic_sets() (in module tangles.separations.atomic_sets)": [[268, "tangles.separations.atomic_sets.atomic_sets"]], "atomic_to_seps() (in module tangles.separations.atomic_sets)": [[269, "tangles.separations.atomic_sets.atomic_to_seps"]], "seps_to_atomic() (in module tangles.separations.atomic_sets)": [[270, "tangles.separations.atomic_sets.seps_to_atomic"]], "tangles.separations.finding": [[271, "module-tangles.separations.finding"]], "orderfuncderivative (class in tangles.separations.finding)": [[272, "tangles.separations.finding.OrderFuncDerivative"]], "change_discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[273, "tangles.separations.finding.OrderFuncDerivative.change_discrete_derivative"]], "discrete_derivative() (tangles.separations.finding.orderfuncderivative method)": [[274, "tangles.separations.finding.OrderFuncDerivative.discrete_derivative"]], "add_all_corners_of_features() (in module tangles.separations.finding)": [[275, "tangles.separations.finding.add_all_corners_of_features"]], "min_s_t_cut() (in module tangles.separations.finding)": [[276, "tangles.separations.finding.min_S_T_cut"]], "minimize_cut() (in module tangles.separations.finding)": [[277, "tangles.separations.finding.minimize_cut"]], "nodal_domains() (in module tangles.separations.finding)": [[278, "tangles.separations.finding.nodal_domains"]], "pca_features() (in module tangles.separations.finding)": [[279, "tangles.separations.finding.pca_features"]], "random_features() (in module tangles.separations.finding)": [[280, "tangles.separations.finding.random_features"]], "spectral_features() (in module tangles.separations.finding)": [[281, "tangles.separations.finding.spectral_features"]], "spectral_features_splitted() (in module tangles.separations.finding)": [[282, "tangles.separations.finding.spectral_features_splitted"]], "tangles.separations.util": [[283, "module-tangles.separations.util"]], "order_func_balance() (in module tangles.separations.util)": [[284, "tangles.separations.util.order_func_balance"]], "order_func_min_side_size() (in module tangles.separations.util)": [[285, "tangles.separations.util.order_func_min_side_size"]], "uncross_distinguishers() (in module tangles)": [[286, "tangles.uncross_distinguishers"]], "tangles.util": [[287, "module-tangles.util"]], "tangles.util.entropy": [[288, "module-tangles.util.entropy"]], "colsplit_mutual_information() (in module tangles.util.entropy)": [[289, "tangles.util.entropy.colsplit_mutual_information"]], "datapointwise_information_gains() (in module tangles.util.entropy)": [[290, "tangles.util.entropy.datapointwise_information_gains"]], "entropy() (in module tangles.util.entropy)": [[291, "tangles.util.entropy.entropy"]], "information_gain() (in module tangles.util.entropy)": [[292, "tangles.util.entropy.information_gain"]], "joint_entropy() (in module tangles.util.entropy)": [[293, "tangles.util.entropy.joint_entropy"]], "pairwise_mutual_information() (in module tangles.util.entropy)": [[294, "tangles.util.entropy.pairwise_mutual_information"]], "tangles.util.graph": [[295, "module-tangles.util.graph"]], "connected_component_indicators() (in module tangles.util.graph)": [[296, "tangles.util.graph.connected_component_indicators"]], "tangles.util.graph.cut_weight": [[297, "module-tangles.util.graph.cut_weight"]], "cutweightorder (class in tangles.util.graph.cut_weight)": [[298, "tangles.util.graph.cut_weight.CutWeightOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[299, "tangles.util.graph.cut_weight.CutWeightOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.cutweightorder method)": [[300, "tangles.util.graph.cut_weight.CutWeightOrder.discrete_derivative"]], "ncutorder (class in tangles.util.graph.cut_weight)": [[301, "tangles.util.graph.cut_weight.NCutOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[302, "tangles.util.graph.cut_weight.NCutOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.ncutorder method)": [[303, "tangles.util.graph.cut_weight.NCutOrder.discrete_derivative"]], "ratiocutorder (class in tangles.util.graph.cut_weight)": [[304, "tangles.util.graph.cut_weight.RatioCutOrder"]], "change_discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[305, "tangles.util.graph.cut_weight.RatioCutOrder.change_discrete_derivative"]], "discrete_derivative() (tangles.util.graph.cut_weight.ratiocutorder method)": [[306, "tangles.util.graph.cut_weight.RatioCutOrder.discrete_derivative"]], "cut_weight_order() (in module tangles.util.graph.cut_weight)": [[307, "tangles.util.graph.cut_weight.cut_weight_order"]], "ncut_order() (in module tangles.util.graph.cut_weight)": [[308, "tangles.util.graph.cut_weight.ncut_order"]], "ratiocut_order() (in module tangles.util.graph.cut_weight)": [[309, "tangles.util.graph.cut_weight.ratiocut_order"]], "greedy_neighborhood() (in module tangles.util.graph)": [[310, "tangles.util.graph.greedy_neighborhood"]], "greedy_neighborhood_old() (in module tangles.util.graph)": [[311, "tangles.util.graph.greedy_neighborhood_old"]], "laplacian() (in module tangles.util.graph)": [[312, "tangles.util.graph.laplacian"]], "tangles.util.graph.minor": [[313, "module-tangles.util.graph.minor"]], "contract_graph() (in module tangles.util.graph.minor)": [[314, "tangles.util.graph.minor.contract_graph"]], "modularity_matrix() (in module tangles.util.graph)": [[315, "tangles.util.graph.modularity_matrix"]], "normalized_laplacian() (in module tangles.util.graph)": [[316, "tangles.util.graph.normalized_laplacian"]], "tangles.util.graph.similarity": [[317, "module-tangles.util.graph.similarity"]], "cosine_similarity() (in module tangles.util.graph.similarity)": [[318, "tangles.util.graph.similarity.cosine_similarity"]], "cosine_similarity_graph_csr_data() (in module tangles.util.graph.similarity)": [[319, "tangles.util.graph.similarity.cosine_similarity_graph_csr_data"]], "epsilon_neighborhood_graph() (in module tangles.util.graph.similarity)": [[320, "tangles.util.graph.similarity.epsilon_neighborhood_graph"]], "grid_distance_graph() (in module tangles.util.graph.similarity)": [[321, "tangles.util.graph.similarity.grid_distance_graph"]], "image_to_similarity_graph() (in module tangles.util.graph.similarity)": [[322, "tangles.util.graph.similarity.image_to_similarity_graph"]], "k_nearest_neighbors() (in module tangles.util.graph.similarity)": [[323, "tangles.util.graph.similarity.k_nearest_neighbors"]], "tangles.util.logic": [[324, "module-tangles.util.logic"]], "conjunctivenormalform (class in tangles.util.logic)": [[325, "tangles.util.logic.ConjunctiveNormalForm"]], "disjunctivenormalform (class in tangles.util.logic)": [[326, "tangles.util.logic.DisjunctiveNormalForm"]], "logicterm (class in tangles.util.logic)": [[327, "tangles.util.logic.LogicTerm"]], "textterm (class in tangles.util.logic)": [[328, "tangles.util.logic.TextTerm"]], "append() (in module tangles.util.logic)": [[329, "tangles.util.logic.append"]], "distribute() (in module tangles.util.logic)": [[330, "tangles.util.logic.distribute"]], "tangles.util.logic.sep_to_term": [[331, "module-tangles.util.logic.sep_to_term"]], "recursionlogic (class in tangles.util.logic.sep_to_term)": [[332, "tangles.util.logic.sep_to_term.RecursionLogic"]], "simplify() (in module tangles.util.logic)": [[333, "tangles.util.logic.simplify"]], "tangles.util.logic.term": [[334, "module-tangles.util.logic.term"]], "semantictextterm (class in tangles.util.logic.term)": [[335, "tangles.util.logic.term.SemanticTextTerm"]], "tangles.util.matrix_order": [[336, "module-tangles.util.matrix_order"]], "matrixordersvd (class in tangles.util.matrix_order)": [[337, "tangles.util.matrix_order.MatrixOrderSVD"]], "covariance_order() (in module tangles.util.matrix_order)": [[338, "tangles.util.matrix_order.covariance_order"]], "logdet_order() (in module tangles.util.matrix_order)": [[339, "tangles.util.matrix_order.logdet_order"]], "margin_order_matrix() (in module tangles.util.matrix_order)": [[340, "tangles.util.matrix_order.margin_order_matrix"]], "matrix_order() (in module tangles.util.matrix_order)": [[341, "tangles.util.matrix_order.matrix_order"]], "o_five() (in module tangles.util.matrix_order)": [[342, "tangles.util.matrix_order.o_five"]], "o_seven() (in module tangles.util.matrix_order)": [[343, "tangles.util.matrix_order.o_seven"]], "tangles.util.preprocessing": [[344, "module-tangles.util.preprocessing"]], "balance() (in module tangles.util.preprocessing)": [[345, "tangles.util.preprocessing.balance"]], "normalize_length() (in module tangles.util.preprocessing)": [[346, "tangles.util.preprocessing.normalize_length"]], "standardize() (in module tangles.util.preprocessing)": [[347, "tangles.util.preprocessing.standardize"]], "tangles.util.tree": [[348, "module-tangles.util.tree"]], "bintreenetworkx (class in tangles.util.tree)": [[349, "tangles.util.tree.BinTreeNetworkX"]], "draw() (tangles.util.tree.bintreenetworkx method)": [[350, "tangles.util.tree.BinTreeNetworkX.draw"]], "get_ids_from_label() (tangles.util.tree.bintreenetworkx method)": [[351, "tangles.util.tree.BinTreeNetworkX.get_ids_from_label"]], "get_label() (tangles.util.tree.bintreenetworkx method)": [[352, "tangles.util.tree.BinTreeNetworkX.get_label"]], "graph (tangles.util.tree.bintreenetworkx property)": [[353, "tangles.util.tree.BinTreeNetworkX.graph"]], "relabel() (tangles.util.tree.bintreenetworkx method)": [[354, "tangles.util.tree.BinTreeNetworkX.relabel"]], "tst_layout() (tangles.util.tree.bintreenetworkx method)": [[355, "tangles.util.tree.BinTreeNetworkX.tst_layout"]], "bintreenode (class in tangles.util.tree)": [[356, "tangles.util.tree.BinTreeNode"]], "children() (tangles.util.tree.bintreenode method)": [[357, "tangles.util.tree.BinTreeNode.children"]], "copy() (tangles.util.tree.bintreenode method)": [[358, "tangles.util.tree.BinTreeNode.copy"]], "copy_subtree() (tangles.util.tree.bintreenode method)": [[359, "tangles.util.tree.BinTreeNode.copy_subtree"]], "copy_subtree_into_children() (tangles.util.tree.bintreenode method)": [[360, "tangles.util.tree.BinTreeNode.copy_subtree_into_children"]], "detach() (tangles.util.tree.bintreenode method)": [[361, "tangles.util.tree.BinTreeNode.detach"]], "from_indicator_matrix() (tangles.util.tree.bintreenode class method)": [[362, "tangles.util.tree.BinTreeNode.from_indicator_matrix"]], "is_leaf() (tangles.util.tree.bintreenode method)": [[363, "tangles.util.tree.BinTreeNode.is_leaf"]], "leaves_in_subtree() (tangles.util.tree.bintreenode method)": [[364, "tangles.util.tree.BinTreeNode.leaves_in_subtree"]], "level() (tangles.util.tree.bintreenode method)": [[365, "tangles.util.tree.BinTreeNode.level"]], "level_in_subtree() (tangles.util.tree.bintreenode method)": [[366, "tangles.util.tree.BinTreeNode.level_in_subtree"]], "path_from_root_indicator() (tangles.util.tree.bintreenode method)": [[367, "tangles.util.tree.BinTreeNode.path_from_root_indicator"]], "set_left_child() (tangles.util.tree.bintreenode method)": [[368, "tangles.util.tree.BinTreeNode.set_left_child"]], "set_right_child() (tangles.util.tree.bintreenode method)": [[369, "tangles.util.tree.BinTreeNode.set_right_child"]], "to_indicator_matrix() (tangles.util.tree.bintreenode static method)": [[370, "tangles.util.tree.BinTreeNode.to_indicator_matrix"]], "graphnode (class in tangles.util.tree)": [[371, "tangles.util.tree.GraphNode"]], "treenode (class in tangles.util.tree)": [[372, "tangles.util.tree.TreeNode"]], "plot_tree() (in module tangles.util.tree)": [[373, "tangles.util.tree.plot_tree"]], "print_node_label() (in module tangles.util.tree)": [[374, "tangles.util.tree.print_node_label"]], "tangles.util.ui": [[375, "module-tangles.util.ui"]], "splitgraph (class in tangles.util.ui)": [[376, "tangles.util.ui.SplitGraph"]], "draw_ellipses() (tangles.util.ui.splitgraph method)": [[377, "tangles.util.ui.SplitGraph.draw_ellipses"]], "draw_side_and_boundary() (tangles.util.ui.splitgraph method)": [[378, "tangles.util.ui.SplitGraph.draw_side_and_boundary"]], "draw_stacked_circles() (tangles.util.ui.splitgraph method)": [[379, "tangles.util.ui.SplitGraph.draw_stacked_circles"]], "xypicker (class in tangles.util.ui)": [[380, "tangles.util.ui.XYPicker"]], "show() (tangles.util.ui.xypicker method)": [[381, "tangles.util.ui.XYPicker.show"]], "update() (tangles.util.ui.xypicker method)": [[382, "tangles.util.ui.XYPicker.update"]], "plot_annotated() (in module tangles.util.ui)": [[383, "tangles.util.ui.plot_annotated"]], "wrap_annotation_func_ax() (in module tangles.util.ui)": [[384, "tangles.util.ui.wrap_annotation_func_ax"]]}})